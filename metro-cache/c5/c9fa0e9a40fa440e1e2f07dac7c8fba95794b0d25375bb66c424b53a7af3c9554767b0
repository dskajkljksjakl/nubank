{"dependencies":[{"name":"is-what","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  var isWhat = _$$_REQUIRE(_dependencyMap[0], \"is-what\");\n\n  function mergeRecursively(origin, newComer, extensions) {\n    if (!isWhat.isPlainObject(newComer)) {\n      if (extensions && isWhat.isArray(extensions)) {\n        extensions.forEach(function (extend) {\n          newComer = extend(origin, newComer);\n        });\n      }\n\n      return newComer;\n    }\n\n    var newObject = isWhat.isPlainObject(origin) ? Object.keys(origin).reduce(function (carry, key) {\n      var targetVal = origin[key];\n      if (!Object.keys(newComer).includes(key)) carry[key] = targetVal;\n      return carry;\n    }, {}) : {};\n    return Object.keys(newComer).reduce(function (carry, key) {\n      var newVal = newComer[key];\n      var targetVal = isWhat.isPlainObject(origin) ? origin[key] : undefined;\n\n      if (extensions && isWhat.isArray(extensions)) {\n        extensions.forEach(function (extend) {\n          newVal = extend(targetVal, newVal);\n        });\n      }\n\n      if (targetVal === undefined) {\n        carry[key] = newVal;\n        return carry;\n      }\n\n      if (isWhat.isPlainObject(newVal)) {\n        carry[key] = mergeRecursively(targetVal, newVal, extensions);\n        return carry;\n      }\n\n      carry[key] = newVal;\n      return carry;\n    }, newObject);\n  }\n\n  function index(origin) {\n    var newComers = [];\n\n    for (var _i = 1; _i < arguments.length; _i++) {\n      newComers[_i - 1] = arguments[_i];\n    }\n\n    var extensions = null;\n    var base = origin;\n\n    if (isWhat.isPlainObject(origin) && origin.extensions && Object.keys(origin).length === 1) {\n      base = {};\n      extensions = origin.extensions;\n    }\n\n    return newComers.reduce(function (result, newComer) {\n      return mergeRecursively(result, newComer, extensions);\n    }, base);\n  }\n\n  module.exports = index;\n});","map":[[2,0,1,0],[4,0,3,0],[4,6,3,4,"isWhat"],[4,12,3,10],[4,15,3,13,"require"],[4,26,3,20],[4,56,3,0],[6,0,5,0],[6,11,5,9,"mergeRecursively"],[6,27,5,0],[6,28,5,26,"origin"],[6,34,5,0],[6,36,5,34,"newComer"],[6,44,5,0],[6,46,5,44,"extensions"],[6,56,5,0],[6,58,5,56],[7,0,7,4],[7,8,7,8],[7,9,7,9,"isWhat"],[7,15,7,15],[7,16,7,16,"isPlainObject"],[7,29,7,9],[7,30,7,30,"newComer"],[7,38,7,9],[7,39,7,4],[7,41,7,41],[8,0,9,8],[8,10,9,12,"extensions"],[8,20,9,22],[8,24,9,26,"isWhat"],[8,30,9,32],[8,31,9,33,"isArray"],[8,38,9,26],[8,39,9,41,"extensions"],[8,49,9,26],[8,50,9,8],[8,52,9,54],[9,0,10,12,"extensions"],[9,8,10,12,"extensions"],[9,18,10,22],[9,19,10,23,"forEach"],[9,26,10,12],[9,27,10,31],[9,37,10,41,"extend"],[9,43,10,31],[9,45,10,49],[10,0,11,16,"newComer"],[10,10,11,16,"newComer"],[10,18,11,24],[10,21,11,27,"extend"],[10,27,11,33],[10,28,11,34,"origin"],[10,34,11,33],[10,36,11,42,"newComer"],[10,44,11,33],[10,45,11,16],[11,0,12,13],[11,9,10,12],[12,0,13,9],[14,0,14,8],[14,13,14,15,"newComer"],[14,21,14,8],[15,0,15,5],[17,0,17,4],[17,8,17,8,"newObject"],[17,17,17,17],[17,20,17,21,"isWhat"],[17,26,17,27],[17,27,17,28,"isPlainObject"],[17,40,17,21],[17,41,17,42,"origin"],[17,47,17,21],[17,48,17,20],[17,51,18,10,"Object"],[17,57,18,16],[17,58,18,17,"keys"],[17,62,18,10],[17,63,18,22,"origin"],[17,69,18,10],[17,71,19,13,"reduce"],[17,77,18,10],[17,78,19,20],[17,88,19,30,"carry"],[17,93,19,20],[17,95,19,37,"key"],[17,98,19,20],[17,100,19,42],[18,0,20,12],[18,10,20,16,"targetVal"],[18,19,20,25],[18,22,20,28,"origin"],[18,28,20,34],[18,29,20,35,"key"],[18,32,20,34],[18,33,20,12],[19,0,22,12],[19,10,22,16],[19,11,22,17,"Object"],[19,17,22,23],[19,18,22,24,"keys"],[19,22,22,17],[19,23,22,29,"newComer"],[19,31,22,17],[19,33,22,39,"includes"],[19,41,22,17],[19,42,22,48,"key"],[19,45,22,17],[19,46,22,12],[19,48,23,16,"carry"],[19,53,23,21],[19,54,23,22,"key"],[19,57,23,21],[19,58,23,16],[19,61,23,29,"targetVal"],[19,70,23,16],[20,0,24,12],[20,13,24,19,"carry"],[20,18,24,12],[21,0,25,9],[21,5,18,10],[21,7,25,11],[21,9,18,10],[21,10,17,20],[21,13,26,10],[21,15,17,4],[22,0,27,4],[22,11,27,11,"Object"],[22,17,27,17],[22,18,27,18,"keys"],[22,22,27,11],[22,23,27,23,"newComer"],[22,31,27,11],[22,33,28,9,"reduce"],[22,39,27,11],[22,40,28,16],[22,50,28,26,"carry"],[22,55,28,16],[22,57,28,33,"key"],[22,60,28,16],[22,62,28,38],[23,0,30,8],[23,10,30,12,"newVal"],[23,16,30,18],[23,19,30,21,"newComer"],[23,27,30,29],[23,28,30,30,"key"],[23,31,30,29],[23,32,30,8],[24,0,31,8],[24,10,31,12,"targetVal"],[24,19,31,21],[24,22,31,25,"isWhat"],[24,28,31,31],[24,29,31,32,"isPlainObject"],[24,42,31,25],[24,43,31,46,"origin"],[24,49,31,25],[24,50,31,24],[24,53,32,14,"origin"],[24,59,32,20],[24,60,32,21,"key"],[24,63,32,20],[24,64,31,24],[24,67,33,14,"undefined"],[24,76,31,8],[26,0,35,8],[26,10,35,12,"extensions"],[26,20,35,22],[26,24,35,26,"isWhat"],[26,30,35,32],[26,31,35,33,"isArray"],[26,38,35,26],[26,39,35,41,"extensions"],[26,49,35,26],[26,50,35,8],[26,52,35,54],[27,0,36,12,"extensions"],[27,8,36,12,"extensions"],[27,18,36,22],[27,19,36,23,"forEach"],[27,26,36,12],[27,27,36,31],[27,37,36,41,"extend"],[27,43,36,31],[27,45,36,49],[28,0,37,16,"newVal"],[28,10,37,16,"newVal"],[28,16,37,22],[28,19,37,25,"extend"],[28,25,37,31],[28,26,37,32,"targetVal"],[28,35,37,31],[28,37,37,43,"newVal"],[28,43,37,31],[28,44,37,16],[29,0,38,13],[29,9,36,12],[30,0,39,9],[32,0,41,8],[32,10,41,12,"targetVal"],[32,19,41,21],[32,24,41,26,"undefined"],[32,33,41,8],[32,35,41,37],[33,0,42,12,"carry"],[33,8,42,12,"carry"],[33,13,42,17],[33,14,42,18,"key"],[33,17,42,17],[33,18,42,12],[33,21,42,25,"newVal"],[33,27,42,12],[34,0,43,12],[34,15,43,19,"carry"],[34,20,43,12],[35,0,44,9],[37,0,46,8],[37,10,46,12,"isWhat"],[37,16,46,18],[37,17,46,19,"isPlainObject"],[37,30,46,12],[37,31,46,33,"newVal"],[37,37,46,12],[37,38,46,8],[37,40,46,42],[38,0,47,12,"carry"],[38,8,47,12,"carry"],[38,13,47,17],[38,14,47,18,"key"],[38,17,47,17],[38,18,47,12],[38,21,47,25,"mergeRecursively"],[38,37,47,41],[38,38,47,42,"targetVal"],[38,47,47,41],[38,49,47,53,"newVal"],[38,55,47,41],[38,57,47,61,"extensions"],[38,67,47,41],[38,68,47,12],[39,0,48,12],[39,15,48,19,"carry"],[39,20,48,12],[40,0,49,9],[42,0,51,8,"carry"],[42,6,51,8,"carry"],[42,11,51,13],[42,12,51,14,"key"],[42,15,51,13],[42,16,51,8],[42,19,51,21,"newVal"],[42,25,51,8],[43,0,52,8],[43,13,52,15,"carry"],[43,18,52,8],[44,0,53,5],[44,5,27,11],[44,7,53,7,"newObject"],[44,16,27,11],[44,17,27,4],[45,0,54,1],[47,0,64,0],[47,11,64,9,"index"],[47,16,64,0],[47,17,64,16,"origin"],[47,23,64,0],[47,25,64,24],[48,0,65,4],[48,8,65,8,"newComers"],[48,17,65,17],[48,20,65,20],[48,22,65,4],[50,0,66,4],[50,9,66,9],[50,13,66,13,"_i"],[50,15,66,15],[50,18,66,18],[50,19,66,4],[50,21,66,21,"_i"],[50,23,66,23],[50,26,66,26,"arguments"],[50,35,66,35],[50,36,66,36,"length"],[50,42,66,4],[50,44,66,44,"_i"],[50,46,66,46],[50,48,66,4],[50,50,66,50],[51,0,67,8,"newComers"],[51,6,67,8,"newComers"],[51,15,67,17],[51,16,67,18,"_i"],[51,18,67,20],[51,21,67,23],[51,22,67,17],[51,23,67,8],[51,26,67,28,"arguments"],[51,35,67,37],[51,36,67,38,"_i"],[51,38,67,37],[51,39,67,8],[52,0,68,5],[54,0,69,4],[54,8,69,8,"extensions"],[54,18,69,18],[54,21,69,21],[54,25,69,4],[55,0,70,4],[55,8,70,8,"base"],[55,12,70,12],[55,15,70,15,"origin"],[55,21,70,4],[57,0,71,4],[57,8,71,8,"isWhat"],[57,14,71,14],[57,15,71,15,"isPlainObject"],[57,28,71,8],[57,29,71,29,"origin"],[57,35,71,8],[57,40,71,40,"origin"],[57,46,71,46],[57,47,71,47,"extensions"],[57,57,71,8],[57,61,71,61,"Object"],[57,67,71,67],[57,68,71,68,"keys"],[57,72,71,61],[57,73,71,73,"origin"],[57,79,71,61],[57,81,71,81,"length"],[57,87,71,61],[57,92,71,92],[57,93,71,4],[57,95,71,95],[58,0,72,8,"base"],[58,6,72,8,"base"],[58,10,72,12],[58,13,72,15],[58,15,72,8],[59,0,73,8,"extensions"],[59,6,73,8,"extensions"],[59,16,73,18],[59,19,73,21,"origin"],[59,25,73,27],[59,26,73,28,"extensions"],[59,36,73,8],[60,0,74,5],[62,0,75,4],[62,11,75,11,"newComers"],[62,20,75,20],[62,21,75,21,"reduce"],[62,27,75,11],[62,28,75,28],[62,38,75,38,"result"],[62,44,75,28],[62,46,75,46,"newComer"],[62,54,75,28],[62,56,75,56],[63,0,76,8],[63,13,76,15,"mergeRecursively"],[63,29,76,31],[63,30,76,32,"result"],[63,36,76,31],[63,38,76,40,"newComer"],[63,46,76,31],[63,48,76,50,"extensions"],[63,58,76,31],[63,59,76,8],[64,0,77,5],[64,5,75,11],[64,7,77,7,"base"],[64,11,75,11],[64,12,75,4],[65,0,78,1],[67,0,80,0,"module"],[67,2,80,0,"module"],[67,8,80,6],[67,9,80,7,"exports"],[67,16,80,0],[67,19,80,17,"index"],[67,24,80,0]]},"type":"js/module"}]}