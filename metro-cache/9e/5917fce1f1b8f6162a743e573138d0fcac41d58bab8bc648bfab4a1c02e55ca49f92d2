{"dependencies":[{"name":"../builder","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.arrayExpression = exports.ArrayExpression = ArrayExpression;\n  exports.assignmentExpression = exports.AssignmentExpression = AssignmentExpression;\n  exports.binaryExpression = exports.BinaryExpression = BinaryExpression;\n  exports.interpreterDirective = exports.InterpreterDirective = InterpreterDirective;\n  exports.directive = exports.Directive = Directive;\n  exports.directiveLiteral = exports.DirectiveLiteral = DirectiveLiteral;\n  exports.blockStatement = exports.BlockStatement = BlockStatement;\n  exports.breakStatement = exports.BreakStatement = BreakStatement;\n  exports.callExpression = exports.CallExpression = CallExpression;\n  exports.catchClause = exports.CatchClause = CatchClause;\n  exports.conditionalExpression = exports.ConditionalExpression = ConditionalExpression;\n  exports.continueStatement = exports.ContinueStatement = ContinueStatement;\n  exports.debuggerStatement = exports.DebuggerStatement = DebuggerStatement;\n  exports.doWhileStatement = exports.DoWhileStatement = DoWhileStatement;\n  exports.emptyStatement = exports.EmptyStatement = EmptyStatement;\n  exports.expressionStatement = exports.ExpressionStatement = ExpressionStatement;\n  exports.file = exports.File = File;\n  exports.forInStatement = exports.ForInStatement = ForInStatement;\n  exports.forStatement = exports.ForStatement = ForStatement;\n  exports.functionDeclaration = exports.FunctionDeclaration = FunctionDeclaration;\n  exports.functionExpression = exports.FunctionExpression = FunctionExpression;\n  exports.identifier = exports.Identifier = Identifier;\n  exports.ifStatement = exports.IfStatement = IfStatement;\n  exports.labeledStatement = exports.LabeledStatement = LabeledStatement;\n  exports.stringLiteral = exports.StringLiteral = StringLiteral;\n  exports.numericLiteral = exports.NumericLiteral = NumericLiteral;\n  exports.nullLiteral = exports.NullLiteral = NullLiteral;\n  exports.booleanLiteral = exports.BooleanLiteral = BooleanLiteral;\n  exports.regExpLiteral = exports.RegExpLiteral = RegExpLiteral;\n  exports.logicalExpression = exports.LogicalExpression = LogicalExpression;\n  exports.memberExpression = exports.MemberExpression = MemberExpression;\n  exports.newExpression = exports.NewExpression = NewExpression;\n  exports.program = exports.Program = Program;\n  exports.objectExpression = exports.ObjectExpression = ObjectExpression;\n  exports.objectMethod = exports.ObjectMethod = ObjectMethod;\n  exports.objectProperty = exports.ObjectProperty = ObjectProperty;\n  exports.restElement = exports.RestElement = RestElement;\n  exports.returnStatement = exports.ReturnStatement = ReturnStatement;\n  exports.sequenceExpression = exports.SequenceExpression = SequenceExpression;\n  exports.parenthesizedExpression = exports.ParenthesizedExpression = ParenthesizedExpression;\n  exports.switchCase = exports.SwitchCase = SwitchCase;\n  exports.switchStatement = exports.SwitchStatement = SwitchStatement;\n  exports.thisExpression = exports.ThisExpression = ThisExpression;\n  exports.throwStatement = exports.ThrowStatement = ThrowStatement;\n  exports.tryStatement = exports.TryStatement = TryStatement;\n  exports.unaryExpression = exports.UnaryExpression = UnaryExpression;\n  exports.updateExpression = exports.UpdateExpression = UpdateExpression;\n  exports.variableDeclaration = exports.VariableDeclaration = VariableDeclaration;\n  exports.variableDeclarator = exports.VariableDeclarator = VariableDeclarator;\n  exports.whileStatement = exports.WhileStatement = WhileStatement;\n  exports.withStatement = exports.WithStatement = WithStatement;\n  exports.assignmentPattern = exports.AssignmentPattern = AssignmentPattern;\n  exports.arrayPattern = exports.ArrayPattern = ArrayPattern;\n  exports.arrowFunctionExpression = exports.ArrowFunctionExpression = ArrowFunctionExpression;\n  exports.classBody = exports.ClassBody = ClassBody;\n  exports.classDeclaration = exports.ClassDeclaration = ClassDeclaration;\n  exports.classExpression = exports.ClassExpression = ClassExpression;\n  exports.exportAllDeclaration = exports.ExportAllDeclaration = ExportAllDeclaration;\n  exports.exportDefaultDeclaration = exports.ExportDefaultDeclaration = ExportDefaultDeclaration;\n  exports.exportNamedDeclaration = exports.ExportNamedDeclaration = ExportNamedDeclaration;\n  exports.exportSpecifier = exports.ExportSpecifier = ExportSpecifier;\n  exports.forOfStatement = exports.ForOfStatement = ForOfStatement;\n  exports.importDeclaration = exports.ImportDeclaration = ImportDeclaration;\n  exports.importDefaultSpecifier = exports.ImportDefaultSpecifier = ImportDefaultSpecifier;\n  exports.importNamespaceSpecifier = exports.ImportNamespaceSpecifier = ImportNamespaceSpecifier;\n  exports.importSpecifier = exports.ImportSpecifier = ImportSpecifier;\n  exports.metaProperty = exports.MetaProperty = MetaProperty;\n  exports.classMethod = exports.ClassMethod = ClassMethod;\n  exports.objectPattern = exports.ObjectPattern = ObjectPattern;\n  exports.spreadElement = exports.SpreadElement = SpreadElement;\n  exports.super = exports.Super = Super;\n  exports.taggedTemplateExpression = exports.TaggedTemplateExpression = TaggedTemplateExpression;\n  exports.templateElement = exports.TemplateElement = TemplateElement;\n  exports.templateLiteral = exports.TemplateLiteral = TemplateLiteral;\n  exports.yieldExpression = exports.YieldExpression = YieldExpression;\n  exports.anyTypeAnnotation = exports.AnyTypeAnnotation = AnyTypeAnnotation;\n  exports.arrayTypeAnnotation = exports.ArrayTypeAnnotation = ArrayTypeAnnotation;\n  exports.booleanTypeAnnotation = exports.BooleanTypeAnnotation = BooleanTypeAnnotation;\n  exports.booleanLiteralTypeAnnotation = exports.BooleanLiteralTypeAnnotation = BooleanLiteralTypeAnnotation;\n  exports.nullLiteralTypeAnnotation = exports.NullLiteralTypeAnnotation = NullLiteralTypeAnnotation;\n  exports.classImplements = exports.ClassImplements = ClassImplements;\n  exports.declareClass = exports.DeclareClass = DeclareClass;\n  exports.declareFunction = exports.DeclareFunction = DeclareFunction;\n  exports.declareInterface = exports.DeclareInterface = DeclareInterface;\n  exports.declareModule = exports.DeclareModule = DeclareModule;\n  exports.declareModuleExports = exports.DeclareModuleExports = DeclareModuleExports;\n  exports.declareTypeAlias = exports.DeclareTypeAlias = DeclareTypeAlias;\n  exports.declareOpaqueType = exports.DeclareOpaqueType = DeclareOpaqueType;\n  exports.declareVariable = exports.DeclareVariable = DeclareVariable;\n  exports.declareExportDeclaration = exports.DeclareExportDeclaration = DeclareExportDeclaration;\n  exports.declareExportAllDeclaration = exports.DeclareExportAllDeclaration = DeclareExportAllDeclaration;\n  exports.declaredPredicate = exports.DeclaredPredicate = DeclaredPredicate;\n  exports.existsTypeAnnotation = exports.ExistsTypeAnnotation = ExistsTypeAnnotation;\n  exports.functionTypeAnnotation = exports.FunctionTypeAnnotation = FunctionTypeAnnotation;\n  exports.functionTypeParam = exports.FunctionTypeParam = FunctionTypeParam;\n  exports.genericTypeAnnotation = exports.GenericTypeAnnotation = GenericTypeAnnotation;\n  exports.inferredPredicate = exports.InferredPredicate = InferredPredicate;\n  exports.interfaceExtends = exports.InterfaceExtends = InterfaceExtends;\n  exports.interfaceDeclaration = exports.InterfaceDeclaration = InterfaceDeclaration;\n  exports.interfaceTypeAnnotation = exports.InterfaceTypeAnnotation = InterfaceTypeAnnotation;\n  exports.intersectionTypeAnnotation = exports.IntersectionTypeAnnotation = IntersectionTypeAnnotation;\n  exports.mixedTypeAnnotation = exports.MixedTypeAnnotation = MixedTypeAnnotation;\n  exports.emptyTypeAnnotation = exports.EmptyTypeAnnotation = EmptyTypeAnnotation;\n  exports.nullableTypeAnnotation = exports.NullableTypeAnnotation = NullableTypeAnnotation;\n  exports.numberLiteralTypeAnnotation = exports.NumberLiteralTypeAnnotation = NumberLiteralTypeAnnotation;\n  exports.numberTypeAnnotation = exports.NumberTypeAnnotation = NumberTypeAnnotation;\n  exports.objectTypeAnnotation = exports.ObjectTypeAnnotation = ObjectTypeAnnotation;\n  exports.objectTypeInternalSlot = exports.ObjectTypeInternalSlot = ObjectTypeInternalSlot;\n  exports.objectTypeCallProperty = exports.ObjectTypeCallProperty = ObjectTypeCallProperty;\n  exports.objectTypeIndexer = exports.ObjectTypeIndexer = ObjectTypeIndexer;\n  exports.objectTypeProperty = exports.ObjectTypeProperty = ObjectTypeProperty;\n  exports.objectTypeSpreadProperty = exports.ObjectTypeSpreadProperty = ObjectTypeSpreadProperty;\n  exports.opaqueType = exports.OpaqueType = OpaqueType;\n  exports.qualifiedTypeIdentifier = exports.QualifiedTypeIdentifier = QualifiedTypeIdentifier;\n  exports.stringLiteralTypeAnnotation = exports.StringLiteralTypeAnnotation = StringLiteralTypeAnnotation;\n  exports.stringTypeAnnotation = exports.StringTypeAnnotation = StringTypeAnnotation;\n  exports.thisTypeAnnotation = exports.ThisTypeAnnotation = ThisTypeAnnotation;\n  exports.tupleTypeAnnotation = exports.TupleTypeAnnotation = TupleTypeAnnotation;\n  exports.typeofTypeAnnotation = exports.TypeofTypeAnnotation = TypeofTypeAnnotation;\n  exports.typeAlias = exports.TypeAlias = TypeAlias;\n  exports.typeAnnotation = exports.TypeAnnotation = TypeAnnotation;\n  exports.typeCastExpression = exports.TypeCastExpression = TypeCastExpression;\n  exports.typeParameter = exports.TypeParameter = TypeParameter;\n  exports.typeParameterDeclaration = exports.TypeParameterDeclaration = TypeParameterDeclaration;\n  exports.typeParameterInstantiation = exports.TypeParameterInstantiation = TypeParameterInstantiation;\n  exports.unionTypeAnnotation = exports.UnionTypeAnnotation = UnionTypeAnnotation;\n  exports.variance = exports.Variance = Variance;\n  exports.voidTypeAnnotation = exports.VoidTypeAnnotation = VoidTypeAnnotation;\n  exports.jSXAttribute = exports.jsxAttribute = exports.JSXAttribute = JSXAttribute;\n  exports.jSXClosingElement = exports.jsxClosingElement = exports.JSXClosingElement = JSXClosingElement;\n  exports.jSXElement = exports.jsxElement = exports.JSXElement = JSXElement;\n  exports.jSXEmptyExpression = exports.jsxEmptyExpression = exports.JSXEmptyExpression = JSXEmptyExpression;\n  exports.jSXExpressionContainer = exports.jsxExpressionContainer = exports.JSXExpressionContainer = JSXExpressionContainer;\n  exports.jSXSpreadChild = exports.jsxSpreadChild = exports.JSXSpreadChild = JSXSpreadChild;\n  exports.jSXIdentifier = exports.jsxIdentifier = exports.JSXIdentifier = JSXIdentifier;\n  exports.jSXMemberExpression = exports.jsxMemberExpression = exports.JSXMemberExpression = JSXMemberExpression;\n  exports.jSXNamespacedName = exports.jsxNamespacedName = exports.JSXNamespacedName = JSXNamespacedName;\n  exports.jSXOpeningElement = exports.jsxOpeningElement = exports.JSXOpeningElement = JSXOpeningElement;\n  exports.jSXSpreadAttribute = exports.jsxSpreadAttribute = exports.JSXSpreadAttribute = JSXSpreadAttribute;\n  exports.jSXText = exports.jsxText = exports.JSXText = JSXText;\n  exports.jSXFragment = exports.jsxFragment = exports.JSXFragment = JSXFragment;\n  exports.jSXOpeningFragment = exports.jsxOpeningFragment = exports.JSXOpeningFragment = JSXOpeningFragment;\n  exports.jSXClosingFragment = exports.jsxClosingFragment = exports.JSXClosingFragment = JSXClosingFragment;\n  exports.noop = exports.Noop = Noop;\n  exports.placeholder = exports.Placeholder = Placeholder;\n  exports.argumentPlaceholder = exports.ArgumentPlaceholder = ArgumentPlaceholder;\n  exports.awaitExpression = exports.AwaitExpression = AwaitExpression;\n  exports.bindExpression = exports.BindExpression = BindExpression;\n  exports.classProperty = exports.ClassProperty = ClassProperty;\n  exports.optionalMemberExpression = exports.OptionalMemberExpression = OptionalMemberExpression;\n  exports.pipelineTopicExpression = exports.PipelineTopicExpression = PipelineTopicExpression;\n  exports.pipelineBareFunction = exports.PipelineBareFunction = PipelineBareFunction;\n  exports.pipelinePrimaryTopicReference = exports.PipelinePrimaryTopicReference = PipelinePrimaryTopicReference;\n  exports.optionalCallExpression = exports.OptionalCallExpression = OptionalCallExpression;\n  exports.classPrivateProperty = exports.ClassPrivateProperty = ClassPrivateProperty;\n  exports.classPrivateMethod = exports.ClassPrivateMethod = ClassPrivateMethod;\n  exports.import = exports.Import = Import;\n  exports.decorator = exports.Decorator = Decorator;\n  exports.doExpression = exports.DoExpression = DoExpression;\n  exports.exportDefaultSpecifier = exports.ExportDefaultSpecifier = ExportDefaultSpecifier;\n  exports.exportNamespaceSpecifier = exports.ExportNamespaceSpecifier = ExportNamespaceSpecifier;\n  exports.privateName = exports.PrivateName = PrivateName;\n  exports.bigIntLiteral = exports.BigIntLiteral = BigIntLiteral;\n  exports.tSParameterProperty = exports.tsParameterProperty = exports.TSParameterProperty = TSParameterProperty;\n  exports.tSDeclareFunction = exports.tsDeclareFunction = exports.TSDeclareFunction = TSDeclareFunction;\n  exports.tSDeclareMethod = exports.tsDeclareMethod = exports.TSDeclareMethod = TSDeclareMethod;\n  exports.tSQualifiedName = exports.tsQualifiedName = exports.TSQualifiedName = TSQualifiedName;\n  exports.tSCallSignatureDeclaration = exports.tsCallSignatureDeclaration = exports.TSCallSignatureDeclaration = TSCallSignatureDeclaration;\n  exports.tSConstructSignatureDeclaration = exports.tsConstructSignatureDeclaration = exports.TSConstructSignatureDeclaration = TSConstructSignatureDeclaration;\n  exports.tSPropertySignature = exports.tsPropertySignature = exports.TSPropertySignature = TSPropertySignature;\n  exports.tSMethodSignature = exports.tsMethodSignature = exports.TSMethodSignature = TSMethodSignature;\n  exports.tSIndexSignature = exports.tsIndexSignature = exports.TSIndexSignature = TSIndexSignature;\n  exports.tSAnyKeyword = exports.tsAnyKeyword = exports.TSAnyKeyword = TSAnyKeyword;\n  exports.tSUnknownKeyword = exports.tsUnknownKeyword = exports.TSUnknownKeyword = TSUnknownKeyword;\n  exports.tSNumberKeyword = exports.tsNumberKeyword = exports.TSNumberKeyword = TSNumberKeyword;\n  exports.tSObjectKeyword = exports.tsObjectKeyword = exports.TSObjectKeyword = TSObjectKeyword;\n  exports.tSBooleanKeyword = exports.tsBooleanKeyword = exports.TSBooleanKeyword = TSBooleanKeyword;\n  exports.tSStringKeyword = exports.tsStringKeyword = exports.TSStringKeyword = TSStringKeyword;\n  exports.tSSymbolKeyword = exports.tsSymbolKeyword = exports.TSSymbolKeyword = TSSymbolKeyword;\n  exports.tSVoidKeyword = exports.tsVoidKeyword = exports.TSVoidKeyword = TSVoidKeyword;\n  exports.tSUndefinedKeyword = exports.tsUndefinedKeyword = exports.TSUndefinedKeyword = TSUndefinedKeyword;\n  exports.tSNullKeyword = exports.tsNullKeyword = exports.TSNullKeyword = TSNullKeyword;\n  exports.tSNeverKeyword = exports.tsNeverKeyword = exports.TSNeverKeyword = TSNeverKeyword;\n  exports.tSThisType = exports.tsThisType = exports.TSThisType = TSThisType;\n  exports.tSFunctionType = exports.tsFunctionType = exports.TSFunctionType = TSFunctionType;\n  exports.tSConstructorType = exports.tsConstructorType = exports.TSConstructorType = TSConstructorType;\n  exports.tSTypeReference = exports.tsTypeReference = exports.TSTypeReference = TSTypeReference;\n  exports.tSTypePredicate = exports.tsTypePredicate = exports.TSTypePredicate = TSTypePredicate;\n  exports.tSTypeQuery = exports.tsTypeQuery = exports.TSTypeQuery = TSTypeQuery;\n  exports.tSTypeLiteral = exports.tsTypeLiteral = exports.TSTypeLiteral = TSTypeLiteral;\n  exports.tSArrayType = exports.tsArrayType = exports.TSArrayType = TSArrayType;\n  exports.tSTupleType = exports.tsTupleType = exports.TSTupleType = TSTupleType;\n  exports.tSOptionalType = exports.tsOptionalType = exports.TSOptionalType = TSOptionalType;\n  exports.tSRestType = exports.tsRestType = exports.TSRestType = TSRestType;\n  exports.tSUnionType = exports.tsUnionType = exports.TSUnionType = TSUnionType;\n  exports.tSIntersectionType = exports.tsIntersectionType = exports.TSIntersectionType = TSIntersectionType;\n  exports.tSConditionalType = exports.tsConditionalType = exports.TSConditionalType = TSConditionalType;\n  exports.tSInferType = exports.tsInferType = exports.TSInferType = TSInferType;\n  exports.tSParenthesizedType = exports.tsParenthesizedType = exports.TSParenthesizedType = TSParenthesizedType;\n  exports.tSTypeOperator = exports.tsTypeOperator = exports.TSTypeOperator = TSTypeOperator;\n  exports.tSIndexedAccessType = exports.tsIndexedAccessType = exports.TSIndexedAccessType = TSIndexedAccessType;\n  exports.tSMappedType = exports.tsMappedType = exports.TSMappedType = TSMappedType;\n  exports.tSLiteralType = exports.tsLiteralType = exports.TSLiteralType = TSLiteralType;\n  exports.tSExpressionWithTypeArguments = exports.tsExpressionWithTypeArguments = exports.TSExpressionWithTypeArguments = TSExpressionWithTypeArguments;\n  exports.tSInterfaceDeclaration = exports.tsInterfaceDeclaration = exports.TSInterfaceDeclaration = TSInterfaceDeclaration;\n  exports.tSInterfaceBody = exports.tsInterfaceBody = exports.TSInterfaceBody = TSInterfaceBody;\n  exports.tSTypeAliasDeclaration = exports.tsTypeAliasDeclaration = exports.TSTypeAliasDeclaration = TSTypeAliasDeclaration;\n  exports.tSAsExpression = exports.tsAsExpression = exports.TSAsExpression = TSAsExpression;\n  exports.tSTypeAssertion = exports.tsTypeAssertion = exports.TSTypeAssertion = TSTypeAssertion;\n  exports.tSEnumDeclaration = exports.tsEnumDeclaration = exports.TSEnumDeclaration = TSEnumDeclaration;\n  exports.tSEnumMember = exports.tsEnumMember = exports.TSEnumMember = TSEnumMember;\n  exports.tSModuleDeclaration = exports.tsModuleDeclaration = exports.TSModuleDeclaration = TSModuleDeclaration;\n  exports.tSModuleBlock = exports.tsModuleBlock = exports.TSModuleBlock = TSModuleBlock;\n  exports.tSImportType = exports.tsImportType = exports.TSImportType = TSImportType;\n  exports.tSImportEqualsDeclaration = exports.tsImportEqualsDeclaration = exports.TSImportEqualsDeclaration = TSImportEqualsDeclaration;\n  exports.tSExternalModuleReference = exports.tsExternalModuleReference = exports.TSExternalModuleReference = TSExternalModuleReference;\n  exports.tSNonNullExpression = exports.tsNonNullExpression = exports.TSNonNullExpression = TSNonNullExpression;\n  exports.tSExportAssignment = exports.tsExportAssignment = exports.TSExportAssignment = TSExportAssignment;\n  exports.tSNamespaceExportDeclaration = exports.tsNamespaceExportDeclaration = exports.TSNamespaceExportDeclaration = TSNamespaceExportDeclaration;\n  exports.tSTypeAnnotation = exports.tsTypeAnnotation = exports.TSTypeAnnotation = TSTypeAnnotation;\n  exports.tSTypeParameterInstantiation = exports.tsTypeParameterInstantiation = exports.TSTypeParameterInstantiation = TSTypeParameterInstantiation;\n  exports.tSTypeParameterDeclaration = exports.tsTypeParameterDeclaration = exports.TSTypeParameterDeclaration = TSTypeParameterDeclaration;\n  exports.tSTypeParameter = exports.tsTypeParameter = exports.TSTypeParameter = TSTypeParameter;\n  exports.numberLiteral = exports.NumberLiteral = NumberLiteral;\n  exports.regexLiteral = exports.RegexLiteral = RegexLiteral;\n  exports.restProperty = exports.RestProperty = RestProperty;\n  exports.spreadProperty = exports.SpreadProperty = SpreadProperty;\n\n  var _builder = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[0], \"../builder\"));\n\n  function _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n      default: obj\n    };\n  }\n\n  function ArrayExpression() {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return (0, _builder.default).apply(void 0, [\"ArrayExpression\"].concat(args));\n  }\n\n  function AssignmentExpression() {\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n\n    return (0, _builder.default).apply(void 0, [\"AssignmentExpression\"].concat(args));\n  }\n\n  function BinaryExpression() {\n    for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      args[_key3] = arguments[_key3];\n    }\n\n    return (0, _builder.default).apply(void 0, [\"BinaryExpression\"].concat(args));\n  }\n\n  function InterpreterDirective() {\n    for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n      args[_key4] = arguments[_key4];\n    }\n\n    return (0, _builder.default).apply(void 0, [\"InterpreterDirective\"].concat(args));\n  }\n\n  function Directive() {\n    for (var _len5 = arguments.length, args = new Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {\n      args[_key5] = arguments[_key5];\n    }\n\n    return (0, _builder.default).apply(void 0, [\"Directive\"].concat(args));\n  }\n\n  function DirectiveLiteral() {\n    for (var _len6 = arguments.length, args = new Array(_len6), _key6 = 0; _key6 < _len6; _key6++) {\n      args[_key6] = arguments[_key6];\n    }\n\n    return (0, _builder.default).apply(void 0, [\"DirectiveLiteral\"].concat(args));\n  }\n\n  function BlockStatement() {\n    for (var _len7 = arguments.length, args = new Array(_len7), _key7 = 0; _key7 < _len7; _key7++) {\n      args[_key7] = arguments[_key7];\n    }\n\n    return (0, _builder.default).apply(void 0, [\"BlockStatement\"].concat(args));\n  }\n\n  function BreakStatement() {\n    for (var _len8 = arguments.length, args = new Array(_len8), _key8 = 0; _key8 < _len8; _key8++) {\n      args[_key8] = arguments[_key8];\n    }\n\n    return (0, _builder.default).apply(void 0, [\"BreakStatement\"].concat(args));\n  }\n\n  function CallExpression() {\n    for (var _len9 = arguments.length, args = new Array(_len9), _key9 = 0; _key9 < _len9; _key9++) {\n      args[_key9] = arguments[_key9];\n    }\n\n    return (0, _builder.default).apply(void 0, [\"CallExpression\"].concat(args));\n  }\n\n  function CatchClause() {\n    for (var _len10 = arguments.length, args = new Array(_len10), _key10 = 0; _key10 < _len10; _key10++) {\n      args[_key10] = arguments[_key10];\n    }\n\n    return (0, _builder.default).apply(void 0, [\"CatchClause\"].concat(args));\n  }\n\n  function ConditionalExpression() {\n    for (var _len11 = arguments.length, args = new Array(_len11), _key11 = 0; _key11 < _len11; _key11++) {\n      args[_key11] = arguments[_key11];\n    }\n\n    return (0, _builder.default).apply(void 0, [\"ConditionalExpression\"].concat(args));\n  }\n\n  function ContinueStatement() {\n    for (var _len12 = arguments.length, args = new Array(_len12), _key12 = 0; _key12 < _len12; _key12++) {\n      args[_key12] = arguments[_key12];\n    }\n\n    return (0, _builder.default).apply(void 0, [\"ContinueStatement\"].concat(args));\n  }\n\n  function DebuggerStatement() {\n    for (var _len13 = arguments.length, args = new Array(_len13), _key13 = 0; _key13 < _len13; _key13++) {\n      args[_key13] = arguments[_key13];\n    }\n\n    return (0, _builder.default).apply(void 0, [\"DebuggerStatement\"].concat(args));\n  }\n\n  function DoWhileStatement() {\n    for (var _len14 = arguments.length, args = new Array(_len14), _key14 = 0; _key14 < _len14; _key14++) {\n      args[_key14] = arguments[_key14];\n    }\n\n    return (0, _builder.default).apply(void 0, [\"DoWhileStatement\"].concat(args));\n  }\n\n  function EmptyStatement() {\n    for (var _len15 = arguments.length, args = new Array(_len15), _key15 = 0; _key15 < _len15; _key15++) {\n      args[_key15] = arguments[_key15];\n    }\n\n    return (0, _builder.default).apply(void 0, [\"EmptyStatement\"].concat(args));\n  }\n\n  function ExpressionStatement() {\n    for (var _len16 = arguments.length, args = new Array(_len16), _key16 = 0; _key16 < _len16; _key16++) {\n      args[_key16] = arguments[_key16];\n    }\n\n    return (0, _builder.default).apply(void 0, [\"ExpressionStatement\"].concat(args));\n  }\n\n  function File() {\n    for (var _len17 = arguments.length, args = new Array(_len17), _key17 = 0; _key17 < _len17; _key17++) {\n      args[_key17] = arguments[_key17];\n    }\n\n    return (0, _builder.default).apply(void 0, [\"File\"].concat(args));\n  }\n\n  function ForInStatement() {\n    for (var _len18 = arguments.length, args = new Array(_len18), _key18 = 0; _key18 < _len18; _key18++) {\n      args[_key18] = arguments[_key18];\n    }\n\n    return (0, _builder.default).apply(void 0, [\"ForInStatement\"].concat(args));\n  }\n\n  function ForStatement() {\n    for (var _len19 = arguments.length, args = new Array(_len19), _key19 = 0; _key19 < _len19; _key19++) {\n      args[_key19] = arguments[_key19];\n    }\n\n    return (0, _builder.default).apply(void 0, [\"ForStatement\"].concat(args));\n  }\n\n  function FunctionDeclaration() {\n    for (var _len20 = arguments.length, args = new Array(_len20), _key20 = 0; _key20 < _len20; _key20++) {\n      args[_key20] = arguments[_key20];\n    }\n\n    return (0, _builder.default).apply(void 0, [\"FunctionDeclaration\"].concat(args));\n  }\n\n  function FunctionExpression() {\n    for (var _len21 = arguments.length, args = new Array(_len21), _key21 = 0; _key21 < _len21; _key21++) {\n      args[_key21] = arguments[_key21];\n    }\n\n    return (0, _builder.default).apply(void 0, [\"FunctionExpression\"].concat(args));\n  }\n\n  function Identifier() {\n    for (var _len22 = arguments.length, args = new Array(_len22), _key22 = 0; _key22 < _len22; _key22++) {\n      args[_key22] = arguments[_key22];\n    }\n\n    return (0, _builder.default).apply(void 0, [\"Identifier\"].concat(args));\n  }\n\n  function IfStatement() {\n    for (var _len23 = arguments.length, args = new Array(_len23), _key23 = 0; _key23 < _len23; _key23++) {\n      args[_key23] = arguments[_key23];\n    }\n\n    return (0, _builder.default).apply(void 0, [\"IfStatement\"].concat(args));\n  }\n\n  function LabeledStatement() {\n    for (var _len24 = arguments.length, args = new Array(_len24), _key24 = 0; _key24 < _len24; _key24++) {\n      args[_key24] = arguments[_key24];\n    }\n\n    return (0, _builder.default).apply(void 0, [\"LabeledStatement\"].concat(args));\n  }\n\n  function StringLiteral() {\n    for (var _len25 = arguments.length, args = new Array(_len25), _key25 = 0; _key25 < _len25; _key25++) {\n      args[_key25] = arguments[_key25];\n    }\n\n    return (0, _builder.default).apply(void 0, [\"StringLiteral\"].concat(args));\n  }\n\n  function NumericLiteral() {\n    for (var _len26 = arguments.length, args = new Array(_len26), _key26 = 0; _key26 < _len26; _key26++) {\n      args[_key26] = arguments[_key26];\n    }\n\n    return (0, _builder.default).apply(void 0, [\"NumericLiteral\"].concat(args));\n  }\n\n  function NullLiteral() {\n    for (var _len27 = arguments.length, args = new Array(_len27), _key27 = 0; _key27 < _len27; _key27++) {\n      args[_key27] = arguments[_key27];\n    }\n\n    return (0, _builder.default).apply(void 0, [\"NullLiteral\"].concat(args));\n  }\n\n  function BooleanLiteral() {\n    for (var _len28 = arguments.length, args = new Array(_len28), _key28 = 0; _key28 < _len28; _key28++) {\n      args[_key28] = arguments[_key28];\n    }\n\n    return (0, _builder.default).apply(void 0, [\"BooleanLiteral\"].concat(args));\n  }\n\n  function RegExpLiteral() {\n    for (var _len29 = arguments.length, args = new Array(_len29), _key29 = 0; _key29 < _len29; _key29++) {\n      args[_key29] = arguments[_key29];\n    }\n\n    return (0, _builder.default).apply(void 0, [\"RegExpLiteral\"].concat(args));\n  }\n\n  function LogicalExpression() {\n    for (var _len30 = arguments.length, args = new Array(_len30), _key30 = 0; _key30 < _len30; _key30++) {\n      args[_key30] = arguments[_key30];\n    }\n\n    return (0, _builder.default).apply(void 0, [\"LogicalExpression\"].concat(args));\n  }\n\n  function MemberExpression() {\n    for (var _len31 = arguments.length, args = new Array(_len31), _key31 = 0; _key31 < _len31; _key31++) {\n      args[_key31] = arguments[_key31];\n    }\n\n    return (0, _builder.default).apply(void 0, [\"MemberExpression\"].concat(args));\n  }\n\n  function NewExpression() {\n    for (var _len32 = arguments.length, args = new Array(_len32), _key32 = 0; _key32 < _len32; _key32++) {\n      args[_key32] = arguments[_key32];\n    }\n\n    return (0, _builder.default).apply(void 0, [\"NewExpression\"].concat(args));\n  }\n\n  function Program() {\n    for (var _len33 = arguments.length, args = new Array(_len33), _key33 = 0; _key33 < _len33; _key33++) {\n      args[_key33] = arguments[_key33];\n    }\n\n    return (0, _builder.default).apply(void 0, [\"Program\"].concat(args));\n  }\n\n  function ObjectExpression() {\n    for (var _len34 = arguments.length, args = new Array(_len34), _key34 = 0; _key34 < _len34; _key34++) {\n      args[_key34] = arguments[_key34];\n    }\n\n    return (0, _builder.default).apply(void 0, [\"ObjectExpression\"].concat(args));\n  }\n\n  function ObjectMethod() {\n    for (var _len35 = arguments.length, args = new Array(_len35), _key35 = 0; _key35 < _len35; _key35++) {\n      args[_key35] = arguments[_key35];\n    }\n\n    return (0, _builder.default).apply(void 0, [\"ObjectMethod\"].concat(args));\n  }\n\n  function ObjectProperty() {\n    for (var _len36 = arguments.length, args = new Array(_len36), _key36 = 0; _key36 < _len36; _key36++) {\n      args[_key36] = arguments[_key36];\n    }\n\n    return (0, _builder.default).apply(void 0, [\"ObjectProperty\"].concat(args));\n  }\n\n  function RestElement() {\n    for (var _len37 = arguments.length, args = new Array(_len37), _key37 = 0; _key37 < _len37; _key37++) {\n      args[_key37] = arguments[_key37];\n    }\n\n    return (0, _builder.default).apply(void 0, [\"RestElement\"].concat(args));\n  }\n\n  function ReturnStatement() {\n    for (var _len38 = arguments.length, args = new Array(_len38), _key38 = 0; _key38 < _len38; _key38++) {\n      args[_key38] = arguments[_key38];\n    }\n\n    return (0, _builder.default).apply(void 0, [\"ReturnStatement\"].concat(args));\n  }\n\n  function SequenceExpression() {\n    for (var _len39 = arguments.length, args = new Array(_len39), _key39 = 0; _key39 < _len39; _key39++) {\n      args[_key39] = arguments[_key39];\n    }\n\n    return (0, _builder.default).apply(void 0, [\"SequenceExpression\"].concat(args));\n  }\n\n  function ParenthesizedExpression() {\n    for (var _len40 = arguments.length, args = new Array(_len40), _key40 = 0; _key40 < _len40; _key40++) {\n      args[_key40] = arguments[_key40];\n    }\n\n    return (0, _builder.default).apply(void 0, [\"ParenthesizedExpression\"].concat(args));\n  }\n\n  function SwitchCase() {\n    for (var _len41 = arguments.length, args = new Array(_len41), _key41 = 0; _key41 < _len41; _key41++) {\n      args[_key41] = arguments[_key41];\n    }\n\n    return (0, _builder.default).apply(void 0, [\"SwitchCase\"].concat(args));\n  }\n\n  function SwitchStatement() {\n    for (var _len42 = arguments.length, args = new Array(_len42), _key42 = 0; _key42 < _len42; _key42++) {\n      args[_key42] = arguments[_key42];\n    }\n\n    return (0, _builder.default).apply(void 0, [\"SwitchStatement\"].concat(args));\n  }\n\n  function ThisExpression() {\n    for (var _len43 = arguments.length, args = new Array(_len43), _key43 = 0; _key43 < _len43; _key43++) {\n      args[_key43] = arguments[_key43];\n    }\n\n    return (0, _builder.default).apply(void 0, [\"ThisExpression\"].concat(args));\n  }\n\n  function ThrowStatement() {\n    for (var _len44 = arguments.length, args = new Array(_len44), _key44 = 0; _key44 < _len44; _key44++) {\n      args[_key44] = arguments[_key44];\n    }\n\n    return (0, _builder.default).apply(void 0, [\"ThrowStatement\"].concat(args));\n  }\n\n  function TryStatement() {\n    for (var _len45 = arguments.length, args = new Array(_len45), _key45 = 0; _key45 < _len45; _key45++) {\n      args[_key45] = arguments[_key45];\n    }\n\n    return (0, _builder.default).apply(void 0, [\"TryStatement\"].concat(args));\n  }\n\n  function UnaryExpression() {\n    for (var _len46 = arguments.length, args = new Array(_len46), _key46 = 0; _key46 < _len46; _key46++) {\n      args[_key46] = arguments[_key46];\n    }\n\n    return (0, _builder.default).apply(void 0, [\"UnaryExpression\"].concat(args));\n  }\n\n  function UpdateExpression() {\n    for (var _len47 = arguments.length, args = new Array(_len47), _key47 = 0; _key47 < _len47; _key47++) {\n      args[_key47] = arguments[_key47];\n    }\n\n    return (0, _builder.default).apply(void 0, [\"UpdateExpression\"].concat(args));\n  }\n\n  function VariableDeclaration() {\n    for (var _len48 = arguments.length, args = new Array(_len48), _key48 = 0; _key48 < _len48; _key48++) {\n      args[_key48] = arguments[_key48];\n    }\n\n    return (0, _builder.default).apply(void 0, [\"VariableDeclaration\"].concat(args));\n  }\n\n  function VariableDeclarator() {\n    for (var _len49 = arguments.length, args = new Array(_len49), _key49 = 0; _key49 < _len49; _key49++) {\n      args[_key49] = arguments[_key49];\n    }\n\n    return (0, _builder.default).apply(void 0, [\"VariableDeclarator\"].concat(args));\n  }\n\n  function WhileStatement() {\n    for (var _len50 = arguments.length, args = new Array(_len50), _key50 = 0; _key50 < _len50; _key50++) {\n      args[_key50] = arguments[_key50];\n    }\n\n    return (0, _builder.default).apply(void 0, [\"WhileStatement\"].concat(args));\n  }\n\n  function WithStatement() {\n    for (var _len51 = arguments.length, args = new Array(_len51), _key51 = 0; _key51 < _len51; _key51++) {\n      args[_key51] = arguments[_key51];\n    }\n\n    return (0, _builder.default).apply(void 0, [\"WithStatement\"].concat(args));\n  }\n\n  function AssignmentPattern() {\n    for (var _len52 = arguments.length, args = new Array(_len52), _key52 = 0; _key52 < _len52; _key52++) {\n      args[_key52] = arguments[_key52];\n    }\n\n    return (0, _builder.default).apply(void 0, [\"AssignmentPattern\"].concat(args));\n  }\n\n  function ArrayPattern() {\n    for (var _len53 = arguments.length, args = new Array(_len53), _key53 = 0; _key53 < _len53; _key53++) {\n      args[_key53] = arguments[_key53];\n    }\n\n    return (0, _builder.default).apply(void 0, [\"ArrayPattern\"].concat(args));\n  }\n\n  function ArrowFunctionExpression() {\n    for (var _len54 = arguments.length, args = new Array(_len54), _key54 = 0; _key54 < _len54; _key54++) {\n      args[_key54] = arguments[_key54];\n    }\n\n    return (0, _builder.default).apply(void 0, [\"ArrowFunctionExpression\"].concat(args));\n  }\n\n  function ClassBody() {\n    for (var _len55 = arguments.length, args = new Array(_len55), _key55 = 0; _key55 < _len55; _key55++) {\n      args[_key55] = arguments[_key55];\n    }\n\n    return (0, _builder.default).apply(void 0, [\"ClassBody\"].concat(args));\n  }\n\n  function ClassDeclaration() {\n    for (var _len56 = arguments.length, args = new Array(_len56), _key56 = 0; _key56 < _len56; _key56++) {\n      args[_key56] = arguments[_key56];\n    }\n\n    return (0, _builder.default).apply(void 0, [\"ClassDeclaration\"].concat(args));\n  }\n\n  function ClassExpression() {\n    for (var _len57 = arguments.length, args = new Array(_len57), _key57 = 0; _key57 < _len57; _key57++) {\n      args[_key57] = arguments[_key57];\n    }\n\n    return (0, _builder.default).apply(void 0, [\"ClassExpression\"].concat(args));\n  }\n\n  function ExportAllDeclaration() {\n    for (var _len58 = arguments.length, args = new Array(_len58), _key58 = 0; _key58 < _len58; _key58++) {\n      args[_key58] = arguments[_key58];\n    }\n\n    return (0, _builder.default).apply(void 0, [\"ExportAllDeclaration\"].concat(args));\n  }\n\n  function ExportDefaultDeclaration() {\n    for (var _len59 = arguments.length, args = new Array(_len59), _key59 = 0; _key59 < _len59; _key59++) {\n      args[_key59] = arguments[_key59];\n    }\n\n    return (0, _builder.default).apply(void 0, [\"ExportDefaultDeclaration\"].concat(args));\n  }\n\n  function ExportNamedDeclaration() {\n    for (var _len60 = arguments.length, args = new Array(_len60), _key60 = 0; _key60 < _len60; _key60++) {\n      args[_key60] = arguments[_key60];\n    }\n\n    return (0, _builder.default).apply(void 0, [\"ExportNamedDeclaration\"].concat(args));\n  }\n\n  function ExportSpecifier() {\n    for (var _len61 = arguments.length, args = new Array(_len61), _key61 = 0; _key61 < _len61; _key61++) {\n      args[_key61] = arguments[_key61];\n    }\n\n    return (0, _builder.default).apply(void 0, [\"ExportSpecifier\"].concat(args));\n  }\n\n  function ForOfStatement() {\n    for (var _len62 = arguments.length, args = new Array(_len62), _key62 = 0; _key62 < _len62; _key62++) {\n      args[_key62] = arguments[_key62];\n    }\n\n    return (0, _builder.default).apply(void 0, [\"ForOfStatement\"].concat(args));\n  }\n\n  function ImportDeclaration() {\n    for (var _len63 = arguments.length, args = new Array(_len63), _key63 = 0; _key63 < _len63; _key63++) {\n      args[_key63] = arguments[_key63];\n    }\n\n    return (0, _builder.default).apply(void 0, [\"ImportDeclaration\"].concat(args));\n  }\n\n  function ImportDefaultSpecifier() {\n    for (var _len64 = arguments.length, args = new Array(_len64), _key64 = 0; _key64 < _len64; _key64++) {\n      args[_key64] = arguments[_key64];\n    }\n\n    return (0, _builder.default).apply(void 0, [\"ImportDefaultSpecifier\"].concat(args));\n  }\n\n  function ImportNamespaceSpecifier() {\n    for (var _len65 = arguments.length, args = new Array(_len65), _key65 = 0; _key65 < _len65; _key65++) {\n      args[_key65] = arguments[_key65];\n    }\n\n    return (0, _builder.default).apply(void 0, [\"ImportNamespaceSpecifier\"].concat(args));\n  }\n\n  function ImportSpecifier() {\n    for (var _len66 = arguments.length, args = new Array(_len66), _key66 = 0; _key66 < _len66; _key66++) {\n      args[_key66] = arguments[_key66];\n    }\n\n    return (0, _builder.default).apply(void 0, [\"ImportSpecifier\"].concat(args));\n  }\n\n  function MetaProperty() {\n    for (var _len67 = arguments.length, args = new Array(_len67), _key67 = 0; _key67 < _len67; _key67++) {\n      args[_key67] = arguments[_key67];\n    }\n\n    return (0, _builder.default).apply(void 0, [\"MetaProperty\"].concat(args));\n  }\n\n  function ClassMethod() {\n    for (var _len68 = arguments.length, args = new Array(_len68), _key68 = 0; _key68 < _len68; _key68++) {\n      args[_key68] = arguments[_key68];\n    }\n\n    return (0, _builder.default).apply(void 0, [\"ClassMethod\"].concat(args));\n  }\n\n  function ObjectPattern() {\n    for (var _len69 = arguments.length, args = new Array(_len69), _key69 = 0; _key69 < _len69; _key69++) {\n      args[_key69] = arguments[_key69];\n    }\n\n    return (0, _builder.default).apply(void 0, [\"ObjectPattern\"].concat(args));\n  }\n\n  function SpreadElement() {\n    for (var _len70 = arguments.length, args = new Array(_len70), _key70 = 0; _key70 < _len70; _key70++) {\n      args[_key70] = arguments[_key70];\n    }\n\n    return (0, _builder.default).apply(void 0, [\"SpreadElement\"].concat(args));\n  }\n\n  function Super() {\n    for (var _len71 = arguments.length, args = new Array(_len71), _key71 = 0; _key71 < _len71; _key71++) {\n      args[_key71] = arguments[_key71];\n    }\n\n    return (0, _builder.default).apply(void 0, [\"Super\"].concat(args));\n  }\n\n  function TaggedTemplateExpression() {\n    for (var _len72 = arguments.length, args = new Array(_len72), _key72 = 0; _key72 < _len72; _key72++) {\n      args[_key72] = arguments[_key72];\n    }\n\n    return (0, _builder.default).apply(void 0, [\"TaggedTemplateExpression\"].concat(args));\n  }\n\n  function TemplateElement() {\n    for (var _len73 = arguments.length, args = new Array(_len73), _key73 = 0; _key73 < _len73; _key73++) {\n      args[_key73] = arguments[_key73];\n    }\n\n    return (0, _builder.default).apply(void 0, [\"TemplateElement\"].concat(args));\n  }\n\n  function TemplateLiteral() {\n    for (var _len74 = arguments.length, args = new Array(_len74), _key74 = 0; _key74 < _len74; _key74++) {\n      args[_key74] = arguments[_key74];\n    }\n\n    return (0, _builder.default).apply(void 0, [\"TemplateLiteral\"].concat(args));\n  }\n\n  function YieldExpression() {\n    for (var _len75 = arguments.length, args = new Array(_len75), _key75 = 0; _key75 < _len75; _key75++) {\n      args[_key75] = arguments[_key75];\n    }\n\n    return (0, _builder.default).apply(void 0, [\"YieldExpression\"].concat(args));\n  }\n\n  function AnyTypeAnnotation() {\n    for (var _len76 = arguments.length, args = new Array(_len76), _key76 = 0; _key76 < _len76; _key76++) {\n      args[_key76] = arguments[_key76];\n    }\n\n    return (0, _builder.default).apply(void 0, [\"AnyTypeAnnotation\"].concat(args));\n  }\n\n  function ArrayTypeAnnotation() {\n    for (var _len77 = arguments.length, args = new Array(_len77), _key77 = 0; _key77 < _len77; _key77++) {\n      args[_key77] = arguments[_key77];\n    }\n\n    return (0, _builder.default).apply(void 0, [\"ArrayTypeAnnotation\"].concat(args));\n  }\n\n  function BooleanTypeAnnotation() {\n    for (var _len78 = arguments.length, args = new Array(_len78), _key78 = 0; _key78 < _len78; _key78++) {\n      args[_key78] = arguments[_key78];\n    }\n\n    return (0, _builder.default).apply(void 0, [\"BooleanTypeAnnotation\"].concat(args));\n  }\n\n  function BooleanLiteralTypeAnnotation() {\n    for (var _len79 = arguments.length, args = new Array(_len79), _key79 = 0; _key79 < _len79; _key79++) {\n      args[_key79] = arguments[_key79];\n    }\n\n    return (0, _builder.default).apply(void 0, [\"BooleanLiteralTypeAnnotation\"].concat(args));\n  }\n\n  function NullLiteralTypeAnnotation() {\n    for (var _len80 = arguments.length, args = new Array(_len80), _key80 = 0; _key80 < _len80; _key80++) {\n      args[_key80] = arguments[_key80];\n    }\n\n    return (0, _builder.default).apply(void 0, [\"NullLiteralTypeAnnotation\"].concat(args));\n  }\n\n  function ClassImplements() {\n    for (var _len81 = arguments.length, args = new Array(_len81), _key81 = 0; _key81 < _len81; _key81++) {\n      args[_key81] = arguments[_key81];\n    }\n\n    return (0, _builder.default).apply(void 0, [\"ClassImplements\"].concat(args));\n  }\n\n  function DeclareClass() {\n    for (var _len82 = arguments.length, args = new Array(_len82), _key82 = 0; _key82 < _len82; _key82++) {\n      args[_key82] = arguments[_key82];\n    }\n\n    return (0, _builder.default).apply(void 0, [\"DeclareClass\"].concat(args));\n  }\n\n  function DeclareFunction() {\n    for (var _len83 = arguments.length, args = new Array(_len83), _key83 = 0; _key83 < _len83; _key83++) {\n      args[_key83] = arguments[_key83];\n    }\n\n    return (0, _builder.default).apply(void 0, [\"DeclareFunction\"].concat(args));\n  }\n\n  function DeclareInterface() {\n    for (var _len84 = arguments.length, args = new Array(_len84), _key84 = 0; _key84 < _len84; _key84++) {\n      args[_key84] = arguments[_key84];\n    }\n\n    return (0, _builder.default).apply(void 0, [\"DeclareInterface\"].concat(args));\n  }\n\n  function DeclareModule() {\n    for (var _len85 = arguments.length, args = new Array(_len85), _key85 = 0; _key85 < _len85; _key85++) {\n      args[_key85] = arguments[_key85];\n    }\n\n    return (0, _builder.default).apply(void 0, [\"DeclareModule\"].concat(args));\n  }\n\n  function DeclareModuleExports() {\n    for (var _len86 = arguments.length, args = new Array(_len86), _key86 = 0; _key86 < _len86; _key86++) {\n      args[_key86] = arguments[_key86];\n    }\n\n    return (0, _builder.default).apply(void 0, [\"DeclareModuleExports\"].concat(args));\n  }\n\n  function DeclareTypeAlias() {\n    for (var _len87 = arguments.length, args = new Array(_len87), _key87 = 0; _key87 < _len87; _key87++) {\n      args[_key87] = arguments[_key87];\n    }\n\n    return (0, _builder.default).apply(void 0, [\"DeclareTypeAlias\"].concat(args));\n  }\n\n  function DeclareOpaqueType() {\n    for (var _len88 = arguments.length, args = new Array(_len88), _key88 = 0; _key88 < _len88; _key88++) {\n      args[_key88] = arguments[_key88];\n    }\n\n    return (0, _builder.default).apply(void 0, [\"DeclareOpaqueType\"].concat(args));\n  }\n\n  function DeclareVariable() {\n    for (var _len89 = arguments.length, args = new Array(_len89), _key89 = 0; _key89 < _len89; _key89++) {\n      args[_key89] = arguments[_key89];\n    }\n\n    return (0, _builder.default).apply(void 0, [\"DeclareVariable\"].concat(args));\n  }\n\n  function DeclareExportDeclaration() {\n    for (var _len90 = arguments.length, args = new Array(_len90), _key90 = 0; _key90 < _len90; _key90++) {\n      args[_key90] = arguments[_key90];\n    }\n\n    return (0, _builder.default).apply(void 0, [\"DeclareExportDeclaration\"].concat(args));\n  }\n\n  function DeclareExportAllDeclaration() {\n    for (var _len91 = arguments.length, args = new Array(_len91), _key91 = 0; _key91 < _len91; _key91++) {\n      args[_key91] = arguments[_key91];\n    }\n\n    return (0, _builder.default).apply(void 0, [\"DeclareExportAllDeclaration\"].concat(args));\n  }\n\n  function DeclaredPredicate() {\n    for (var _len92 = arguments.length, args = new Array(_len92), _key92 = 0; _key92 < _len92; _key92++) {\n      args[_key92] = arguments[_key92];\n    }\n\n    return (0, _builder.default).apply(void 0, [\"DeclaredPredicate\"].concat(args));\n  }\n\n  function ExistsTypeAnnotation() {\n    for (var _len93 = arguments.length, args = new Array(_len93), _key93 = 0; _key93 < _len93; _key93++) {\n      args[_key93] = arguments[_key93];\n    }\n\n    return (0, _builder.default).apply(void 0, [\"ExistsTypeAnnotation\"].concat(args));\n  }\n\n  function FunctionTypeAnnotation() {\n    for (var _len94 = arguments.length, args = new Array(_len94), _key94 = 0; _key94 < _len94; _key94++) {\n      args[_key94] = arguments[_key94];\n    }\n\n    return (0, _builder.default).apply(void 0, [\"FunctionTypeAnnotation\"].concat(args));\n  }\n\n  function FunctionTypeParam() {\n    for (var _len95 = arguments.length, args = new Array(_len95), _key95 = 0; _key95 < _len95; _key95++) {\n      args[_key95] = arguments[_key95];\n    }\n\n    return (0, _builder.default).apply(void 0, [\"FunctionTypeParam\"].concat(args));\n  }\n\n  function GenericTypeAnnotation() {\n    for (var _len96 = arguments.length, args = new Array(_len96), _key96 = 0; _key96 < _len96; _key96++) {\n      args[_key96] = arguments[_key96];\n    }\n\n    return (0, _builder.default).apply(void 0, [\"GenericTypeAnnotation\"].concat(args));\n  }\n\n  function InferredPredicate() {\n    for (var _len97 = arguments.length, args = new Array(_len97), _key97 = 0; _key97 < _len97; _key97++) {\n      args[_key97] = arguments[_key97];\n    }\n\n    return (0, _builder.default).apply(void 0, [\"InferredPredicate\"].concat(args));\n  }\n\n  function InterfaceExtends() {\n    for (var _len98 = arguments.length, args = new Array(_len98), _key98 = 0; _key98 < _len98; _key98++) {\n      args[_key98] = arguments[_key98];\n    }\n\n    return (0, _builder.default).apply(void 0, [\"InterfaceExtends\"].concat(args));\n  }\n\n  function InterfaceDeclaration() {\n    for (var _len99 = arguments.length, args = new Array(_len99), _key99 = 0; _key99 < _len99; _key99++) {\n      args[_key99] = arguments[_key99];\n    }\n\n    return (0, _builder.default).apply(void 0, [\"InterfaceDeclaration\"].concat(args));\n  }\n\n  function InterfaceTypeAnnotation() {\n    for (var _len100 = arguments.length, args = new Array(_len100), _key100 = 0; _key100 < _len100; _key100++) {\n      args[_key100] = arguments[_key100];\n    }\n\n    return (0, _builder.default).apply(void 0, [\"InterfaceTypeAnnotation\"].concat(args));\n  }\n\n  function IntersectionTypeAnnotation() {\n    for (var _len101 = arguments.length, args = new Array(_len101), _key101 = 0; _key101 < _len101; _key101++) {\n      args[_key101] = arguments[_key101];\n    }\n\n    return (0, _builder.default).apply(void 0, [\"IntersectionTypeAnnotation\"].concat(args));\n  }\n\n  function MixedTypeAnnotation() {\n    for (var _len102 = arguments.length, args = new Array(_len102), _key102 = 0; _key102 < _len102; _key102++) {\n      args[_key102] = arguments[_key102];\n    }\n\n    return (0, _builder.default).apply(void 0, [\"MixedTypeAnnotation\"].concat(args));\n  }\n\n  function EmptyTypeAnnotation() {\n    for (var _len103 = arguments.length, args = new Array(_len103), _key103 = 0; _key103 < _len103; _key103++) {\n      args[_key103] = arguments[_key103];\n    }\n\n    return (0, _builder.default).apply(void 0, [\"EmptyTypeAnnotation\"].concat(args));\n  }\n\n  function NullableTypeAnnotation() {\n    for (var _len104 = arguments.length, args = new Array(_len104), _key104 = 0; _key104 < _len104; _key104++) {\n      args[_key104] = arguments[_key104];\n    }\n\n    return (0, _builder.default).apply(void 0, [\"NullableTypeAnnotation\"].concat(args));\n  }\n\n  function NumberLiteralTypeAnnotation() {\n    for (var _len105 = arguments.length, args = new Array(_len105), _key105 = 0; _key105 < _len105; _key105++) {\n      args[_key105] = arguments[_key105];\n    }\n\n    return (0, _builder.default).apply(void 0, [\"NumberLiteralTypeAnnotation\"].concat(args));\n  }\n\n  function NumberTypeAnnotation() {\n    for (var _len106 = arguments.length, args = new Array(_len106), _key106 = 0; _key106 < _len106; _key106++) {\n      args[_key106] = arguments[_key106];\n    }\n\n    return (0, _builder.default).apply(void 0, [\"NumberTypeAnnotation\"].concat(args));\n  }\n\n  function ObjectTypeAnnotation() {\n    for (var _len107 = arguments.length, args = new Array(_len107), _key107 = 0; _key107 < _len107; _key107++) {\n      args[_key107] = arguments[_key107];\n    }\n\n    return (0, _builder.default).apply(void 0, [\"ObjectTypeAnnotation\"].concat(args));\n  }\n\n  function ObjectTypeInternalSlot() {\n    for (var _len108 = arguments.length, args = new Array(_len108), _key108 = 0; _key108 < _len108; _key108++) {\n      args[_key108] = arguments[_key108];\n    }\n\n    return (0, _builder.default).apply(void 0, [\"ObjectTypeInternalSlot\"].concat(args));\n  }\n\n  function ObjectTypeCallProperty() {\n    for (var _len109 = arguments.length, args = new Array(_len109), _key109 = 0; _key109 < _len109; _key109++) {\n      args[_key109] = arguments[_key109];\n    }\n\n    return (0, _builder.default).apply(void 0, [\"ObjectTypeCallProperty\"].concat(args));\n  }\n\n  function ObjectTypeIndexer() {\n    for (var _len110 = arguments.length, args = new Array(_len110), _key110 = 0; _key110 < _len110; _key110++) {\n      args[_key110] = arguments[_key110];\n    }\n\n    return (0, _builder.default).apply(void 0, [\"ObjectTypeIndexer\"].concat(args));\n  }\n\n  function ObjectTypeProperty() {\n    for (var _len111 = arguments.length, args = new Array(_len111), _key111 = 0; _key111 < _len111; _key111++) {\n      args[_key111] = arguments[_key111];\n    }\n\n    return (0, _builder.default).apply(void 0, [\"ObjectTypeProperty\"].concat(args));\n  }\n\n  function ObjectTypeSpreadProperty() {\n    for (var _len112 = arguments.length, args = new Array(_len112), _key112 = 0; _key112 < _len112; _key112++) {\n      args[_key112] = arguments[_key112];\n    }\n\n    return (0, _builder.default).apply(void 0, [\"ObjectTypeSpreadProperty\"].concat(args));\n  }\n\n  function OpaqueType() {\n    for (var _len113 = arguments.length, args = new Array(_len113), _key113 = 0; _key113 < _len113; _key113++) {\n      args[_key113] = arguments[_key113];\n    }\n\n    return (0, _builder.default).apply(void 0, [\"OpaqueType\"].concat(args));\n  }\n\n  function QualifiedTypeIdentifier() {\n    for (var _len114 = arguments.length, args = new Array(_len114), _key114 = 0; _key114 < _len114; _key114++) {\n      args[_key114] = arguments[_key114];\n    }\n\n    return (0, _builder.default).apply(void 0, [\"QualifiedTypeIdentifier\"].concat(args));\n  }\n\n  function StringLiteralTypeAnnotation() {\n    for (var _len115 = arguments.length, args = new Array(_len115), _key115 = 0; _key115 < _len115; _key115++) {\n      args[_key115] = arguments[_key115];\n    }\n\n    return (0, _builder.default).apply(void 0, [\"StringLiteralTypeAnnotation\"].concat(args));\n  }\n\n  function StringTypeAnnotation() {\n    for (var _len116 = arguments.length, args = new Array(_len116), _key116 = 0; _key116 < _len116; _key116++) {\n      args[_key116] = arguments[_key116];\n    }\n\n    return (0, _builder.default).apply(void 0, [\"StringTypeAnnotation\"].concat(args));\n  }\n\n  function ThisTypeAnnotation() {\n    for (var _len117 = arguments.length, args = new Array(_len117), _key117 = 0; _key117 < _len117; _key117++) {\n      args[_key117] = arguments[_key117];\n    }\n\n    return (0, _builder.default).apply(void 0, [\"ThisTypeAnnotation\"].concat(args));\n  }\n\n  function TupleTypeAnnotation() {\n    for (var _len118 = arguments.length, args = new Array(_len118), _key118 = 0; _key118 < _len118; _key118++) {\n      args[_key118] = arguments[_key118];\n    }\n\n    return (0, _builder.default).apply(void 0, [\"TupleTypeAnnotation\"].concat(args));\n  }\n\n  function TypeofTypeAnnotation() {\n    for (var _len119 = arguments.length, args = new Array(_len119), _key119 = 0; _key119 < _len119; _key119++) {\n      args[_key119] = arguments[_key119];\n    }\n\n    return (0, _builder.default).apply(void 0, [\"TypeofTypeAnnotation\"].concat(args));\n  }\n\n  function TypeAlias() {\n    for (var _len120 = arguments.length, args = new Array(_len120), _key120 = 0; _key120 < _len120; _key120++) {\n      args[_key120] = arguments[_key120];\n    }\n\n    return (0, _builder.default).apply(void 0, [\"TypeAlias\"].concat(args));\n  }\n\n  function TypeAnnotation() {\n    for (var _len121 = arguments.length, args = new Array(_len121), _key121 = 0; _key121 < _len121; _key121++) {\n      args[_key121] = arguments[_key121];\n    }\n\n    return (0, _builder.default).apply(void 0, [\"TypeAnnotation\"].concat(args));\n  }\n\n  function TypeCastExpression() {\n    for (var _len122 = arguments.length, args = new Array(_len122), _key122 = 0; _key122 < _len122; _key122++) {\n      args[_key122] = arguments[_key122];\n    }\n\n    return (0, _builder.default).apply(void 0, [\"TypeCastExpression\"].concat(args));\n  }\n\n  function TypeParameter() {\n    for (var _len123 = arguments.length, args = new Array(_len123), _key123 = 0; _key123 < _len123; _key123++) {\n      args[_key123] = arguments[_key123];\n    }\n\n    return (0, _builder.default).apply(void 0, [\"TypeParameter\"].concat(args));\n  }\n\n  function TypeParameterDeclaration() {\n    for (var _len124 = arguments.length, args = new Array(_len124), _key124 = 0; _key124 < _len124; _key124++) {\n      args[_key124] = arguments[_key124];\n    }\n\n    return (0, _builder.default).apply(void 0, [\"TypeParameterDeclaration\"].concat(args));\n  }\n\n  function TypeParameterInstantiation() {\n    for (var _len125 = arguments.length, args = new Array(_len125), _key125 = 0; _key125 < _len125; _key125++) {\n      args[_key125] = arguments[_key125];\n    }\n\n    return (0, _builder.default).apply(void 0, [\"TypeParameterInstantiation\"].concat(args));\n  }\n\n  function UnionTypeAnnotation() {\n    for (var _len126 = arguments.length, args = new Array(_len126), _key126 = 0; _key126 < _len126; _key126++) {\n      args[_key126] = arguments[_key126];\n    }\n\n    return (0, _builder.default).apply(void 0, [\"UnionTypeAnnotation\"].concat(args));\n  }\n\n  function Variance() {\n    for (var _len127 = arguments.length, args = new Array(_len127), _key127 = 0; _key127 < _len127; _key127++) {\n      args[_key127] = arguments[_key127];\n    }\n\n    return (0, _builder.default).apply(void 0, [\"Variance\"].concat(args));\n  }\n\n  function VoidTypeAnnotation() {\n    for (var _len128 = arguments.length, args = new Array(_len128), _key128 = 0; _key128 < _len128; _key128++) {\n      args[_key128] = arguments[_key128];\n    }\n\n    return (0, _builder.default).apply(void 0, [\"VoidTypeAnnotation\"].concat(args));\n  }\n\n  function JSXAttribute() {\n    for (var _len129 = arguments.length, args = new Array(_len129), _key129 = 0; _key129 < _len129; _key129++) {\n      args[_key129] = arguments[_key129];\n    }\n\n    return (0, _builder.default).apply(void 0, [\"JSXAttribute\"].concat(args));\n  }\n\n  function JSXClosingElement() {\n    for (var _len130 = arguments.length, args = new Array(_len130), _key130 = 0; _key130 < _len130; _key130++) {\n      args[_key130] = arguments[_key130];\n    }\n\n    return (0, _builder.default).apply(void 0, [\"JSXClosingElement\"].concat(args));\n  }\n\n  function JSXElement() {\n    for (var _len131 = arguments.length, args = new Array(_len131), _key131 = 0; _key131 < _len131; _key131++) {\n      args[_key131] = arguments[_key131];\n    }\n\n    return (0, _builder.default).apply(void 0, [\"JSXElement\"].concat(args));\n  }\n\n  function JSXEmptyExpression() {\n    for (var _len132 = arguments.length, args = new Array(_len132), _key132 = 0; _key132 < _len132; _key132++) {\n      args[_key132] = arguments[_key132];\n    }\n\n    return (0, _builder.default).apply(void 0, [\"JSXEmptyExpression\"].concat(args));\n  }\n\n  function JSXExpressionContainer() {\n    for (var _len133 = arguments.length, args = new Array(_len133), _key133 = 0; _key133 < _len133; _key133++) {\n      args[_key133] = arguments[_key133];\n    }\n\n    return (0, _builder.default).apply(void 0, [\"JSXExpressionContainer\"].concat(args));\n  }\n\n  function JSXSpreadChild() {\n    for (var _len134 = arguments.length, args = new Array(_len134), _key134 = 0; _key134 < _len134; _key134++) {\n      args[_key134] = arguments[_key134];\n    }\n\n    return (0, _builder.default).apply(void 0, [\"JSXSpreadChild\"].concat(args));\n  }\n\n  function JSXIdentifier() {\n    for (var _len135 = arguments.length, args = new Array(_len135), _key135 = 0; _key135 < _len135; _key135++) {\n      args[_key135] = arguments[_key135];\n    }\n\n    return (0, _builder.default).apply(void 0, [\"JSXIdentifier\"].concat(args));\n  }\n\n  function JSXMemberExpression() {\n    for (var _len136 = arguments.length, args = new Array(_len136), _key136 = 0; _key136 < _len136; _key136++) {\n      args[_key136] = arguments[_key136];\n    }\n\n    return (0, _builder.default).apply(void 0, [\"JSXMemberExpression\"].concat(args));\n  }\n\n  function JSXNamespacedName() {\n    for (var _len137 = arguments.length, args = new Array(_len137), _key137 = 0; _key137 < _len137; _key137++) {\n      args[_key137] = arguments[_key137];\n    }\n\n    return (0, _builder.default).apply(void 0, [\"JSXNamespacedName\"].concat(args));\n  }\n\n  function JSXOpeningElement() {\n    for (var _len138 = arguments.length, args = new Array(_len138), _key138 = 0; _key138 < _len138; _key138++) {\n      args[_key138] = arguments[_key138];\n    }\n\n    return (0, _builder.default).apply(void 0, [\"JSXOpeningElement\"].concat(args));\n  }\n\n  function JSXSpreadAttribute() {\n    for (var _len139 = arguments.length, args = new Array(_len139), _key139 = 0; _key139 < _len139; _key139++) {\n      args[_key139] = arguments[_key139];\n    }\n\n    return (0, _builder.default).apply(void 0, [\"JSXSpreadAttribute\"].concat(args));\n  }\n\n  function JSXText() {\n    for (var _len140 = arguments.length, args = new Array(_len140), _key140 = 0; _key140 < _len140; _key140++) {\n      args[_key140] = arguments[_key140];\n    }\n\n    return (0, _builder.default).apply(void 0, [\"JSXText\"].concat(args));\n  }\n\n  function JSXFragment() {\n    for (var _len141 = arguments.length, args = new Array(_len141), _key141 = 0; _key141 < _len141; _key141++) {\n      args[_key141] = arguments[_key141];\n    }\n\n    return (0, _builder.default).apply(void 0, [\"JSXFragment\"].concat(args));\n  }\n\n  function JSXOpeningFragment() {\n    for (var _len142 = arguments.length, args = new Array(_len142), _key142 = 0; _key142 < _len142; _key142++) {\n      args[_key142] = arguments[_key142];\n    }\n\n    return (0, _builder.default).apply(void 0, [\"JSXOpeningFragment\"].concat(args));\n  }\n\n  function JSXClosingFragment() {\n    for (var _len143 = arguments.length, args = new Array(_len143), _key143 = 0; _key143 < _len143; _key143++) {\n      args[_key143] = arguments[_key143];\n    }\n\n    return (0, _builder.default).apply(void 0, [\"JSXClosingFragment\"].concat(args));\n  }\n\n  function Noop() {\n    for (var _len144 = arguments.length, args = new Array(_len144), _key144 = 0; _key144 < _len144; _key144++) {\n      args[_key144] = arguments[_key144];\n    }\n\n    return (0, _builder.default).apply(void 0, [\"Noop\"].concat(args));\n  }\n\n  function Placeholder() {\n    for (var _len145 = arguments.length, args = new Array(_len145), _key145 = 0; _key145 < _len145; _key145++) {\n      args[_key145] = arguments[_key145];\n    }\n\n    return (0, _builder.default).apply(void 0, [\"Placeholder\"].concat(args));\n  }\n\n  function ArgumentPlaceholder() {\n    for (var _len146 = arguments.length, args = new Array(_len146), _key146 = 0; _key146 < _len146; _key146++) {\n      args[_key146] = arguments[_key146];\n    }\n\n    return (0, _builder.default).apply(void 0, [\"ArgumentPlaceholder\"].concat(args));\n  }\n\n  function AwaitExpression() {\n    for (var _len147 = arguments.length, args = new Array(_len147), _key147 = 0; _key147 < _len147; _key147++) {\n      args[_key147] = arguments[_key147];\n    }\n\n    return (0, _builder.default).apply(void 0, [\"AwaitExpression\"].concat(args));\n  }\n\n  function BindExpression() {\n    for (var _len148 = arguments.length, args = new Array(_len148), _key148 = 0; _key148 < _len148; _key148++) {\n      args[_key148] = arguments[_key148];\n    }\n\n    return (0, _builder.default).apply(void 0, [\"BindExpression\"].concat(args));\n  }\n\n  function ClassProperty() {\n    for (var _len149 = arguments.length, args = new Array(_len149), _key149 = 0; _key149 < _len149; _key149++) {\n      args[_key149] = arguments[_key149];\n    }\n\n    return (0, _builder.default).apply(void 0, [\"ClassProperty\"].concat(args));\n  }\n\n  function OptionalMemberExpression() {\n    for (var _len150 = arguments.length, args = new Array(_len150), _key150 = 0; _key150 < _len150; _key150++) {\n      args[_key150] = arguments[_key150];\n    }\n\n    return (0, _builder.default).apply(void 0, [\"OptionalMemberExpression\"].concat(args));\n  }\n\n  function PipelineTopicExpression() {\n    for (var _len151 = arguments.length, args = new Array(_len151), _key151 = 0; _key151 < _len151; _key151++) {\n      args[_key151] = arguments[_key151];\n    }\n\n    return (0, _builder.default).apply(void 0, [\"PipelineTopicExpression\"].concat(args));\n  }\n\n  function PipelineBareFunction() {\n    for (var _len152 = arguments.length, args = new Array(_len152), _key152 = 0; _key152 < _len152; _key152++) {\n      args[_key152] = arguments[_key152];\n    }\n\n    return (0, _builder.default).apply(void 0, [\"PipelineBareFunction\"].concat(args));\n  }\n\n  function PipelinePrimaryTopicReference() {\n    for (var _len153 = arguments.length, args = new Array(_len153), _key153 = 0; _key153 < _len153; _key153++) {\n      args[_key153] = arguments[_key153];\n    }\n\n    return (0, _builder.default).apply(void 0, [\"PipelinePrimaryTopicReference\"].concat(args));\n  }\n\n  function OptionalCallExpression() {\n    for (var _len154 = arguments.length, args = new Array(_len154), _key154 = 0; _key154 < _len154; _key154++) {\n      args[_key154] = arguments[_key154];\n    }\n\n    return (0, _builder.default).apply(void 0, [\"OptionalCallExpression\"].concat(args));\n  }\n\n  function ClassPrivateProperty() {\n    for (var _len155 = arguments.length, args = new Array(_len155), _key155 = 0; _key155 < _len155; _key155++) {\n      args[_key155] = arguments[_key155];\n    }\n\n    return (0, _builder.default).apply(void 0, [\"ClassPrivateProperty\"].concat(args));\n  }\n\n  function ClassPrivateMethod() {\n    for (var _len156 = arguments.length, args = new Array(_len156), _key156 = 0; _key156 < _len156; _key156++) {\n      args[_key156] = arguments[_key156];\n    }\n\n    return (0, _builder.default).apply(void 0, [\"ClassPrivateMethod\"].concat(args));\n  }\n\n  function Import() {\n    for (var _len157 = arguments.length, args = new Array(_len157), _key157 = 0; _key157 < _len157; _key157++) {\n      args[_key157] = arguments[_key157];\n    }\n\n    return (0, _builder.default).apply(void 0, [\"Import\"].concat(args));\n  }\n\n  function Decorator() {\n    for (var _len158 = arguments.length, args = new Array(_len158), _key158 = 0; _key158 < _len158; _key158++) {\n      args[_key158] = arguments[_key158];\n    }\n\n    return (0, _builder.default).apply(void 0, [\"Decorator\"].concat(args));\n  }\n\n  function DoExpression() {\n    for (var _len159 = arguments.length, args = new Array(_len159), _key159 = 0; _key159 < _len159; _key159++) {\n      args[_key159] = arguments[_key159];\n    }\n\n    return (0, _builder.default).apply(void 0, [\"DoExpression\"].concat(args));\n  }\n\n  function ExportDefaultSpecifier() {\n    for (var _len160 = arguments.length, args = new Array(_len160), _key160 = 0; _key160 < _len160; _key160++) {\n      args[_key160] = arguments[_key160];\n    }\n\n    return (0, _builder.default).apply(void 0, [\"ExportDefaultSpecifier\"].concat(args));\n  }\n\n  function ExportNamespaceSpecifier() {\n    for (var _len161 = arguments.length, args = new Array(_len161), _key161 = 0; _key161 < _len161; _key161++) {\n      args[_key161] = arguments[_key161];\n    }\n\n    return (0, _builder.default).apply(void 0, [\"ExportNamespaceSpecifier\"].concat(args));\n  }\n\n  function PrivateName() {\n    for (var _len162 = arguments.length, args = new Array(_len162), _key162 = 0; _key162 < _len162; _key162++) {\n      args[_key162] = arguments[_key162];\n    }\n\n    return (0, _builder.default).apply(void 0, [\"PrivateName\"].concat(args));\n  }\n\n  function BigIntLiteral() {\n    for (var _len163 = arguments.length, args = new Array(_len163), _key163 = 0; _key163 < _len163; _key163++) {\n      args[_key163] = arguments[_key163];\n    }\n\n    return (0, _builder.default).apply(void 0, [\"BigIntLiteral\"].concat(args));\n  }\n\n  function TSParameterProperty() {\n    for (var _len164 = arguments.length, args = new Array(_len164), _key164 = 0; _key164 < _len164; _key164++) {\n      args[_key164] = arguments[_key164];\n    }\n\n    return (0, _builder.default).apply(void 0, [\"TSParameterProperty\"].concat(args));\n  }\n\n  function TSDeclareFunction() {\n    for (var _len165 = arguments.length, args = new Array(_len165), _key165 = 0; _key165 < _len165; _key165++) {\n      args[_key165] = arguments[_key165];\n    }\n\n    return (0, _builder.default).apply(void 0, [\"TSDeclareFunction\"].concat(args));\n  }\n\n  function TSDeclareMethod() {\n    for (var _len166 = arguments.length, args = new Array(_len166), _key166 = 0; _key166 < _len166; _key166++) {\n      args[_key166] = arguments[_key166];\n    }\n\n    return (0, _builder.default).apply(void 0, [\"TSDeclareMethod\"].concat(args));\n  }\n\n  function TSQualifiedName() {\n    for (var _len167 = arguments.length, args = new Array(_len167), _key167 = 0; _key167 < _len167; _key167++) {\n      args[_key167] = arguments[_key167];\n    }\n\n    return (0, _builder.default).apply(void 0, [\"TSQualifiedName\"].concat(args));\n  }\n\n  function TSCallSignatureDeclaration() {\n    for (var _len168 = arguments.length, args = new Array(_len168), _key168 = 0; _key168 < _len168; _key168++) {\n      args[_key168] = arguments[_key168];\n    }\n\n    return (0, _builder.default).apply(void 0, [\"TSCallSignatureDeclaration\"].concat(args));\n  }\n\n  function TSConstructSignatureDeclaration() {\n    for (var _len169 = arguments.length, args = new Array(_len169), _key169 = 0; _key169 < _len169; _key169++) {\n      args[_key169] = arguments[_key169];\n    }\n\n    return (0, _builder.default).apply(void 0, [\"TSConstructSignatureDeclaration\"].concat(args));\n  }\n\n  function TSPropertySignature() {\n    for (var _len170 = arguments.length, args = new Array(_len170), _key170 = 0; _key170 < _len170; _key170++) {\n      args[_key170] = arguments[_key170];\n    }\n\n    return (0, _builder.default).apply(void 0, [\"TSPropertySignature\"].concat(args));\n  }\n\n  function TSMethodSignature() {\n    for (var _len171 = arguments.length, args = new Array(_len171), _key171 = 0; _key171 < _len171; _key171++) {\n      args[_key171] = arguments[_key171];\n    }\n\n    return (0, _builder.default).apply(void 0, [\"TSMethodSignature\"].concat(args));\n  }\n\n  function TSIndexSignature() {\n    for (var _len172 = arguments.length, args = new Array(_len172), _key172 = 0; _key172 < _len172; _key172++) {\n      args[_key172] = arguments[_key172];\n    }\n\n    return (0, _builder.default).apply(void 0, [\"TSIndexSignature\"].concat(args));\n  }\n\n  function TSAnyKeyword() {\n    for (var _len173 = arguments.length, args = new Array(_len173), _key173 = 0; _key173 < _len173; _key173++) {\n      args[_key173] = arguments[_key173];\n    }\n\n    return (0, _builder.default).apply(void 0, [\"TSAnyKeyword\"].concat(args));\n  }\n\n  function TSUnknownKeyword() {\n    for (var _len174 = arguments.length, args = new Array(_len174), _key174 = 0; _key174 < _len174; _key174++) {\n      args[_key174] = arguments[_key174];\n    }\n\n    return (0, _builder.default).apply(void 0, [\"TSUnknownKeyword\"].concat(args));\n  }\n\n  function TSNumberKeyword() {\n    for (var _len175 = arguments.length, args = new Array(_len175), _key175 = 0; _key175 < _len175; _key175++) {\n      args[_key175] = arguments[_key175];\n    }\n\n    return (0, _builder.default).apply(void 0, [\"TSNumberKeyword\"].concat(args));\n  }\n\n  function TSObjectKeyword() {\n    for (var _len176 = arguments.length, args = new Array(_len176), _key176 = 0; _key176 < _len176; _key176++) {\n      args[_key176] = arguments[_key176];\n    }\n\n    return (0, _builder.default).apply(void 0, [\"TSObjectKeyword\"].concat(args));\n  }\n\n  function TSBooleanKeyword() {\n    for (var _len177 = arguments.length, args = new Array(_len177), _key177 = 0; _key177 < _len177; _key177++) {\n      args[_key177] = arguments[_key177];\n    }\n\n    return (0, _builder.default).apply(void 0, [\"TSBooleanKeyword\"].concat(args));\n  }\n\n  function TSStringKeyword() {\n    for (var _len178 = arguments.length, args = new Array(_len178), _key178 = 0; _key178 < _len178; _key178++) {\n      args[_key178] = arguments[_key178];\n    }\n\n    return (0, _builder.default).apply(void 0, [\"TSStringKeyword\"].concat(args));\n  }\n\n  function TSSymbolKeyword() {\n    for (var _len179 = arguments.length, args = new Array(_len179), _key179 = 0; _key179 < _len179; _key179++) {\n      args[_key179] = arguments[_key179];\n    }\n\n    return (0, _builder.default).apply(void 0, [\"TSSymbolKeyword\"].concat(args));\n  }\n\n  function TSVoidKeyword() {\n    for (var _len180 = arguments.length, args = new Array(_len180), _key180 = 0; _key180 < _len180; _key180++) {\n      args[_key180] = arguments[_key180];\n    }\n\n    return (0, _builder.default).apply(void 0, [\"TSVoidKeyword\"].concat(args));\n  }\n\n  function TSUndefinedKeyword() {\n    for (var _len181 = arguments.length, args = new Array(_len181), _key181 = 0; _key181 < _len181; _key181++) {\n      args[_key181] = arguments[_key181];\n    }\n\n    return (0, _builder.default).apply(void 0, [\"TSUndefinedKeyword\"].concat(args));\n  }\n\n  function TSNullKeyword() {\n    for (var _len182 = arguments.length, args = new Array(_len182), _key182 = 0; _key182 < _len182; _key182++) {\n      args[_key182] = arguments[_key182];\n    }\n\n    return (0, _builder.default).apply(void 0, [\"TSNullKeyword\"].concat(args));\n  }\n\n  function TSNeverKeyword() {\n    for (var _len183 = arguments.length, args = new Array(_len183), _key183 = 0; _key183 < _len183; _key183++) {\n      args[_key183] = arguments[_key183];\n    }\n\n    return (0, _builder.default).apply(void 0, [\"TSNeverKeyword\"].concat(args));\n  }\n\n  function TSThisType() {\n    for (var _len184 = arguments.length, args = new Array(_len184), _key184 = 0; _key184 < _len184; _key184++) {\n      args[_key184] = arguments[_key184];\n    }\n\n    return (0, _builder.default).apply(void 0, [\"TSThisType\"].concat(args));\n  }\n\n  function TSFunctionType() {\n    for (var _len185 = arguments.length, args = new Array(_len185), _key185 = 0; _key185 < _len185; _key185++) {\n      args[_key185] = arguments[_key185];\n    }\n\n    return (0, _builder.default).apply(void 0, [\"TSFunctionType\"].concat(args));\n  }\n\n  function TSConstructorType() {\n    for (var _len186 = arguments.length, args = new Array(_len186), _key186 = 0; _key186 < _len186; _key186++) {\n      args[_key186] = arguments[_key186];\n    }\n\n    return (0, _builder.default).apply(void 0, [\"TSConstructorType\"].concat(args));\n  }\n\n  function TSTypeReference() {\n    for (var _len187 = arguments.length, args = new Array(_len187), _key187 = 0; _key187 < _len187; _key187++) {\n      args[_key187] = arguments[_key187];\n    }\n\n    return (0, _builder.default).apply(void 0, [\"TSTypeReference\"].concat(args));\n  }\n\n  function TSTypePredicate() {\n    for (var _len188 = arguments.length, args = new Array(_len188), _key188 = 0; _key188 < _len188; _key188++) {\n      args[_key188] = arguments[_key188];\n    }\n\n    return (0, _builder.default).apply(void 0, [\"TSTypePredicate\"].concat(args));\n  }\n\n  function TSTypeQuery() {\n    for (var _len189 = arguments.length, args = new Array(_len189), _key189 = 0; _key189 < _len189; _key189++) {\n      args[_key189] = arguments[_key189];\n    }\n\n    return (0, _builder.default).apply(void 0, [\"TSTypeQuery\"].concat(args));\n  }\n\n  function TSTypeLiteral() {\n    for (var _len190 = arguments.length, args = new Array(_len190), _key190 = 0; _key190 < _len190; _key190++) {\n      args[_key190] = arguments[_key190];\n    }\n\n    return (0, _builder.default).apply(void 0, [\"TSTypeLiteral\"].concat(args));\n  }\n\n  function TSArrayType() {\n    for (var _len191 = arguments.length, args = new Array(_len191), _key191 = 0; _key191 < _len191; _key191++) {\n      args[_key191] = arguments[_key191];\n    }\n\n    return (0, _builder.default).apply(void 0, [\"TSArrayType\"].concat(args));\n  }\n\n  function TSTupleType() {\n    for (var _len192 = arguments.length, args = new Array(_len192), _key192 = 0; _key192 < _len192; _key192++) {\n      args[_key192] = arguments[_key192];\n    }\n\n    return (0, _builder.default).apply(void 0, [\"TSTupleType\"].concat(args));\n  }\n\n  function TSOptionalType() {\n    for (var _len193 = arguments.length, args = new Array(_len193), _key193 = 0; _key193 < _len193; _key193++) {\n      args[_key193] = arguments[_key193];\n    }\n\n    return (0, _builder.default).apply(void 0, [\"TSOptionalType\"].concat(args));\n  }\n\n  function TSRestType() {\n    for (var _len194 = arguments.length, args = new Array(_len194), _key194 = 0; _key194 < _len194; _key194++) {\n      args[_key194] = arguments[_key194];\n    }\n\n    return (0, _builder.default).apply(void 0, [\"TSRestType\"].concat(args));\n  }\n\n  function TSUnionType() {\n    for (var _len195 = arguments.length, args = new Array(_len195), _key195 = 0; _key195 < _len195; _key195++) {\n      args[_key195] = arguments[_key195];\n    }\n\n    return (0, _builder.default).apply(void 0, [\"TSUnionType\"].concat(args));\n  }\n\n  function TSIntersectionType() {\n    for (var _len196 = arguments.length, args = new Array(_len196), _key196 = 0; _key196 < _len196; _key196++) {\n      args[_key196] = arguments[_key196];\n    }\n\n    return (0, _builder.default).apply(void 0, [\"TSIntersectionType\"].concat(args));\n  }\n\n  function TSConditionalType() {\n    for (var _len197 = arguments.length, args = new Array(_len197), _key197 = 0; _key197 < _len197; _key197++) {\n      args[_key197] = arguments[_key197];\n    }\n\n    return (0, _builder.default).apply(void 0, [\"TSConditionalType\"].concat(args));\n  }\n\n  function TSInferType() {\n    for (var _len198 = arguments.length, args = new Array(_len198), _key198 = 0; _key198 < _len198; _key198++) {\n      args[_key198] = arguments[_key198];\n    }\n\n    return (0, _builder.default).apply(void 0, [\"TSInferType\"].concat(args));\n  }\n\n  function TSParenthesizedType() {\n    for (var _len199 = arguments.length, args = new Array(_len199), _key199 = 0; _key199 < _len199; _key199++) {\n      args[_key199] = arguments[_key199];\n    }\n\n    return (0, _builder.default).apply(void 0, [\"TSParenthesizedType\"].concat(args));\n  }\n\n  function TSTypeOperator() {\n    for (var _len200 = arguments.length, args = new Array(_len200), _key200 = 0; _key200 < _len200; _key200++) {\n      args[_key200] = arguments[_key200];\n    }\n\n    return (0, _builder.default).apply(void 0, [\"TSTypeOperator\"].concat(args));\n  }\n\n  function TSIndexedAccessType() {\n    for (var _len201 = arguments.length, args = new Array(_len201), _key201 = 0; _key201 < _len201; _key201++) {\n      args[_key201] = arguments[_key201];\n    }\n\n    return (0, _builder.default).apply(void 0, [\"TSIndexedAccessType\"].concat(args));\n  }\n\n  function TSMappedType() {\n    for (var _len202 = arguments.length, args = new Array(_len202), _key202 = 0; _key202 < _len202; _key202++) {\n      args[_key202] = arguments[_key202];\n    }\n\n    return (0, _builder.default).apply(void 0, [\"TSMappedType\"].concat(args));\n  }\n\n  function TSLiteralType() {\n    for (var _len203 = arguments.length, args = new Array(_len203), _key203 = 0; _key203 < _len203; _key203++) {\n      args[_key203] = arguments[_key203];\n    }\n\n    return (0, _builder.default).apply(void 0, [\"TSLiteralType\"].concat(args));\n  }\n\n  function TSExpressionWithTypeArguments() {\n    for (var _len204 = arguments.length, args = new Array(_len204), _key204 = 0; _key204 < _len204; _key204++) {\n      args[_key204] = arguments[_key204];\n    }\n\n    return (0, _builder.default).apply(void 0, [\"TSExpressionWithTypeArguments\"].concat(args));\n  }\n\n  function TSInterfaceDeclaration() {\n    for (var _len205 = arguments.length, args = new Array(_len205), _key205 = 0; _key205 < _len205; _key205++) {\n      args[_key205] = arguments[_key205];\n    }\n\n    return (0, _builder.default).apply(void 0, [\"TSInterfaceDeclaration\"].concat(args));\n  }\n\n  function TSInterfaceBody() {\n    for (var _len206 = arguments.length, args = new Array(_len206), _key206 = 0; _key206 < _len206; _key206++) {\n      args[_key206] = arguments[_key206];\n    }\n\n    return (0, _builder.default).apply(void 0, [\"TSInterfaceBody\"].concat(args));\n  }\n\n  function TSTypeAliasDeclaration() {\n    for (var _len207 = arguments.length, args = new Array(_len207), _key207 = 0; _key207 < _len207; _key207++) {\n      args[_key207] = arguments[_key207];\n    }\n\n    return (0, _builder.default).apply(void 0, [\"TSTypeAliasDeclaration\"].concat(args));\n  }\n\n  function TSAsExpression() {\n    for (var _len208 = arguments.length, args = new Array(_len208), _key208 = 0; _key208 < _len208; _key208++) {\n      args[_key208] = arguments[_key208];\n    }\n\n    return (0, _builder.default).apply(void 0, [\"TSAsExpression\"].concat(args));\n  }\n\n  function TSTypeAssertion() {\n    for (var _len209 = arguments.length, args = new Array(_len209), _key209 = 0; _key209 < _len209; _key209++) {\n      args[_key209] = arguments[_key209];\n    }\n\n    return (0, _builder.default).apply(void 0, [\"TSTypeAssertion\"].concat(args));\n  }\n\n  function TSEnumDeclaration() {\n    for (var _len210 = arguments.length, args = new Array(_len210), _key210 = 0; _key210 < _len210; _key210++) {\n      args[_key210] = arguments[_key210];\n    }\n\n    return (0, _builder.default).apply(void 0, [\"TSEnumDeclaration\"].concat(args));\n  }\n\n  function TSEnumMember() {\n    for (var _len211 = arguments.length, args = new Array(_len211), _key211 = 0; _key211 < _len211; _key211++) {\n      args[_key211] = arguments[_key211];\n    }\n\n    return (0, _builder.default).apply(void 0, [\"TSEnumMember\"].concat(args));\n  }\n\n  function TSModuleDeclaration() {\n    for (var _len212 = arguments.length, args = new Array(_len212), _key212 = 0; _key212 < _len212; _key212++) {\n      args[_key212] = arguments[_key212];\n    }\n\n    return (0, _builder.default).apply(void 0, [\"TSModuleDeclaration\"].concat(args));\n  }\n\n  function TSModuleBlock() {\n    for (var _len213 = arguments.length, args = new Array(_len213), _key213 = 0; _key213 < _len213; _key213++) {\n      args[_key213] = arguments[_key213];\n    }\n\n    return (0, _builder.default).apply(void 0, [\"TSModuleBlock\"].concat(args));\n  }\n\n  function TSImportType() {\n    for (var _len214 = arguments.length, args = new Array(_len214), _key214 = 0; _key214 < _len214; _key214++) {\n      args[_key214] = arguments[_key214];\n    }\n\n    return (0, _builder.default).apply(void 0, [\"TSImportType\"].concat(args));\n  }\n\n  function TSImportEqualsDeclaration() {\n    for (var _len215 = arguments.length, args = new Array(_len215), _key215 = 0; _key215 < _len215; _key215++) {\n      args[_key215] = arguments[_key215];\n    }\n\n    return (0, _builder.default).apply(void 0, [\"TSImportEqualsDeclaration\"].concat(args));\n  }\n\n  function TSExternalModuleReference() {\n    for (var _len216 = arguments.length, args = new Array(_len216), _key216 = 0; _key216 < _len216; _key216++) {\n      args[_key216] = arguments[_key216];\n    }\n\n    return (0, _builder.default).apply(void 0, [\"TSExternalModuleReference\"].concat(args));\n  }\n\n  function TSNonNullExpression() {\n    for (var _len217 = arguments.length, args = new Array(_len217), _key217 = 0; _key217 < _len217; _key217++) {\n      args[_key217] = arguments[_key217];\n    }\n\n    return (0, _builder.default).apply(void 0, [\"TSNonNullExpression\"].concat(args));\n  }\n\n  function TSExportAssignment() {\n    for (var _len218 = arguments.length, args = new Array(_len218), _key218 = 0; _key218 < _len218; _key218++) {\n      args[_key218] = arguments[_key218];\n    }\n\n    return (0, _builder.default).apply(void 0, [\"TSExportAssignment\"].concat(args));\n  }\n\n  function TSNamespaceExportDeclaration() {\n    for (var _len219 = arguments.length, args = new Array(_len219), _key219 = 0; _key219 < _len219; _key219++) {\n      args[_key219] = arguments[_key219];\n    }\n\n    return (0, _builder.default).apply(void 0, [\"TSNamespaceExportDeclaration\"].concat(args));\n  }\n\n  function TSTypeAnnotation() {\n    for (var _len220 = arguments.length, args = new Array(_len220), _key220 = 0; _key220 < _len220; _key220++) {\n      args[_key220] = arguments[_key220];\n    }\n\n    return (0, _builder.default).apply(void 0, [\"TSTypeAnnotation\"].concat(args));\n  }\n\n  function TSTypeParameterInstantiation() {\n    for (var _len221 = arguments.length, args = new Array(_len221), _key221 = 0; _key221 < _len221; _key221++) {\n      args[_key221] = arguments[_key221];\n    }\n\n    return (0, _builder.default).apply(void 0, [\"TSTypeParameterInstantiation\"].concat(args));\n  }\n\n  function TSTypeParameterDeclaration() {\n    for (var _len222 = arguments.length, args = new Array(_len222), _key222 = 0; _key222 < _len222; _key222++) {\n      args[_key222] = arguments[_key222];\n    }\n\n    return (0, _builder.default).apply(void 0, [\"TSTypeParameterDeclaration\"].concat(args));\n  }\n\n  function TSTypeParameter() {\n    for (var _len223 = arguments.length, args = new Array(_len223), _key223 = 0; _key223 < _len223; _key223++) {\n      args[_key223] = arguments[_key223];\n    }\n\n    return (0, _builder.default).apply(void 0, [\"TSTypeParameter\"].concat(args));\n  }\n\n  function NumberLiteral() {\n    console.trace(\"The node type NumberLiteral has been renamed to NumericLiteral\");\n\n    for (var _len224 = arguments.length, args = new Array(_len224), _key224 = 0; _key224 < _len224; _key224++) {\n      args[_key224] = arguments[_key224];\n    }\n\n    return NumberLiteral.apply(void 0, [\"NumberLiteral\"].concat(args));\n  }\n\n  function RegexLiteral() {\n    console.trace(\"The node type RegexLiteral has been renamed to RegExpLiteral\");\n\n    for (var _len225 = arguments.length, args = new Array(_len225), _key225 = 0; _key225 < _len225; _key225++) {\n      args[_key225] = arguments[_key225];\n    }\n\n    return RegexLiteral.apply(void 0, [\"RegexLiteral\"].concat(args));\n  }\n\n  function RestProperty() {\n    console.trace(\"The node type RestProperty has been renamed to RestElement\");\n\n    for (var _len226 = arguments.length, args = new Array(_len226), _key226 = 0; _key226 < _len226; _key226++) {\n      args[_key226] = arguments[_key226];\n    }\n\n    return RestProperty.apply(void 0, [\"RestProperty\"].concat(args));\n  }\n\n  function SpreadProperty() {\n    console.trace(\"The node type SpreadProperty has been renamed to SpreadElement\");\n\n    for (var _len227 = arguments.length, args = new Array(_len227), _key227 = 0; _key227 < _len227; _key227++) {\n      args[_key227] = arguments[_key227];\n    }\n\n    return SpreadProperty.apply(void 0, [\"SpreadProperty\"].concat(args));\n  }\n});","map":[[2,0,1,0],[4,0,3,0,"Object"],[4,2,3,0,"Object"],[4,8,3,6],[4,9,3,7,"defineProperty"],[4,23,3,0],[4,24,3,22,"exports"],[4,31,3,0],[4,33,3,31],[4,45,3,0],[4,47,3,45],[5,0,4,2,"value"],[5,4,4,2,"value"],[5,9,4,7],[5,11,4,9],[6,0,3,45],[6,3,3,0],[7,0,6,0,"exports"],[7,2,6,0,"exports"],[7,9,6,7],[7,10,6,8,"arrayExpression"],[7,25,6,0],[7,28,6,26,"exports"],[7,35,6,33],[7,36,6,34,"ArrayExpression"],[7,51,6,26],[7,54,6,52,"ArrayExpression"],[7,69,6,0],[8,0,7,0,"exports"],[8,2,7,0,"exports"],[8,9,7,7],[8,10,7,8,"assignmentExpression"],[8,30,7,0],[8,33,7,31,"exports"],[8,40,7,38],[8,41,7,39,"AssignmentExpression"],[8,61,7,31],[8,64,7,62,"AssignmentExpression"],[8,84,7,0],[9,0,8,0,"exports"],[9,2,8,0,"exports"],[9,9,8,7],[9,10,8,8,"binaryExpression"],[9,26,8,0],[9,29,8,27,"exports"],[9,36,8,34],[9,37,8,35,"BinaryExpression"],[9,53,8,27],[9,56,8,54,"BinaryExpression"],[9,72,8,0],[10,0,9,0,"exports"],[10,2,9,0,"exports"],[10,9,9,7],[10,10,9,8,"interpreterDirective"],[10,30,9,0],[10,33,9,31,"exports"],[10,40,9,38],[10,41,9,39,"InterpreterDirective"],[10,61,9,31],[10,64,9,62,"InterpreterDirective"],[10,84,9,0],[11,0,10,0,"exports"],[11,2,10,0,"exports"],[11,9,10,7],[11,10,10,8,"directive"],[11,19,10,0],[11,22,10,20,"exports"],[11,29,10,27],[11,30,10,28,"Directive"],[11,39,10,20],[11,42,10,40,"Directive"],[11,51,10,0],[12,0,11,0,"exports"],[12,2,11,0,"exports"],[12,9,11,7],[12,10,11,8,"directiveLiteral"],[12,26,11,0],[12,29,11,27,"exports"],[12,36,11,34],[12,37,11,35,"DirectiveLiteral"],[12,53,11,27],[12,56,11,54,"DirectiveLiteral"],[12,72,11,0],[13,0,12,0,"exports"],[13,2,12,0,"exports"],[13,9,12,7],[13,10,12,8,"blockStatement"],[13,24,12,0],[13,27,12,25,"exports"],[13,34,12,32],[13,35,12,33,"BlockStatement"],[13,49,12,25],[13,52,12,50,"BlockStatement"],[13,66,12,0],[14,0,13,0,"exports"],[14,2,13,0,"exports"],[14,9,13,7],[14,10,13,8,"breakStatement"],[14,24,13,0],[14,27,13,25,"exports"],[14,34,13,32],[14,35,13,33,"BreakStatement"],[14,49,13,25],[14,52,13,50,"BreakStatement"],[14,66,13,0],[15,0,14,0,"exports"],[15,2,14,0,"exports"],[15,9,14,7],[15,10,14,8,"callExpression"],[15,24,14,0],[15,27,14,25,"exports"],[15,34,14,32],[15,35,14,33,"CallExpression"],[15,49,14,25],[15,52,14,50,"CallExpression"],[15,66,14,0],[16,0,15,0,"exports"],[16,2,15,0,"exports"],[16,9,15,7],[16,10,15,8,"catchClause"],[16,21,15,0],[16,24,15,22,"exports"],[16,31,15,29],[16,32,15,30,"CatchClause"],[16,43,15,22],[16,46,15,44,"CatchClause"],[16,57,15,0],[17,0,16,0,"exports"],[17,2,16,0,"exports"],[17,9,16,7],[17,10,16,8,"conditionalExpression"],[17,31,16,0],[17,34,16,32,"exports"],[17,41,16,39],[17,42,16,40,"ConditionalExpression"],[17,63,16,32],[17,66,16,64,"ConditionalExpression"],[17,87,16,0],[18,0,17,0,"exports"],[18,2,17,0,"exports"],[18,9,17,7],[18,10,17,8,"continueStatement"],[18,27,17,0],[18,30,17,28,"exports"],[18,37,17,35],[18,38,17,36,"ContinueStatement"],[18,55,17,28],[18,58,17,56,"ContinueStatement"],[18,75,17,0],[19,0,18,0,"exports"],[19,2,18,0,"exports"],[19,9,18,7],[19,10,18,8,"debuggerStatement"],[19,27,18,0],[19,30,18,28,"exports"],[19,37,18,35],[19,38,18,36,"DebuggerStatement"],[19,55,18,28],[19,58,18,56,"DebuggerStatement"],[19,75,18,0],[20,0,19,0,"exports"],[20,2,19,0,"exports"],[20,9,19,7],[20,10,19,8,"doWhileStatement"],[20,26,19,0],[20,29,19,27,"exports"],[20,36,19,34],[20,37,19,35,"DoWhileStatement"],[20,53,19,27],[20,56,19,54,"DoWhileStatement"],[20,72,19,0],[21,0,20,0,"exports"],[21,2,20,0,"exports"],[21,9,20,7],[21,10,20,8,"emptyStatement"],[21,24,20,0],[21,27,20,25,"exports"],[21,34,20,32],[21,35,20,33,"EmptyStatement"],[21,49,20,25],[21,52,20,50,"EmptyStatement"],[21,66,20,0],[22,0,21,0,"exports"],[22,2,21,0,"exports"],[22,9,21,7],[22,10,21,8,"expressionStatement"],[22,29,21,0],[22,32,21,30,"exports"],[22,39,21,37],[22,40,21,38,"ExpressionStatement"],[22,59,21,30],[22,62,21,60,"ExpressionStatement"],[22,81,21,0],[23,0,22,0,"exports"],[23,2,22,0,"exports"],[23,9,22,7],[23,10,22,8,"file"],[23,14,22,0],[23,17,22,15,"exports"],[23,24,22,22],[23,25,22,23,"File"],[23,29,22,15],[23,32,22,30,"File"],[23,36,22,0],[24,0,23,0,"exports"],[24,2,23,0,"exports"],[24,9,23,7],[24,10,23,8,"forInStatement"],[24,24,23,0],[24,27,23,25,"exports"],[24,34,23,32],[24,35,23,33,"ForInStatement"],[24,49,23,25],[24,52,23,50,"ForInStatement"],[24,66,23,0],[25,0,24,0,"exports"],[25,2,24,0,"exports"],[25,9,24,7],[25,10,24,8,"forStatement"],[25,22,24,0],[25,25,24,23,"exports"],[25,32,24,30],[25,33,24,31,"ForStatement"],[25,45,24,23],[25,48,24,46,"ForStatement"],[25,60,24,0],[26,0,25,0,"exports"],[26,2,25,0,"exports"],[26,9,25,7],[26,10,25,8,"functionDeclaration"],[26,29,25,0],[26,32,25,30,"exports"],[26,39,25,37],[26,40,25,38,"FunctionDeclaration"],[26,59,25,30],[26,62,25,60,"FunctionDeclaration"],[26,81,25,0],[27,0,26,0,"exports"],[27,2,26,0,"exports"],[27,9,26,7],[27,10,26,8,"functionExpression"],[27,28,26,0],[27,31,26,29,"exports"],[27,38,26,36],[27,39,26,37,"FunctionExpression"],[27,57,26,29],[27,60,26,58,"FunctionExpression"],[27,78,26,0],[28,0,27,0,"exports"],[28,2,27,0,"exports"],[28,9,27,7],[28,10,27,8,"identifier"],[28,20,27,0],[28,23,27,21,"exports"],[28,30,27,28],[28,31,27,29,"Identifier"],[28,41,27,21],[28,44,27,42,"Identifier"],[28,54,27,0],[29,0,28,0,"exports"],[29,2,28,0,"exports"],[29,9,28,7],[29,10,28,8,"ifStatement"],[29,21,28,0],[29,24,28,22,"exports"],[29,31,28,29],[29,32,28,30,"IfStatement"],[29,43,28,22],[29,46,28,44,"IfStatement"],[29,57,28,0],[30,0,29,0,"exports"],[30,2,29,0,"exports"],[30,9,29,7],[30,10,29,8,"labeledStatement"],[30,26,29,0],[30,29,29,27,"exports"],[30,36,29,34],[30,37,29,35,"LabeledStatement"],[30,53,29,27],[30,56,29,54,"LabeledStatement"],[30,72,29,0],[31,0,30,0,"exports"],[31,2,30,0,"exports"],[31,9,30,7],[31,10,30,8,"stringLiteral"],[31,23,30,0],[31,26,30,24,"exports"],[31,33,30,31],[31,34,30,32,"StringLiteral"],[31,47,30,24],[31,50,30,48,"StringLiteral"],[31,63,30,0],[32,0,31,0,"exports"],[32,2,31,0,"exports"],[32,9,31,7],[32,10,31,8,"numericLiteral"],[32,24,31,0],[32,27,31,25,"exports"],[32,34,31,32],[32,35,31,33,"NumericLiteral"],[32,49,31,25],[32,52,31,50,"NumericLiteral"],[32,66,31,0],[33,0,32,0,"exports"],[33,2,32,0,"exports"],[33,9,32,7],[33,10,32,8,"nullLiteral"],[33,21,32,0],[33,24,32,22,"exports"],[33,31,32,29],[33,32,32,30,"NullLiteral"],[33,43,32,22],[33,46,32,44,"NullLiteral"],[33,57,32,0],[34,0,33,0,"exports"],[34,2,33,0,"exports"],[34,9,33,7],[34,10,33,8,"booleanLiteral"],[34,24,33,0],[34,27,33,25,"exports"],[34,34,33,32],[34,35,33,33,"BooleanLiteral"],[34,49,33,25],[34,52,33,50,"BooleanLiteral"],[34,66,33,0],[35,0,34,0,"exports"],[35,2,34,0,"exports"],[35,9,34,7],[35,10,34,8,"regExpLiteral"],[35,23,34,0],[35,26,34,24,"exports"],[35,33,34,31],[35,34,34,32,"RegExpLiteral"],[35,47,34,24],[35,50,34,48,"RegExpLiteral"],[35,63,34,0],[36,0,35,0,"exports"],[36,2,35,0,"exports"],[36,9,35,7],[36,10,35,8,"logicalExpression"],[36,27,35,0],[36,30,35,28,"exports"],[36,37,35,35],[36,38,35,36,"LogicalExpression"],[36,55,35,28],[36,58,35,56,"LogicalExpression"],[36,75,35,0],[37,0,36,0,"exports"],[37,2,36,0,"exports"],[37,9,36,7],[37,10,36,8,"memberExpression"],[37,26,36,0],[37,29,36,27,"exports"],[37,36,36,34],[37,37,36,35,"MemberExpression"],[37,53,36,27],[37,56,36,54,"MemberExpression"],[37,72,36,0],[38,0,37,0,"exports"],[38,2,37,0,"exports"],[38,9,37,7],[38,10,37,8,"newExpression"],[38,23,37,0],[38,26,37,24,"exports"],[38,33,37,31],[38,34,37,32,"NewExpression"],[38,47,37,24],[38,50,37,48,"NewExpression"],[38,63,37,0],[39,0,38,0,"exports"],[39,2,38,0,"exports"],[39,9,38,7],[39,10,38,8,"program"],[39,17,38,0],[39,20,38,18,"exports"],[39,27,38,25],[39,28,38,26,"Program"],[39,35,38,18],[39,38,38,36,"Program"],[39,45,38,0],[40,0,39,0,"exports"],[40,2,39,0,"exports"],[40,9,39,7],[40,10,39,8,"objectExpression"],[40,26,39,0],[40,29,39,27,"exports"],[40,36,39,34],[40,37,39,35,"ObjectExpression"],[40,53,39,27],[40,56,39,54,"ObjectExpression"],[40,72,39,0],[41,0,40,0,"exports"],[41,2,40,0,"exports"],[41,9,40,7],[41,10,40,8,"objectMethod"],[41,22,40,0],[41,25,40,23,"exports"],[41,32,40,30],[41,33,40,31,"ObjectMethod"],[41,45,40,23],[41,48,40,46,"ObjectMethod"],[41,60,40,0],[42,0,41,0,"exports"],[42,2,41,0,"exports"],[42,9,41,7],[42,10,41,8,"objectProperty"],[42,24,41,0],[42,27,41,25,"exports"],[42,34,41,32],[42,35,41,33,"ObjectProperty"],[42,49,41,25],[42,52,41,50,"ObjectProperty"],[42,66,41,0],[43,0,42,0,"exports"],[43,2,42,0,"exports"],[43,9,42,7],[43,10,42,8,"restElement"],[43,21,42,0],[43,24,42,22,"exports"],[43,31,42,29],[43,32,42,30,"RestElement"],[43,43,42,22],[43,46,42,44,"RestElement"],[43,57,42,0],[44,0,43,0,"exports"],[44,2,43,0,"exports"],[44,9,43,7],[44,10,43,8,"returnStatement"],[44,25,43,0],[44,28,43,26,"exports"],[44,35,43,33],[44,36,43,34,"ReturnStatement"],[44,51,43,26],[44,54,43,52,"ReturnStatement"],[44,69,43,0],[45,0,44,0,"exports"],[45,2,44,0,"exports"],[45,9,44,7],[45,10,44,8,"sequenceExpression"],[45,28,44,0],[45,31,44,29,"exports"],[45,38,44,36],[45,39,44,37,"SequenceExpression"],[45,57,44,29],[45,60,44,58,"SequenceExpression"],[45,78,44,0],[46,0,45,0,"exports"],[46,2,45,0,"exports"],[46,9,45,7],[46,10,45,8,"parenthesizedExpression"],[46,33,45,0],[46,36,45,34,"exports"],[46,43,45,41],[46,44,45,42,"ParenthesizedExpression"],[46,67,45,34],[46,70,45,68,"ParenthesizedExpression"],[46,93,45,0],[47,0,46,0,"exports"],[47,2,46,0,"exports"],[47,9,46,7],[47,10,46,8,"switchCase"],[47,20,46,0],[47,23,46,21,"exports"],[47,30,46,28],[47,31,46,29,"SwitchCase"],[47,41,46,21],[47,44,46,42,"SwitchCase"],[47,54,46,0],[48,0,47,0,"exports"],[48,2,47,0,"exports"],[48,9,47,7],[48,10,47,8,"switchStatement"],[48,25,47,0],[48,28,47,26,"exports"],[48,35,47,33],[48,36,47,34,"SwitchStatement"],[48,51,47,26],[48,54,47,52,"SwitchStatement"],[48,69,47,0],[49,0,48,0,"exports"],[49,2,48,0,"exports"],[49,9,48,7],[49,10,48,8,"thisExpression"],[49,24,48,0],[49,27,48,25,"exports"],[49,34,48,32],[49,35,48,33,"ThisExpression"],[49,49,48,25],[49,52,48,50,"ThisExpression"],[49,66,48,0],[50,0,49,0,"exports"],[50,2,49,0,"exports"],[50,9,49,7],[50,10,49,8,"throwStatement"],[50,24,49,0],[50,27,49,25,"exports"],[50,34,49,32],[50,35,49,33,"ThrowStatement"],[50,49,49,25],[50,52,49,50,"ThrowStatement"],[50,66,49,0],[51,0,50,0,"exports"],[51,2,50,0,"exports"],[51,9,50,7],[51,10,50,8,"tryStatement"],[51,22,50,0],[51,25,50,23,"exports"],[51,32,50,30],[51,33,50,31,"TryStatement"],[51,45,50,23],[51,48,50,46,"TryStatement"],[51,60,50,0],[52,0,51,0,"exports"],[52,2,51,0,"exports"],[52,9,51,7],[52,10,51,8,"unaryExpression"],[52,25,51,0],[52,28,51,26,"exports"],[52,35,51,33],[52,36,51,34,"UnaryExpression"],[52,51,51,26],[52,54,51,52,"UnaryExpression"],[52,69,51,0],[53,0,52,0,"exports"],[53,2,52,0,"exports"],[53,9,52,7],[53,10,52,8,"updateExpression"],[53,26,52,0],[53,29,52,27,"exports"],[53,36,52,34],[53,37,52,35,"UpdateExpression"],[53,53,52,27],[53,56,52,54,"UpdateExpression"],[53,72,52,0],[54,0,53,0,"exports"],[54,2,53,0,"exports"],[54,9,53,7],[54,10,53,8,"variableDeclaration"],[54,29,53,0],[54,32,53,30,"exports"],[54,39,53,37],[54,40,53,38,"VariableDeclaration"],[54,59,53,30],[54,62,53,60,"VariableDeclaration"],[54,81,53,0],[55,0,54,0,"exports"],[55,2,54,0,"exports"],[55,9,54,7],[55,10,54,8,"variableDeclarator"],[55,28,54,0],[55,31,54,29,"exports"],[55,38,54,36],[55,39,54,37,"VariableDeclarator"],[55,57,54,29],[55,60,54,58,"VariableDeclarator"],[55,78,54,0],[56,0,55,0,"exports"],[56,2,55,0,"exports"],[56,9,55,7],[56,10,55,8,"whileStatement"],[56,24,55,0],[56,27,55,25,"exports"],[56,34,55,32],[56,35,55,33,"WhileStatement"],[56,49,55,25],[56,52,55,50,"WhileStatement"],[56,66,55,0],[57,0,56,0,"exports"],[57,2,56,0,"exports"],[57,9,56,7],[57,10,56,8,"withStatement"],[57,23,56,0],[57,26,56,24,"exports"],[57,33,56,31],[57,34,56,32,"WithStatement"],[57,47,56,24],[57,50,56,48,"WithStatement"],[57,63,56,0],[58,0,57,0,"exports"],[58,2,57,0,"exports"],[58,9,57,7],[58,10,57,8,"assignmentPattern"],[58,27,57,0],[58,30,57,28,"exports"],[58,37,57,35],[58,38,57,36,"AssignmentPattern"],[58,55,57,28],[58,58,57,56,"AssignmentPattern"],[58,75,57,0],[59,0,58,0,"exports"],[59,2,58,0,"exports"],[59,9,58,7],[59,10,58,8,"arrayPattern"],[59,22,58,0],[59,25,58,23,"exports"],[59,32,58,30],[59,33,58,31,"ArrayPattern"],[59,45,58,23],[59,48,58,46,"ArrayPattern"],[59,60,58,0],[60,0,59,0,"exports"],[60,2,59,0,"exports"],[60,9,59,7],[60,10,59,8,"arrowFunctionExpression"],[60,33,59,0],[60,36,59,34,"exports"],[60,43,59,41],[60,44,59,42,"ArrowFunctionExpression"],[60,67,59,34],[60,70,59,68,"ArrowFunctionExpression"],[60,93,59,0],[61,0,60,0,"exports"],[61,2,60,0,"exports"],[61,9,60,7],[61,10,60,8,"classBody"],[61,19,60,0],[61,22,60,20,"exports"],[61,29,60,27],[61,30,60,28,"ClassBody"],[61,39,60,20],[61,42,60,40,"ClassBody"],[61,51,60,0],[62,0,61,0,"exports"],[62,2,61,0,"exports"],[62,9,61,7],[62,10,61,8,"classDeclaration"],[62,26,61,0],[62,29,61,27,"exports"],[62,36,61,34],[62,37,61,35,"ClassDeclaration"],[62,53,61,27],[62,56,61,54,"ClassDeclaration"],[62,72,61,0],[63,0,62,0,"exports"],[63,2,62,0,"exports"],[63,9,62,7],[63,10,62,8,"classExpression"],[63,25,62,0],[63,28,62,26,"exports"],[63,35,62,33],[63,36,62,34,"ClassExpression"],[63,51,62,26],[63,54,62,52,"ClassExpression"],[63,69,62,0],[64,0,63,0,"exports"],[64,2,63,0,"exports"],[64,9,63,7],[64,10,63,8,"exportAllDeclaration"],[64,30,63,0],[64,33,63,31,"exports"],[64,40,63,38],[64,41,63,39,"ExportAllDeclaration"],[64,61,63,31],[64,64,63,62,"ExportAllDeclaration"],[64,84,63,0],[65,0,64,0,"exports"],[65,2,64,0,"exports"],[65,9,64,7],[65,10,64,8,"exportDefaultDeclaration"],[65,34,64,0],[65,37,64,35,"exports"],[65,44,64,42],[65,45,64,43,"ExportDefaultDeclaration"],[65,69,64,35],[65,72,64,70,"ExportDefaultDeclaration"],[65,96,64,0],[66,0,65,0,"exports"],[66,2,65,0,"exports"],[66,9,65,7],[66,10,65,8,"exportNamedDeclaration"],[66,32,65,0],[66,35,65,33,"exports"],[66,42,65,40],[66,43,65,41,"ExportNamedDeclaration"],[66,65,65,33],[66,68,65,66,"ExportNamedDeclaration"],[66,90,65,0],[67,0,66,0,"exports"],[67,2,66,0,"exports"],[67,9,66,7],[67,10,66,8,"exportSpecifier"],[67,25,66,0],[67,28,66,26,"exports"],[67,35,66,33],[67,36,66,34,"ExportSpecifier"],[67,51,66,26],[67,54,66,52,"ExportSpecifier"],[67,69,66,0],[68,0,67,0,"exports"],[68,2,67,0,"exports"],[68,9,67,7],[68,10,67,8,"forOfStatement"],[68,24,67,0],[68,27,67,25,"exports"],[68,34,67,32],[68,35,67,33,"ForOfStatement"],[68,49,67,25],[68,52,67,50,"ForOfStatement"],[68,66,67,0],[69,0,68,0,"exports"],[69,2,68,0,"exports"],[69,9,68,7],[69,10,68,8,"importDeclaration"],[69,27,68,0],[69,30,68,28,"exports"],[69,37,68,35],[69,38,68,36,"ImportDeclaration"],[69,55,68,28],[69,58,68,56,"ImportDeclaration"],[69,75,68,0],[70,0,69,0,"exports"],[70,2,69,0,"exports"],[70,9,69,7],[70,10,69,8,"importDefaultSpecifier"],[70,32,69,0],[70,35,69,33,"exports"],[70,42,69,40],[70,43,69,41,"ImportDefaultSpecifier"],[70,65,69,33],[70,68,69,66,"ImportDefaultSpecifier"],[70,90,69,0],[71,0,70,0,"exports"],[71,2,70,0,"exports"],[71,9,70,7],[71,10,70,8,"importNamespaceSpecifier"],[71,34,70,0],[71,37,70,35,"exports"],[71,44,70,42],[71,45,70,43,"ImportNamespaceSpecifier"],[71,69,70,35],[71,72,70,70,"ImportNamespaceSpecifier"],[71,96,70,0],[72,0,71,0,"exports"],[72,2,71,0,"exports"],[72,9,71,7],[72,10,71,8,"importSpecifier"],[72,25,71,0],[72,28,71,26,"exports"],[72,35,71,33],[72,36,71,34,"ImportSpecifier"],[72,51,71,26],[72,54,71,52,"ImportSpecifier"],[72,69,71,0],[73,0,72,0,"exports"],[73,2,72,0,"exports"],[73,9,72,7],[73,10,72,8,"metaProperty"],[73,22,72,0],[73,25,72,23,"exports"],[73,32,72,30],[73,33,72,31,"MetaProperty"],[73,45,72,23],[73,48,72,46,"MetaProperty"],[73,60,72,0],[74,0,73,0,"exports"],[74,2,73,0,"exports"],[74,9,73,7],[74,10,73,8,"classMethod"],[74,21,73,0],[74,24,73,22,"exports"],[74,31,73,29],[74,32,73,30,"ClassMethod"],[74,43,73,22],[74,46,73,44,"ClassMethod"],[74,57,73,0],[75,0,74,0,"exports"],[75,2,74,0,"exports"],[75,9,74,7],[75,10,74,8,"objectPattern"],[75,23,74,0],[75,26,74,24,"exports"],[75,33,74,31],[75,34,74,32,"ObjectPattern"],[75,47,74,24],[75,50,74,48,"ObjectPattern"],[75,63,74,0],[76,0,75,0,"exports"],[76,2,75,0,"exports"],[76,9,75,7],[76,10,75,8,"spreadElement"],[76,23,75,0],[76,26,75,24,"exports"],[76,33,75,31],[76,34,75,32,"SpreadElement"],[76,47,75,24],[76,50,75,48,"SpreadElement"],[76,63,75,0],[77,0,76,0,"exports"],[77,2,76,0,"exports"],[77,9,76,7],[77,10,76,8,"super"],[77,15,76,0],[77,18,76,16,"exports"],[77,25,76,23],[77,26,76,24,"Super"],[77,31,76,16],[77,34,76,32,"Super"],[77,39,76,0],[78,0,77,0,"exports"],[78,2,77,0,"exports"],[78,9,77,7],[78,10,77,8,"taggedTemplateExpression"],[78,34,77,0],[78,37,77,35,"exports"],[78,44,77,42],[78,45,77,43,"TaggedTemplateExpression"],[78,69,77,35],[78,72,77,70,"TaggedTemplateExpression"],[78,96,77,0],[79,0,78,0,"exports"],[79,2,78,0,"exports"],[79,9,78,7],[79,10,78,8,"templateElement"],[79,25,78,0],[79,28,78,26,"exports"],[79,35,78,33],[79,36,78,34,"TemplateElement"],[79,51,78,26],[79,54,78,52,"TemplateElement"],[79,69,78,0],[80,0,79,0,"exports"],[80,2,79,0,"exports"],[80,9,79,7],[80,10,79,8,"templateLiteral"],[80,25,79,0],[80,28,79,26,"exports"],[80,35,79,33],[80,36,79,34,"TemplateLiteral"],[80,51,79,26],[80,54,79,52,"TemplateLiteral"],[80,69,79,0],[81,0,80,0,"exports"],[81,2,80,0,"exports"],[81,9,80,7],[81,10,80,8,"yieldExpression"],[81,25,80,0],[81,28,80,26,"exports"],[81,35,80,33],[81,36,80,34,"YieldExpression"],[81,51,80,26],[81,54,80,52,"YieldExpression"],[81,69,80,0],[82,0,81,0,"exports"],[82,2,81,0,"exports"],[82,9,81,7],[82,10,81,8,"anyTypeAnnotation"],[82,27,81,0],[82,30,81,28,"exports"],[82,37,81,35],[82,38,81,36,"AnyTypeAnnotation"],[82,55,81,28],[82,58,81,56,"AnyTypeAnnotation"],[82,75,81,0],[83,0,82,0,"exports"],[83,2,82,0,"exports"],[83,9,82,7],[83,10,82,8,"arrayTypeAnnotation"],[83,29,82,0],[83,32,82,30,"exports"],[83,39,82,37],[83,40,82,38,"ArrayTypeAnnotation"],[83,59,82,30],[83,62,82,60,"ArrayTypeAnnotation"],[83,81,82,0],[84,0,83,0,"exports"],[84,2,83,0,"exports"],[84,9,83,7],[84,10,83,8,"booleanTypeAnnotation"],[84,31,83,0],[84,34,83,32,"exports"],[84,41,83,39],[84,42,83,40,"BooleanTypeAnnotation"],[84,63,83,32],[84,66,83,64,"BooleanTypeAnnotation"],[84,87,83,0],[85,0,84,0,"exports"],[85,2,84,0,"exports"],[85,9,84,7],[85,10,84,8,"booleanLiteralTypeAnnotation"],[85,38,84,0],[85,41,84,39,"exports"],[85,48,84,46],[85,49,84,47,"BooleanLiteralTypeAnnotation"],[85,77,84,39],[85,80,84,78,"BooleanLiteralTypeAnnotation"],[85,108,84,0],[86,0,85,0,"exports"],[86,2,85,0,"exports"],[86,9,85,7],[86,10,85,8,"nullLiteralTypeAnnotation"],[86,35,85,0],[86,38,85,36,"exports"],[86,45,85,43],[86,46,85,44,"NullLiteralTypeAnnotation"],[86,71,85,36],[86,74,85,72,"NullLiteralTypeAnnotation"],[86,99,85,0],[87,0,86,0,"exports"],[87,2,86,0,"exports"],[87,9,86,7],[87,10,86,8,"classImplements"],[87,25,86,0],[87,28,86,26,"exports"],[87,35,86,33],[87,36,86,34,"ClassImplements"],[87,51,86,26],[87,54,86,52,"ClassImplements"],[87,69,86,0],[88,0,87,0,"exports"],[88,2,87,0,"exports"],[88,9,87,7],[88,10,87,8,"declareClass"],[88,22,87,0],[88,25,87,23,"exports"],[88,32,87,30],[88,33,87,31,"DeclareClass"],[88,45,87,23],[88,48,87,46,"DeclareClass"],[88,60,87,0],[89,0,88,0,"exports"],[89,2,88,0,"exports"],[89,9,88,7],[89,10,88,8,"declareFunction"],[89,25,88,0],[89,28,88,26,"exports"],[89,35,88,33],[89,36,88,34,"DeclareFunction"],[89,51,88,26],[89,54,88,52,"DeclareFunction"],[89,69,88,0],[90,0,89,0,"exports"],[90,2,89,0,"exports"],[90,9,89,7],[90,10,89,8,"declareInterface"],[90,26,89,0],[90,29,89,27,"exports"],[90,36,89,34],[90,37,89,35,"DeclareInterface"],[90,53,89,27],[90,56,89,54,"DeclareInterface"],[90,72,89,0],[91,0,90,0,"exports"],[91,2,90,0,"exports"],[91,9,90,7],[91,10,90,8,"declareModule"],[91,23,90,0],[91,26,90,24,"exports"],[91,33,90,31],[91,34,90,32,"DeclareModule"],[91,47,90,24],[91,50,90,48,"DeclareModule"],[91,63,90,0],[92,0,91,0,"exports"],[92,2,91,0,"exports"],[92,9,91,7],[92,10,91,8,"declareModuleExports"],[92,30,91,0],[92,33,91,31,"exports"],[92,40,91,38],[92,41,91,39,"DeclareModuleExports"],[92,61,91,31],[92,64,91,62,"DeclareModuleExports"],[92,84,91,0],[93,0,92,0,"exports"],[93,2,92,0,"exports"],[93,9,92,7],[93,10,92,8,"declareTypeAlias"],[93,26,92,0],[93,29,92,27,"exports"],[93,36,92,34],[93,37,92,35,"DeclareTypeAlias"],[93,53,92,27],[93,56,92,54,"DeclareTypeAlias"],[93,72,92,0],[94,0,93,0,"exports"],[94,2,93,0,"exports"],[94,9,93,7],[94,10,93,8,"declareOpaqueType"],[94,27,93,0],[94,30,93,28,"exports"],[94,37,93,35],[94,38,93,36,"DeclareOpaqueType"],[94,55,93,28],[94,58,93,56,"DeclareOpaqueType"],[94,75,93,0],[95,0,94,0,"exports"],[95,2,94,0,"exports"],[95,9,94,7],[95,10,94,8,"declareVariable"],[95,25,94,0],[95,28,94,26,"exports"],[95,35,94,33],[95,36,94,34,"DeclareVariable"],[95,51,94,26],[95,54,94,52,"DeclareVariable"],[95,69,94,0],[96,0,95,0,"exports"],[96,2,95,0,"exports"],[96,9,95,7],[96,10,95,8,"declareExportDeclaration"],[96,34,95,0],[96,37,95,35,"exports"],[96,44,95,42],[96,45,95,43,"DeclareExportDeclaration"],[96,69,95,35],[96,72,95,70,"DeclareExportDeclaration"],[96,96,95,0],[97,0,96,0,"exports"],[97,2,96,0,"exports"],[97,9,96,7],[97,10,96,8,"declareExportAllDeclaration"],[97,37,96,0],[97,40,96,38,"exports"],[97,47,96,45],[97,48,96,46,"DeclareExportAllDeclaration"],[97,75,96,38],[97,78,96,76,"DeclareExportAllDeclaration"],[97,105,96,0],[98,0,97,0,"exports"],[98,2,97,0,"exports"],[98,9,97,7],[98,10,97,8,"declaredPredicate"],[98,27,97,0],[98,30,97,28,"exports"],[98,37,97,35],[98,38,97,36,"DeclaredPredicate"],[98,55,97,28],[98,58,97,56,"DeclaredPredicate"],[98,75,97,0],[99,0,98,0,"exports"],[99,2,98,0,"exports"],[99,9,98,7],[99,10,98,8,"existsTypeAnnotation"],[99,30,98,0],[99,33,98,31,"exports"],[99,40,98,38],[99,41,98,39,"ExistsTypeAnnotation"],[99,61,98,31],[99,64,98,62,"ExistsTypeAnnotation"],[99,84,98,0],[100,0,99,0,"exports"],[100,2,99,0,"exports"],[100,9,99,7],[100,10,99,8,"functionTypeAnnotation"],[100,32,99,0],[100,35,99,33,"exports"],[100,42,99,40],[100,43,99,41,"FunctionTypeAnnotation"],[100,65,99,33],[100,68,99,66,"FunctionTypeAnnotation"],[100,90,99,0],[101,0,100,0,"exports"],[101,2,100,0,"exports"],[101,9,100,7],[101,10,100,8,"functionTypeParam"],[101,27,100,0],[101,30,100,28,"exports"],[101,37,100,35],[101,38,100,36,"FunctionTypeParam"],[101,55,100,28],[101,58,100,56,"FunctionTypeParam"],[101,75,100,0],[102,0,101,0,"exports"],[102,2,101,0,"exports"],[102,9,101,7],[102,10,101,8,"genericTypeAnnotation"],[102,31,101,0],[102,34,101,32,"exports"],[102,41,101,39],[102,42,101,40,"GenericTypeAnnotation"],[102,63,101,32],[102,66,101,64,"GenericTypeAnnotation"],[102,87,101,0],[103,0,102,0,"exports"],[103,2,102,0,"exports"],[103,9,102,7],[103,10,102,8,"inferredPredicate"],[103,27,102,0],[103,30,102,28,"exports"],[103,37,102,35],[103,38,102,36,"InferredPredicate"],[103,55,102,28],[103,58,102,56,"InferredPredicate"],[103,75,102,0],[104,0,103,0,"exports"],[104,2,103,0,"exports"],[104,9,103,7],[104,10,103,8,"interfaceExtends"],[104,26,103,0],[104,29,103,27,"exports"],[104,36,103,34],[104,37,103,35,"InterfaceExtends"],[104,53,103,27],[104,56,103,54,"InterfaceExtends"],[104,72,103,0],[105,0,104,0,"exports"],[105,2,104,0,"exports"],[105,9,104,7],[105,10,104,8,"interfaceDeclaration"],[105,30,104,0],[105,33,104,31,"exports"],[105,40,104,38],[105,41,104,39,"InterfaceDeclaration"],[105,61,104,31],[105,64,104,62,"InterfaceDeclaration"],[105,84,104,0],[106,0,105,0,"exports"],[106,2,105,0,"exports"],[106,9,105,7],[106,10,105,8,"interfaceTypeAnnotation"],[106,33,105,0],[106,36,105,34,"exports"],[106,43,105,41],[106,44,105,42,"InterfaceTypeAnnotation"],[106,67,105,34],[106,70,105,68,"InterfaceTypeAnnotation"],[106,93,105,0],[107,0,106,0,"exports"],[107,2,106,0,"exports"],[107,9,106,7],[107,10,106,8,"intersectionTypeAnnotation"],[107,36,106,0],[107,39,106,37,"exports"],[107,46,106,44],[107,47,106,45,"IntersectionTypeAnnotation"],[107,73,106,37],[107,76,106,74,"IntersectionTypeAnnotation"],[107,102,106,0],[108,0,107,0,"exports"],[108,2,107,0,"exports"],[108,9,107,7],[108,10,107,8,"mixedTypeAnnotation"],[108,29,107,0],[108,32,107,30,"exports"],[108,39,107,37],[108,40,107,38,"MixedTypeAnnotation"],[108,59,107,30],[108,62,107,60,"MixedTypeAnnotation"],[108,81,107,0],[109,0,108,0,"exports"],[109,2,108,0,"exports"],[109,9,108,7],[109,10,108,8,"emptyTypeAnnotation"],[109,29,108,0],[109,32,108,30,"exports"],[109,39,108,37],[109,40,108,38,"EmptyTypeAnnotation"],[109,59,108,30],[109,62,108,60,"EmptyTypeAnnotation"],[109,81,108,0],[110,0,109,0,"exports"],[110,2,109,0,"exports"],[110,9,109,7],[110,10,109,8,"nullableTypeAnnotation"],[110,32,109,0],[110,35,109,33,"exports"],[110,42,109,40],[110,43,109,41,"NullableTypeAnnotation"],[110,65,109,33],[110,68,109,66,"NullableTypeAnnotation"],[110,90,109,0],[111,0,110,0,"exports"],[111,2,110,0,"exports"],[111,9,110,7],[111,10,110,8,"numberLiteralTypeAnnotation"],[111,37,110,0],[111,40,110,38,"exports"],[111,47,110,45],[111,48,110,46,"NumberLiteralTypeAnnotation"],[111,75,110,38],[111,78,110,76,"NumberLiteralTypeAnnotation"],[111,105,110,0],[112,0,111,0,"exports"],[112,2,111,0,"exports"],[112,9,111,7],[112,10,111,8,"numberTypeAnnotation"],[112,30,111,0],[112,33,111,31,"exports"],[112,40,111,38],[112,41,111,39,"NumberTypeAnnotation"],[112,61,111,31],[112,64,111,62,"NumberTypeAnnotation"],[112,84,111,0],[113,0,112,0,"exports"],[113,2,112,0,"exports"],[113,9,112,7],[113,10,112,8,"objectTypeAnnotation"],[113,30,112,0],[113,33,112,31,"exports"],[113,40,112,38],[113,41,112,39,"ObjectTypeAnnotation"],[113,61,112,31],[113,64,112,62,"ObjectTypeAnnotation"],[113,84,112,0],[114,0,113,0,"exports"],[114,2,113,0,"exports"],[114,9,113,7],[114,10,113,8,"objectTypeInternalSlot"],[114,32,113,0],[114,35,113,33,"exports"],[114,42,113,40],[114,43,113,41,"ObjectTypeInternalSlot"],[114,65,113,33],[114,68,113,66,"ObjectTypeInternalSlot"],[114,90,113,0],[115,0,114,0,"exports"],[115,2,114,0,"exports"],[115,9,114,7],[115,10,114,8,"objectTypeCallProperty"],[115,32,114,0],[115,35,114,33,"exports"],[115,42,114,40],[115,43,114,41,"ObjectTypeCallProperty"],[115,65,114,33],[115,68,114,66,"ObjectTypeCallProperty"],[115,90,114,0],[116,0,115,0,"exports"],[116,2,115,0,"exports"],[116,9,115,7],[116,10,115,8,"objectTypeIndexer"],[116,27,115,0],[116,30,115,28,"exports"],[116,37,115,35],[116,38,115,36,"ObjectTypeIndexer"],[116,55,115,28],[116,58,115,56,"ObjectTypeIndexer"],[116,75,115,0],[117,0,116,0,"exports"],[117,2,116,0,"exports"],[117,9,116,7],[117,10,116,8,"objectTypeProperty"],[117,28,116,0],[117,31,116,29,"exports"],[117,38,116,36],[117,39,116,37,"ObjectTypeProperty"],[117,57,116,29],[117,60,116,58,"ObjectTypeProperty"],[117,78,116,0],[118,0,117,0,"exports"],[118,2,117,0,"exports"],[118,9,117,7],[118,10,117,8,"objectTypeSpreadProperty"],[118,34,117,0],[118,37,117,35,"exports"],[118,44,117,42],[118,45,117,43,"ObjectTypeSpreadProperty"],[118,69,117,35],[118,72,117,70,"ObjectTypeSpreadProperty"],[118,96,117,0],[119,0,118,0,"exports"],[119,2,118,0,"exports"],[119,9,118,7],[119,10,118,8,"opaqueType"],[119,20,118,0],[119,23,118,21,"exports"],[119,30,118,28],[119,31,118,29,"OpaqueType"],[119,41,118,21],[119,44,118,42,"OpaqueType"],[119,54,118,0],[120,0,119,0,"exports"],[120,2,119,0,"exports"],[120,9,119,7],[120,10,119,8,"qualifiedTypeIdentifier"],[120,33,119,0],[120,36,119,34,"exports"],[120,43,119,41],[120,44,119,42,"QualifiedTypeIdentifier"],[120,67,119,34],[120,70,119,68,"QualifiedTypeIdentifier"],[120,93,119,0],[121,0,120,0,"exports"],[121,2,120,0,"exports"],[121,9,120,7],[121,10,120,8,"stringLiteralTypeAnnotation"],[121,37,120,0],[121,40,120,38,"exports"],[121,47,120,45],[121,48,120,46,"StringLiteralTypeAnnotation"],[121,75,120,38],[121,78,120,76,"StringLiteralTypeAnnotation"],[121,105,120,0],[122,0,121,0,"exports"],[122,2,121,0,"exports"],[122,9,121,7],[122,10,121,8,"stringTypeAnnotation"],[122,30,121,0],[122,33,121,31,"exports"],[122,40,121,38],[122,41,121,39,"StringTypeAnnotation"],[122,61,121,31],[122,64,121,62,"StringTypeAnnotation"],[122,84,121,0],[123,0,122,0,"exports"],[123,2,122,0,"exports"],[123,9,122,7],[123,10,122,8,"thisTypeAnnotation"],[123,28,122,0],[123,31,122,29,"exports"],[123,38,122,36],[123,39,122,37,"ThisTypeAnnotation"],[123,57,122,29],[123,60,122,58,"ThisTypeAnnotation"],[123,78,122,0],[124,0,123,0,"exports"],[124,2,123,0,"exports"],[124,9,123,7],[124,10,123,8,"tupleTypeAnnotation"],[124,29,123,0],[124,32,123,30,"exports"],[124,39,123,37],[124,40,123,38,"TupleTypeAnnotation"],[124,59,123,30],[124,62,123,60,"TupleTypeAnnotation"],[124,81,123,0],[125,0,124,0,"exports"],[125,2,124,0,"exports"],[125,9,124,7],[125,10,124,8,"typeofTypeAnnotation"],[125,30,124,0],[125,33,124,31,"exports"],[125,40,124,38],[125,41,124,39,"TypeofTypeAnnotation"],[125,61,124,31],[125,64,124,62,"TypeofTypeAnnotation"],[125,84,124,0],[126,0,125,0,"exports"],[126,2,125,0,"exports"],[126,9,125,7],[126,10,125,8,"typeAlias"],[126,19,125,0],[126,22,125,20,"exports"],[126,29,125,27],[126,30,125,28,"TypeAlias"],[126,39,125,20],[126,42,125,40,"TypeAlias"],[126,51,125,0],[127,0,126,0,"exports"],[127,2,126,0,"exports"],[127,9,126,7],[127,10,126,8,"typeAnnotation"],[127,24,126,0],[127,27,126,25,"exports"],[127,34,126,32],[127,35,126,33,"TypeAnnotation"],[127,49,126,25],[127,52,126,50,"TypeAnnotation"],[127,66,126,0],[128,0,127,0,"exports"],[128,2,127,0,"exports"],[128,9,127,7],[128,10,127,8,"typeCastExpression"],[128,28,127,0],[128,31,127,29,"exports"],[128,38,127,36],[128,39,127,37,"TypeCastExpression"],[128,57,127,29],[128,60,127,58,"TypeCastExpression"],[128,78,127,0],[129,0,128,0,"exports"],[129,2,128,0,"exports"],[129,9,128,7],[129,10,128,8,"typeParameter"],[129,23,128,0],[129,26,128,24,"exports"],[129,33,128,31],[129,34,128,32,"TypeParameter"],[129,47,128,24],[129,50,128,48,"TypeParameter"],[129,63,128,0],[130,0,129,0,"exports"],[130,2,129,0,"exports"],[130,9,129,7],[130,10,129,8,"typeParameterDeclaration"],[130,34,129,0],[130,37,129,35,"exports"],[130,44,129,42],[130,45,129,43,"TypeParameterDeclaration"],[130,69,129,35],[130,72,129,70,"TypeParameterDeclaration"],[130,96,129,0],[131,0,130,0,"exports"],[131,2,130,0,"exports"],[131,9,130,7],[131,10,130,8,"typeParameterInstantiation"],[131,36,130,0],[131,39,130,37,"exports"],[131,46,130,44],[131,47,130,45,"TypeParameterInstantiation"],[131,73,130,37],[131,76,130,74,"TypeParameterInstantiation"],[131,102,130,0],[132,0,131,0,"exports"],[132,2,131,0,"exports"],[132,9,131,7],[132,10,131,8,"unionTypeAnnotation"],[132,29,131,0],[132,32,131,30,"exports"],[132,39,131,37],[132,40,131,38,"UnionTypeAnnotation"],[132,59,131,30],[132,62,131,60,"UnionTypeAnnotation"],[132,81,131,0],[133,0,132,0,"exports"],[133,2,132,0,"exports"],[133,9,132,7],[133,10,132,8,"variance"],[133,18,132,0],[133,21,132,19,"exports"],[133,28,132,26],[133,29,132,27,"Variance"],[133,37,132,19],[133,40,132,38,"Variance"],[133,48,132,0],[134,0,133,0,"exports"],[134,2,133,0,"exports"],[134,9,133,7],[134,10,133,8,"voidTypeAnnotation"],[134,28,133,0],[134,31,133,29,"exports"],[134,38,133,36],[134,39,133,37,"VoidTypeAnnotation"],[134,57,133,29],[134,60,133,58,"VoidTypeAnnotation"],[134,78,133,0],[135,0,134,0,"exports"],[135,2,134,0,"exports"],[135,9,134,7],[135,10,134,8,"jSXAttribute"],[135,22,134,0],[135,25,134,23,"exports"],[135,32,134,30],[135,33,134,31,"jsxAttribute"],[135,45,134,23],[135,48,134,46,"exports"],[135,55,134,53],[135,56,134,54,"JSXAttribute"],[135,68,134,46],[135,71,134,69,"JSXAttribute"],[135,83,134,0],[136,0,135,0,"exports"],[136,2,135,0,"exports"],[136,9,135,7],[136,10,135,8,"jSXClosingElement"],[136,27,135,0],[136,30,135,28,"exports"],[136,37,135,35],[136,38,135,36,"jsxClosingElement"],[136,55,135,28],[136,58,135,56,"exports"],[136,65,135,63],[136,66,135,64,"JSXClosingElement"],[136,83,135,56],[136,86,135,84,"JSXClosingElement"],[136,103,135,0],[137,0,136,0,"exports"],[137,2,136,0,"exports"],[137,9,136,7],[137,10,136,8,"jSXElement"],[137,20,136,0],[137,23,136,21,"exports"],[137,30,136,28],[137,31,136,29,"jsxElement"],[137,41,136,21],[137,44,136,42,"exports"],[137,51,136,49],[137,52,136,50,"JSXElement"],[137,62,136,42],[137,65,136,63,"JSXElement"],[137,75,136,0],[138,0,137,0,"exports"],[138,2,137,0,"exports"],[138,9,137,7],[138,10,137,8,"jSXEmptyExpression"],[138,28,137,0],[138,31,137,29,"exports"],[138,38,137,36],[138,39,137,37,"jsxEmptyExpression"],[138,57,137,29],[138,60,137,58,"exports"],[138,67,137,65],[138,68,137,66,"JSXEmptyExpression"],[138,86,137,58],[138,89,137,87,"JSXEmptyExpression"],[138,107,137,0],[139,0,138,0,"exports"],[139,2,138,0,"exports"],[139,9,138,7],[139,10,138,8,"jSXExpressionContainer"],[139,32,138,0],[139,35,138,33,"exports"],[139,42,138,40],[139,43,138,41,"jsxExpressionContainer"],[139,65,138,33],[139,68,138,66,"exports"],[139,75,138,73],[139,76,138,74,"JSXExpressionContainer"],[139,98,138,66],[139,101,138,99,"JSXExpressionContainer"],[139,123,138,0],[140,0,139,0,"exports"],[140,2,139,0,"exports"],[140,9,139,7],[140,10,139,8,"jSXSpreadChild"],[140,24,139,0],[140,27,139,25,"exports"],[140,34,139,32],[140,35,139,33,"jsxSpreadChild"],[140,49,139,25],[140,52,139,50,"exports"],[140,59,139,57],[140,60,139,58,"JSXSpreadChild"],[140,74,139,50],[140,77,139,75,"JSXSpreadChild"],[140,91,139,0],[141,0,140,0,"exports"],[141,2,140,0,"exports"],[141,9,140,7],[141,10,140,8,"jSXIdentifier"],[141,23,140,0],[141,26,140,24,"exports"],[141,33,140,31],[141,34,140,32,"jsxIdentifier"],[141,47,140,24],[141,50,140,48,"exports"],[141,57,140,55],[141,58,140,56,"JSXIdentifier"],[141,71,140,48],[141,74,140,72,"JSXIdentifier"],[141,87,140,0],[142,0,141,0,"exports"],[142,2,141,0,"exports"],[142,9,141,7],[142,10,141,8,"jSXMemberExpression"],[142,29,141,0],[142,32,141,30,"exports"],[142,39,141,37],[142,40,141,38,"jsxMemberExpression"],[142,59,141,30],[142,62,141,60,"exports"],[142,69,141,67],[142,70,141,68,"JSXMemberExpression"],[142,89,141,60],[142,92,141,90,"JSXMemberExpression"],[142,111,141,0],[143,0,142,0,"exports"],[143,2,142,0,"exports"],[143,9,142,7],[143,10,142,8,"jSXNamespacedName"],[143,27,142,0],[143,30,142,28,"exports"],[143,37,142,35],[143,38,142,36,"jsxNamespacedName"],[143,55,142,28],[143,58,142,56,"exports"],[143,65,142,63],[143,66,142,64,"JSXNamespacedName"],[143,83,142,56],[143,86,142,84,"JSXNamespacedName"],[143,103,142,0],[144,0,143,0,"exports"],[144,2,143,0,"exports"],[144,9,143,7],[144,10,143,8,"jSXOpeningElement"],[144,27,143,0],[144,30,143,28,"exports"],[144,37,143,35],[144,38,143,36,"jsxOpeningElement"],[144,55,143,28],[144,58,143,56,"exports"],[144,65,143,63],[144,66,143,64,"JSXOpeningElement"],[144,83,143,56],[144,86,143,84,"JSXOpeningElement"],[144,103,143,0],[145,0,144,0,"exports"],[145,2,144,0,"exports"],[145,9,144,7],[145,10,144,8,"jSXSpreadAttribute"],[145,28,144,0],[145,31,144,29,"exports"],[145,38,144,36],[145,39,144,37,"jsxSpreadAttribute"],[145,57,144,29],[145,60,144,58,"exports"],[145,67,144,65],[145,68,144,66,"JSXSpreadAttribute"],[145,86,144,58],[145,89,144,87,"JSXSpreadAttribute"],[145,107,144,0],[146,0,145,0,"exports"],[146,2,145,0,"exports"],[146,9,145,7],[146,10,145,8,"jSXText"],[146,17,145,0],[146,20,145,18,"exports"],[146,27,145,25],[146,28,145,26,"jsxText"],[146,35,145,18],[146,38,145,36,"exports"],[146,45,145,43],[146,46,145,44,"JSXText"],[146,53,145,36],[146,56,145,54,"JSXText"],[146,63,145,0],[147,0,146,0,"exports"],[147,2,146,0,"exports"],[147,9,146,7],[147,10,146,8,"jSXFragment"],[147,21,146,0],[147,24,146,22,"exports"],[147,31,146,29],[147,32,146,30,"jsxFragment"],[147,43,146,22],[147,46,146,44,"exports"],[147,53,146,51],[147,54,146,52,"JSXFragment"],[147,65,146,44],[147,68,146,66,"JSXFragment"],[147,79,146,0],[148,0,147,0,"exports"],[148,2,147,0,"exports"],[148,9,147,7],[148,10,147,8,"jSXOpeningFragment"],[148,28,147,0],[148,31,147,29,"exports"],[148,38,147,36],[148,39,147,37,"jsxOpeningFragment"],[148,57,147,29],[148,60,147,58,"exports"],[148,67,147,65],[148,68,147,66,"JSXOpeningFragment"],[148,86,147,58],[148,89,147,87,"JSXOpeningFragment"],[148,107,147,0],[149,0,148,0,"exports"],[149,2,148,0,"exports"],[149,9,148,7],[149,10,148,8,"jSXClosingFragment"],[149,28,148,0],[149,31,148,29,"exports"],[149,38,148,36],[149,39,148,37,"jsxClosingFragment"],[149,57,148,29],[149,60,148,58,"exports"],[149,67,148,65],[149,68,148,66,"JSXClosingFragment"],[149,86,148,58],[149,89,148,87,"JSXClosingFragment"],[149,107,148,0],[150,0,149,0,"exports"],[150,2,149,0,"exports"],[150,9,149,7],[150,10,149,8,"noop"],[150,14,149,0],[150,17,149,15,"exports"],[150,24,149,22],[150,25,149,23,"Noop"],[150,29,149,15],[150,32,149,30,"Noop"],[150,36,149,0],[151,0,150,0,"exports"],[151,2,150,0,"exports"],[151,9,150,7],[151,10,150,8,"placeholder"],[151,21,150,0],[151,24,150,22,"exports"],[151,31,150,29],[151,32,150,30,"Placeholder"],[151,43,150,22],[151,46,150,44,"Placeholder"],[151,57,150,0],[152,0,151,0,"exports"],[152,2,151,0,"exports"],[152,9,151,7],[152,10,151,8,"argumentPlaceholder"],[152,29,151,0],[152,32,151,30,"exports"],[152,39,151,37],[152,40,151,38,"ArgumentPlaceholder"],[152,59,151,30],[152,62,151,60,"ArgumentPlaceholder"],[152,81,151,0],[153,0,152,0,"exports"],[153,2,152,0,"exports"],[153,9,152,7],[153,10,152,8,"awaitExpression"],[153,25,152,0],[153,28,152,26,"exports"],[153,35,152,33],[153,36,152,34,"AwaitExpression"],[153,51,152,26],[153,54,152,52,"AwaitExpression"],[153,69,152,0],[154,0,153,0,"exports"],[154,2,153,0,"exports"],[154,9,153,7],[154,10,153,8,"bindExpression"],[154,24,153,0],[154,27,153,25,"exports"],[154,34,153,32],[154,35,153,33,"BindExpression"],[154,49,153,25],[154,52,153,50,"BindExpression"],[154,66,153,0],[155,0,154,0,"exports"],[155,2,154,0,"exports"],[155,9,154,7],[155,10,154,8,"classProperty"],[155,23,154,0],[155,26,154,24,"exports"],[155,33,154,31],[155,34,154,32,"ClassProperty"],[155,47,154,24],[155,50,154,48,"ClassProperty"],[155,63,154,0],[156,0,155,0,"exports"],[156,2,155,0,"exports"],[156,9,155,7],[156,10,155,8,"optionalMemberExpression"],[156,34,155,0],[156,37,155,35,"exports"],[156,44,155,42],[156,45,155,43,"OptionalMemberExpression"],[156,69,155,35],[156,72,155,70,"OptionalMemberExpression"],[156,96,155,0],[157,0,156,0,"exports"],[157,2,156,0,"exports"],[157,9,156,7],[157,10,156,8,"pipelineTopicExpression"],[157,33,156,0],[157,36,156,34,"exports"],[157,43,156,41],[157,44,156,42,"PipelineTopicExpression"],[157,67,156,34],[157,70,156,68,"PipelineTopicExpression"],[157,93,156,0],[158,0,157,0,"exports"],[158,2,157,0,"exports"],[158,9,157,7],[158,10,157,8,"pipelineBareFunction"],[158,30,157,0],[158,33,157,31,"exports"],[158,40,157,38],[158,41,157,39,"PipelineBareFunction"],[158,61,157,31],[158,64,157,62,"PipelineBareFunction"],[158,84,157,0],[159,0,158,0,"exports"],[159,2,158,0,"exports"],[159,9,158,7],[159,10,158,8,"pipelinePrimaryTopicReference"],[159,39,158,0],[159,42,158,40,"exports"],[159,49,158,47],[159,50,158,48,"PipelinePrimaryTopicReference"],[159,79,158,40],[159,82,158,80,"PipelinePrimaryTopicReference"],[159,111,158,0],[160,0,159,0,"exports"],[160,2,159,0,"exports"],[160,9,159,7],[160,10,159,8,"optionalCallExpression"],[160,32,159,0],[160,35,159,33,"exports"],[160,42,159,40],[160,43,159,41,"OptionalCallExpression"],[160,65,159,33],[160,68,159,66,"OptionalCallExpression"],[160,90,159,0],[161,0,160,0,"exports"],[161,2,160,0,"exports"],[161,9,160,7],[161,10,160,8,"classPrivateProperty"],[161,30,160,0],[161,33,160,31,"exports"],[161,40,160,38],[161,41,160,39,"ClassPrivateProperty"],[161,61,160,31],[161,64,160,62,"ClassPrivateProperty"],[161,84,160,0],[162,0,161,0,"exports"],[162,2,161,0,"exports"],[162,9,161,7],[162,10,161,8,"classPrivateMethod"],[162,28,161,0],[162,31,161,29,"exports"],[162,38,161,36],[162,39,161,37,"ClassPrivateMethod"],[162,57,161,29],[162,60,161,58,"ClassPrivateMethod"],[162,78,161,0],[163,0,162,0,"exports"],[163,2,162,0,"exports"],[163,9,162,7],[163,10,162,8,"import"],[163,16,162,0],[163,19,162,17,"exports"],[163,26,162,24],[163,27,162,25,"Import"],[163,33,162,17],[163,36,162,34,"Import"],[163,42,162,0],[164,0,163,0,"exports"],[164,2,163,0,"exports"],[164,9,163,7],[164,10,163,8,"decorator"],[164,19,163,0],[164,22,163,20,"exports"],[164,29,163,27],[164,30,163,28,"Decorator"],[164,39,163,20],[164,42,163,40,"Decorator"],[164,51,163,0],[165,0,164,0,"exports"],[165,2,164,0,"exports"],[165,9,164,7],[165,10,164,8,"doExpression"],[165,22,164,0],[165,25,164,23,"exports"],[165,32,164,30],[165,33,164,31,"DoExpression"],[165,45,164,23],[165,48,164,46,"DoExpression"],[165,60,164,0],[166,0,165,0,"exports"],[166,2,165,0,"exports"],[166,9,165,7],[166,10,165,8,"exportDefaultSpecifier"],[166,32,165,0],[166,35,165,33,"exports"],[166,42,165,40],[166,43,165,41,"ExportDefaultSpecifier"],[166,65,165,33],[166,68,165,66,"ExportDefaultSpecifier"],[166,90,165,0],[167,0,166,0,"exports"],[167,2,166,0,"exports"],[167,9,166,7],[167,10,166,8,"exportNamespaceSpecifier"],[167,34,166,0],[167,37,166,35,"exports"],[167,44,166,42],[167,45,166,43,"ExportNamespaceSpecifier"],[167,69,166,35],[167,72,166,70,"ExportNamespaceSpecifier"],[167,96,166,0],[168,0,167,0,"exports"],[168,2,167,0,"exports"],[168,9,167,7],[168,10,167,8,"privateName"],[168,21,167,0],[168,24,167,22,"exports"],[168,31,167,29],[168,32,167,30,"PrivateName"],[168,43,167,22],[168,46,167,44,"PrivateName"],[168,57,167,0],[169,0,168,0,"exports"],[169,2,168,0,"exports"],[169,9,168,7],[169,10,168,8,"bigIntLiteral"],[169,23,168,0],[169,26,168,24,"exports"],[169,33,168,31],[169,34,168,32,"BigIntLiteral"],[169,47,168,24],[169,50,168,48,"BigIntLiteral"],[169,63,168,0],[170,0,169,0,"exports"],[170,2,169,0,"exports"],[170,9,169,7],[170,10,169,8,"tSParameterProperty"],[170,29,169,0],[170,32,169,30,"exports"],[170,39,169,37],[170,40,169,38,"tsParameterProperty"],[170,59,169,30],[170,62,169,60,"exports"],[170,69,169,67],[170,70,169,68,"TSParameterProperty"],[170,89,169,60],[170,92,169,90,"TSParameterProperty"],[170,111,169,0],[171,0,170,0,"exports"],[171,2,170,0,"exports"],[171,9,170,7],[171,10,170,8,"tSDeclareFunction"],[171,27,170,0],[171,30,170,28,"exports"],[171,37,170,35],[171,38,170,36,"tsDeclareFunction"],[171,55,170,28],[171,58,170,56,"exports"],[171,65,170,63],[171,66,170,64,"TSDeclareFunction"],[171,83,170,56],[171,86,170,84,"TSDeclareFunction"],[171,103,170,0],[172,0,171,0,"exports"],[172,2,171,0,"exports"],[172,9,171,7],[172,10,171,8,"tSDeclareMethod"],[172,25,171,0],[172,28,171,26,"exports"],[172,35,171,33],[172,36,171,34,"tsDeclareMethod"],[172,51,171,26],[172,54,171,52,"exports"],[172,61,171,59],[172,62,171,60,"TSDeclareMethod"],[172,77,171,52],[172,80,171,78,"TSDeclareMethod"],[172,95,171,0],[173,0,172,0,"exports"],[173,2,172,0,"exports"],[173,9,172,7],[173,10,172,8,"tSQualifiedName"],[173,25,172,0],[173,28,172,26,"exports"],[173,35,172,33],[173,36,172,34,"tsQualifiedName"],[173,51,172,26],[173,54,172,52,"exports"],[173,61,172,59],[173,62,172,60,"TSQualifiedName"],[173,77,172,52],[173,80,172,78,"TSQualifiedName"],[173,95,172,0],[174,0,173,0,"exports"],[174,2,173,0,"exports"],[174,9,173,7],[174,10,173,8,"tSCallSignatureDeclaration"],[174,36,173,0],[174,39,173,37,"exports"],[174,46,173,44],[174,47,173,45,"tsCallSignatureDeclaration"],[174,73,173,37],[174,76,173,74,"exports"],[174,83,173,81],[174,84,173,82,"TSCallSignatureDeclaration"],[174,110,173,74],[174,113,173,111,"TSCallSignatureDeclaration"],[174,139,173,0],[175,0,174,0,"exports"],[175,2,174,0,"exports"],[175,9,174,7],[175,10,174,8,"tSConstructSignatureDeclaration"],[175,41,174,0],[175,44,174,42,"exports"],[175,51,174,49],[175,52,174,50,"tsConstructSignatureDeclaration"],[175,83,174,42],[175,86,174,84,"exports"],[175,93,174,91],[175,94,174,92,"TSConstructSignatureDeclaration"],[175,125,174,84],[175,128,174,126,"TSConstructSignatureDeclaration"],[175,159,174,0],[176,0,175,0,"exports"],[176,2,175,0,"exports"],[176,9,175,7],[176,10,175,8,"tSPropertySignature"],[176,29,175,0],[176,32,175,30,"exports"],[176,39,175,37],[176,40,175,38,"tsPropertySignature"],[176,59,175,30],[176,62,175,60,"exports"],[176,69,175,67],[176,70,175,68,"TSPropertySignature"],[176,89,175,60],[176,92,175,90,"TSPropertySignature"],[176,111,175,0],[177,0,176,0,"exports"],[177,2,176,0,"exports"],[177,9,176,7],[177,10,176,8,"tSMethodSignature"],[177,27,176,0],[177,30,176,28,"exports"],[177,37,176,35],[177,38,176,36,"tsMethodSignature"],[177,55,176,28],[177,58,176,56,"exports"],[177,65,176,63],[177,66,176,64,"TSMethodSignature"],[177,83,176,56],[177,86,176,84,"TSMethodSignature"],[177,103,176,0],[178,0,177,0,"exports"],[178,2,177,0,"exports"],[178,9,177,7],[178,10,177,8,"tSIndexSignature"],[178,26,177,0],[178,29,177,27,"exports"],[178,36,177,34],[178,37,177,35,"tsIndexSignature"],[178,53,177,27],[178,56,177,54,"exports"],[178,63,177,61],[178,64,177,62,"TSIndexSignature"],[178,80,177,54],[178,83,177,81,"TSIndexSignature"],[178,99,177,0],[179,0,178,0,"exports"],[179,2,178,0,"exports"],[179,9,178,7],[179,10,178,8,"tSAnyKeyword"],[179,22,178,0],[179,25,178,23,"exports"],[179,32,178,30],[179,33,178,31,"tsAnyKeyword"],[179,45,178,23],[179,48,178,46,"exports"],[179,55,178,53],[179,56,178,54,"TSAnyKeyword"],[179,68,178,46],[179,71,178,69,"TSAnyKeyword"],[179,83,178,0],[180,0,179,0,"exports"],[180,2,179,0,"exports"],[180,9,179,7],[180,10,179,8,"tSUnknownKeyword"],[180,26,179,0],[180,29,179,27,"exports"],[180,36,179,34],[180,37,179,35,"tsUnknownKeyword"],[180,53,179,27],[180,56,179,54,"exports"],[180,63,179,61],[180,64,179,62,"TSUnknownKeyword"],[180,80,179,54],[180,83,179,81,"TSUnknownKeyword"],[180,99,179,0],[181,0,180,0,"exports"],[181,2,180,0,"exports"],[181,9,180,7],[181,10,180,8,"tSNumberKeyword"],[181,25,180,0],[181,28,180,26,"exports"],[181,35,180,33],[181,36,180,34,"tsNumberKeyword"],[181,51,180,26],[181,54,180,52,"exports"],[181,61,180,59],[181,62,180,60,"TSNumberKeyword"],[181,77,180,52],[181,80,180,78,"TSNumberKeyword"],[181,95,180,0],[182,0,181,0,"exports"],[182,2,181,0,"exports"],[182,9,181,7],[182,10,181,8,"tSObjectKeyword"],[182,25,181,0],[182,28,181,26,"exports"],[182,35,181,33],[182,36,181,34,"tsObjectKeyword"],[182,51,181,26],[182,54,181,52,"exports"],[182,61,181,59],[182,62,181,60,"TSObjectKeyword"],[182,77,181,52],[182,80,181,78,"TSObjectKeyword"],[182,95,181,0],[183,0,182,0,"exports"],[183,2,182,0,"exports"],[183,9,182,7],[183,10,182,8,"tSBooleanKeyword"],[183,26,182,0],[183,29,182,27,"exports"],[183,36,182,34],[183,37,182,35,"tsBooleanKeyword"],[183,53,182,27],[183,56,182,54,"exports"],[183,63,182,61],[183,64,182,62,"TSBooleanKeyword"],[183,80,182,54],[183,83,182,81,"TSBooleanKeyword"],[183,99,182,0],[184,0,183,0,"exports"],[184,2,183,0,"exports"],[184,9,183,7],[184,10,183,8,"tSStringKeyword"],[184,25,183,0],[184,28,183,26,"exports"],[184,35,183,33],[184,36,183,34,"tsStringKeyword"],[184,51,183,26],[184,54,183,52,"exports"],[184,61,183,59],[184,62,183,60,"TSStringKeyword"],[184,77,183,52],[184,80,183,78,"TSStringKeyword"],[184,95,183,0],[185,0,184,0,"exports"],[185,2,184,0,"exports"],[185,9,184,7],[185,10,184,8,"tSSymbolKeyword"],[185,25,184,0],[185,28,184,26,"exports"],[185,35,184,33],[185,36,184,34,"tsSymbolKeyword"],[185,51,184,26],[185,54,184,52,"exports"],[185,61,184,59],[185,62,184,60,"TSSymbolKeyword"],[185,77,184,52],[185,80,184,78,"TSSymbolKeyword"],[185,95,184,0],[186,0,185,0,"exports"],[186,2,185,0,"exports"],[186,9,185,7],[186,10,185,8,"tSVoidKeyword"],[186,23,185,0],[186,26,185,24,"exports"],[186,33,185,31],[186,34,185,32,"tsVoidKeyword"],[186,47,185,24],[186,50,185,48,"exports"],[186,57,185,55],[186,58,185,56,"TSVoidKeyword"],[186,71,185,48],[186,74,185,72,"TSVoidKeyword"],[186,87,185,0],[187,0,186,0,"exports"],[187,2,186,0,"exports"],[187,9,186,7],[187,10,186,8,"tSUndefinedKeyword"],[187,28,186,0],[187,31,186,29,"exports"],[187,38,186,36],[187,39,186,37,"tsUndefinedKeyword"],[187,57,186,29],[187,60,186,58,"exports"],[187,67,186,65],[187,68,186,66,"TSUndefinedKeyword"],[187,86,186,58],[187,89,186,87,"TSUndefinedKeyword"],[187,107,186,0],[188,0,187,0,"exports"],[188,2,187,0,"exports"],[188,9,187,7],[188,10,187,8,"tSNullKeyword"],[188,23,187,0],[188,26,187,24,"exports"],[188,33,187,31],[188,34,187,32,"tsNullKeyword"],[188,47,187,24],[188,50,187,48,"exports"],[188,57,187,55],[188,58,187,56,"TSNullKeyword"],[188,71,187,48],[188,74,187,72,"TSNullKeyword"],[188,87,187,0],[189,0,188,0,"exports"],[189,2,188,0,"exports"],[189,9,188,7],[189,10,188,8,"tSNeverKeyword"],[189,24,188,0],[189,27,188,25,"exports"],[189,34,188,32],[189,35,188,33,"tsNeverKeyword"],[189,49,188,25],[189,52,188,50,"exports"],[189,59,188,57],[189,60,188,58,"TSNeverKeyword"],[189,74,188,50],[189,77,188,75,"TSNeverKeyword"],[189,91,188,0],[190,0,189,0,"exports"],[190,2,189,0,"exports"],[190,9,189,7],[190,10,189,8,"tSThisType"],[190,20,189,0],[190,23,189,21,"exports"],[190,30,189,28],[190,31,189,29,"tsThisType"],[190,41,189,21],[190,44,189,42,"exports"],[190,51,189,49],[190,52,189,50,"TSThisType"],[190,62,189,42],[190,65,189,63,"TSThisType"],[190,75,189,0],[191,0,190,0,"exports"],[191,2,190,0,"exports"],[191,9,190,7],[191,10,190,8,"tSFunctionType"],[191,24,190,0],[191,27,190,25,"exports"],[191,34,190,32],[191,35,190,33,"tsFunctionType"],[191,49,190,25],[191,52,190,50,"exports"],[191,59,190,57],[191,60,190,58,"TSFunctionType"],[191,74,190,50],[191,77,190,75,"TSFunctionType"],[191,91,190,0],[192,0,191,0,"exports"],[192,2,191,0,"exports"],[192,9,191,7],[192,10,191,8,"tSConstructorType"],[192,27,191,0],[192,30,191,28,"exports"],[192,37,191,35],[192,38,191,36,"tsConstructorType"],[192,55,191,28],[192,58,191,56,"exports"],[192,65,191,63],[192,66,191,64,"TSConstructorType"],[192,83,191,56],[192,86,191,84,"TSConstructorType"],[192,103,191,0],[193,0,192,0,"exports"],[193,2,192,0,"exports"],[193,9,192,7],[193,10,192,8,"tSTypeReference"],[193,25,192,0],[193,28,192,26,"exports"],[193,35,192,33],[193,36,192,34,"tsTypeReference"],[193,51,192,26],[193,54,192,52,"exports"],[193,61,192,59],[193,62,192,60,"TSTypeReference"],[193,77,192,52],[193,80,192,78,"TSTypeReference"],[193,95,192,0],[194,0,193,0,"exports"],[194,2,193,0,"exports"],[194,9,193,7],[194,10,193,8,"tSTypePredicate"],[194,25,193,0],[194,28,193,26,"exports"],[194,35,193,33],[194,36,193,34,"tsTypePredicate"],[194,51,193,26],[194,54,193,52,"exports"],[194,61,193,59],[194,62,193,60,"TSTypePredicate"],[194,77,193,52],[194,80,193,78,"TSTypePredicate"],[194,95,193,0],[195,0,194,0,"exports"],[195,2,194,0,"exports"],[195,9,194,7],[195,10,194,8,"tSTypeQuery"],[195,21,194,0],[195,24,194,22,"exports"],[195,31,194,29],[195,32,194,30,"tsTypeQuery"],[195,43,194,22],[195,46,194,44,"exports"],[195,53,194,51],[195,54,194,52,"TSTypeQuery"],[195,65,194,44],[195,68,194,66,"TSTypeQuery"],[195,79,194,0],[196,0,195,0,"exports"],[196,2,195,0,"exports"],[196,9,195,7],[196,10,195,8,"tSTypeLiteral"],[196,23,195,0],[196,26,195,24,"exports"],[196,33,195,31],[196,34,195,32,"tsTypeLiteral"],[196,47,195,24],[196,50,195,48,"exports"],[196,57,195,55],[196,58,195,56,"TSTypeLiteral"],[196,71,195,48],[196,74,195,72,"TSTypeLiteral"],[196,87,195,0],[197,0,196,0,"exports"],[197,2,196,0,"exports"],[197,9,196,7],[197,10,196,8,"tSArrayType"],[197,21,196,0],[197,24,196,22,"exports"],[197,31,196,29],[197,32,196,30,"tsArrayType"],[197,43,196,22],[197,46,196,44,"exports"],[197,53,196,51],[197,54,196,52,"TSArrayType"],[197,65,196,44],[197,68,196,66,"TSArrayType"],[197,79,196,0],[198,0,197,0,"exports"],[198,2,197,0,"exports"],[198,9,197,7],[198,10,197,8,"tSTupleType"],[198,21,197,0],[198,24,197,22,"exports"],[198,31,197,29],[198,32,197,30,"tsTupleType"],[198,43,197,22],[198,46,197,44,"exports"],[198,53,197,51],[198,54,197,52,"TSTupleType"],[198,65,197,44],[198,68,197,66,"TSTupleType"],[198,79,197,0],[199,0,198,0,"exports"],[199,2,198,0,"exports"],[199,9,198,7],[199,10,198,8,"tSOptionalType"],[199,24,198,0],[199,27,198,25,"exports"],[199,34,198,32],[199,35,198,33,"tsOptionalType"],[199,49,198,25],[199,52,198,50,"exports"],[199,59,198,57],[199,60,198,58,"TSOptionalType"],[199,74,198,50],[199,77,198,75,"TSOptionalType"],[199,91,198,0],[200,0,199,0,"exports"],[200,2,199,0,"exports"],[200,9,199,7],[200,10,199,8,"tSRestType"],[200,20,199,0],[200,23,199,21,"exports"],[200,30,199,28],[200,31,199,29,"tsRestType"],[200,41,199,21],[200,44,199,42,"exports"],[200,51,199,49],[200,52,199,50,"TSRestType"],[200,62,199,42],[200,65,199,63,"TSRestType"],[200,75,199,0],[201,0,200,0,"exports"],[201,2,200,0,"exports"],[201,9,200,7],[201,10,200,8,"tSUnionType"],[201,21,200,0],[201,24,200,22,"exports"],[201,31,200,29],[201,32,200,30,"tsUnionType"],[201,43,200,22],[201,46,200,44,"exports"],[201,53,200,51],[201,54,200,52,"TSUnionType"],[201,65,200,44],[201,68,200,66,"TSUnionType"],[201,79,200,0],[202,0,201,0,"exports"],[202,2,201,0,"exports"],[202,9,201,7],[202,10,201,8,"tSIntersectionType"],[202,28,201,0],[202,31,201,29,"exports"],[202,38,201,36],[202,39,201,37,"tsIntersectionType"],[202,57,201,29],[202,60,201,58,"exports"],[202,67,201,65],[202,68,201,66,"TSIntersectionType"],[202,86,201,58],[202,89,201,87,"TSIntersectionType"],[202,107,201,0],[203,0,202,0,"exports"],[203,2,202,0,"exports"],[203,9,202,7],[203,10,202,8,"tSConditionalType"],[203,27,202,0],[203,30,202,28,"exports"],[203,37,202,35],[203,38,202,36,"tsConditionalType"],[203,55,202,28],[203,58,202,56,"exports"],[203,65,202,63],[203,66,202,64,"TSConditionalType"],[203,83,202,56],[203,86,202,84,"TSConditionalType"],[203,103,202,0],[204,0,203,0,"exports"],[204,2,203,0,"exports"],[204,9,203,7],[204,10,203,8,"tSInferType"],[204,21,203,0],[204,24,203,22,"exports"],[204,31,203,29],[204,32,203,30,"tsInferType"],[204,43,203,22],[204,46,203,44,"exports"],[204,53,203,51],[204,54,203,52,"TSInferType"],[204,65,203,44],[204,68,203,66,"TSInferType"],[204,79,203,0],[205,0,204,0,"exports"],[205,2,204,0,"exports"],[205,9,204,7],[205,10,204,8,"tSParenthesizedType"],[205,29,204,0],[205,32,204,30,"exports"],[205,39,204,37],[205,40,204,38,"tsParenthesizedType"],[205,59,204,30],[205,62,204,60,"exports"],[205,69,204,67],[205,70,204,68,"TSParenthesizedType"],[205,89,204,60],[205,92,204,90,"TSParenthesizedType"],[205,111,204,0],[206,0,205,0,"exports"],[206,2,205,0,"exports"],[206,9,205,7],[206,10,205,8,"tSTypeOperator"],[206,24,205,0],[206,27,205,25,"exports"],[206,34,205,32],[206,35,205,33,"tsTypeOperator"],[206,49,205,25],[206,52,205,50,"exports"],[206,59,205,57],[206,60,205,58,"TSTypeOperator"],[206,74,205,50],[206,77,205,75,"TSTypeOperator"],[206,91,205,0],[207,0,206,0,"exports"],[207,2,206,0,"exports"],[207,9,206,7],[207,10,206,8,"tSIndexedAccessType"],[207,29,206,0],[207,32,206,30,"exports"],[207,39,206,37],[207,40,206,38,"tsIndexedAccessType"],[207,59,206,30],[207,62,206,60,"exports"],[207,69,206,67],[207,70,206,68,"TSIndexedAccessType"],[207,89,206,60],[207,92,206,90,"TSIndexedAccessType"],[207,111,206,0],[208,0,207,0,"exports"],[208,2,207,0,"exports"],[208,9,207,7],[208,10,207,8,"tSMappedType"],[208,22,207,0],[208,25,207,23,"exports"],[208,32,207,30],[208,33,207,31,"tsMappedType"],[208,45,207,23],[208,48,207,46,"exports"],[208,55,207,53],[208,56,207,54,"TSMappedType"],[208,68,207,46],[208,71,207,69,"TSMappedType"],[208,83,207,0],[209,0,208,0,"exports"],[209,2,208,0,"exports"],[209,9,208,7],[209,10,208,8,"tSLiteralType"],[209,23,208,0],[209,26,208,24,"exports"],[209,33,208,31],[209,34,208,32,"tsLiteralType"],[209,47,208,24],[209,50,208,48,"exports"],[209,57,208,55],[209,58,208,56,"TSLiteralType"],[209,71,208,48],[209,74,208,72,"TSLiteralType"],[209,87,208,0],[210,0,209,0,"exports"],[210,2,209,0,"exports"],[210,9,209,7],[210,10,209,8,"tSExpressionWithTypeArguments"],[210,39,209,0],[210,42,209,40,"exports"],[210,49,209,47],[210,50,209,48,"tsExpressionWithTypeArguments"],[210,79,209,40],[210,82,209,80,"exports"],[210,89,209,87],[210,90,209,88,"TSExpressionWithTypeArguments"],[210,119,209,80],[210,122,209,120,"TSExpressionWithTypeArguments"],[210,151,209,0],[211,0,210,0,"exports"],[211,2,210,0,"exports"],[211,9,210,7],[211,10,210,8,"tSInterfaceDeclaration"],[211,32,210,0],[211,35,210,33,"exports"],[211,42,210,40],[211,43,210,41,"tsInterfaceDeclaration"],[211,65,210,33],[211,68,210,66,"exports"],[211,75,210,73],[211,76,210,74,"TSInterfaceDeclaration"],[211,98,210,66],[211,101,210,99,"TSInterfaceDeclaration"],[211,123,210,0],[212,0,211,0,"exports"],[212,2,211,0,"exports"],[212,9,211,7],[212,10,211,8,"tSInterfaceBody"],[212,25,211,0],[212,28,211,26,"exports"],[212,35,211,33],[212,36,211,34,"tsInterfaceBody"],[212,51,211,26],[212,54,211,52,"exports"],[212,61,211,59],[212,62,211,60,"TSInterfaceBody"],[212,77,211,52],[212,80,211,78,"TSInterfaceBody"],[212,95,211,0],[213,0,212,0,"exports"],[213,2,212,0,"exports"],[213,9,212,7],[213,10,212,8,"tSTypeAliasDeclaration"],[213,32,212,0],[213,35,212,33,"exports"],[213,42,212,40],[213,43,212,41,"tsTypeAliasDeclaration"],[213,65,212,33],[213,68,212,66,"exports"],[213,75,212,73],[213,76,212,74,"TSTypeAliasDeclaration"],[213,98,212,66],[213,101,212,99,"TSTypeAliasDeclaration"],[213,123,212,0],[214,0,213,0,"exports"],[214,2,213,0,"exports"],[214,9,213,7],[214,10,213,8,"tSAsExpression"],[214,24,213,0],[214,27,213,25,"exports"],[214,34,213,32],[214,35,213,33,"tsAsExpression"],[214,49,213,25],[214,52,213,50,"exports"],[214,59,213,57],[214,60,213,58,"TSAsExpression"],[214,74,213,50],[214,77,213,75,"TSAsExpression"],[214,91,213,0],[215,0,214,0,"exports"],[215,2,214,0,"exports"],[215,9,214,7],[215,10,214,8,"tSTypeAssertion"],[215,25,214,0],[215,28,214,26,"exports"],[215,35,214,33],[215,36,214,34,"tsTypeAssertion"],[215,51,214,26],[215,54,214,52,"exports"],[215,61,214,59],[215,62,214,60,"TSTypeAssertion"],[215,77,214,52],[215,80,214,78,"TSTypeAssertion"],[215,95,214,0],[216,0,215,0,"exports"],[216,2,215,0,"exports"],[216,9,215,7],[216,10,215,8,"tSEnumDeclaration"],[216,27,215,0],[216,30,215,28,"exports"],[216,37,215,35],[216,38,215,36,"tsEnumDeclaration"],[216,55,215,28],[216,58,215,56,"exports"],[216,65,215,63],[216,66,215,64,"TSEnumDeclaration"],[216,83,215,56],[216,86,215,84,"TSEnumDeclaration"],[216,103,215,0],[217,0,216,0,"exports"],[217,2,216,0,"exports"],[217,9,216,7],[217,10,216,8,"tSEnumMember"],[217,22,216,0],[217,25,216,23,"exports"],[217,32,216,30],[217,33,216,31,"tsEnumMember"],[217,45,216,23],[217,48,216,46,"exports"],[217,55,216,53],[217,56,216,54,"TSEnumMember"],[217,68,216,46],[217,71,216,69,"TSEnumMember"],[217,83,216,0],[218,0,217,0,"exports"],[218,2,217,0,"exports"],[218,9,217,7],[218,10,217,8,"tSModuleDeclaration"],[218,29,217,0],[218,32,217,30,"exports"],[218,39,217,37],[218,40,217,38,"tsModuleDeclaration"],[218,59,217,30],[218,62,217,60,"exports"],[218,69,217,67],[218,70,217,68,"TSModuleDeclaration"],[218,89,217,60],[218,92,217,90,"TSModuleDeclaration"],[218,111,217,0],[219,0,218,0,"exports"],[219,2,218,0,"exports"],[219,9,218,7],[219,10,218,8,"tSModuleBlock"],[219,23,218,0],[219,26,218,24,"exports"],[219,33,218,31],[219,34,218,32,"tsModuleBlock"],[219,47,218,24],[219,50,218,48,"exports"],[219,57,218,55],[219,58,218,56,"TSModuleBlock"],[219,71,218,48],[219,74,218,72,"TSModuleBlock"],[219,87,218,0],[220,0,219,0,"exports"],[220,2,219,0,"exports"],[220,9,219,7],[220,10,219,8,"tSImportType"],[220,22,219,0],[220,25,219,23,"exports"],[220,32,219,30],[220,33,219,31,"tsImportType"],[220,45,219,23],[220,48,219,46,"exports"],[220,55,219,53],[220,56,219,54,"TSImportType"],[220,68,219,46],[220,71,219,69,"TSImportType"],[220,83,219,0],[221,0,220,0,"exports"],[221,2,220,0,"exports"],[221,9,220,7],[221,10,220,8,"tSImportEqualsDeclaration"],[221,35,220,0],[221,38,220,36,"exports"],[221,45,220,43],[221,46,220,44,"tsImportEqualsDeclaration"],[221,71,220,36],[221,74,220,72,"exports"],[221,81,220,79],[221,82,220,80,"TSImportEqualsDeclaration"],[221,107,220,72],[221,110,220,108,"TSImportEqualsDeclaration"],[221,135,220,0],[222,0,221,0,"exports"],[222,2,221,0,"exports"],[222,9,221,7],[222,10,221,8,"tSExternalModuleReference"],[222,35,221,0],[222,38,221,36,"exports"],[222,45,221,43],[222,46,221,44,"tsExternalModuleReference"],[222,71,221,36],[222,74,221,72,"exports"],[222,81,221,79],[222,82,221,80,"TSExternalModuleReference"],[222,107,221,72],[222,110,221,108,"TSExternalModuleReference"],[222,135,221,0],[223,0,222,0,"exports"],[223,2,222,0,"exports"],[223,9,222,7],[223,10,222,8,"tSNonNullExpression"],[223,29,222,0],[223,32,222,30,"exports"],[223,39,222,37],[223,40,222,38,"tsNonNullExpression"],[223,59,222,30],[223,62,222,60,"exports"],[223,69,222,67],[223,70,222,68,"TSNonNullExpression"],[223,89,222,60],[223,92,222,90,"TSNonNullExpression"],[223,111,222,0],[224,0,223,0,"exports"],[224,2,223,0,"exports"],[224,9,223,7],[224,10,223,8,"tSExportAssignment"],[224,28,223,0],[224,31,223,29,"exports"],[224,38,223,36],[224,39,223,37,"tsExportAssignment"],[224,57,223,29],[224,60,223,58,"exports"],[224,67,223,65],[224,68,223,66,"TSExportAssignment"],[224,86,223,58],[224,89,223,87,"TSExportAssignment"],[224,107,223,0],[225,0,224,0,"exports"],[225,2,224,0,"exports"],[225,9,224,7],[225,10,224,8,"tSNamespaceExportDeclaration"],[225,38,224,0],[225,41,224,39,"exports"],[225,48,224,46],[225,49,224,47,"tsNamespaceExportDeclaration"],[225,77,224,39],[225,80,224,78,"exports"],[225,87,224,85],[225,88,224,86,"TSNamespaceExportDeclaration"],[225,116,224,78],[225,119,224,117,"TSNamespaceExportDeclaration"],[225,147,224,0],[226,0,225,0,"exports"],[226,2,225,0,"exports"],[226,9,225,7],[226,10,225,8,"tSTypeAnnotation"],[226,26,225,0],[226,29,225,27,"exports"],[226,36,225,34],[226,37,225,35,"tsTypeAnnotation"],[226,53,225,27],[226,56,225,54,"exports"],[226,63,225,61],[226,64,225,62,"TSTypeAnnotation"],[226,80,225,54],[226,83,225,81,"TSTypeAnnotation"],[226,99,225,0],[227,0,226,0,"exports"],[227,2,226,0,"exports"],[227,9,226,7],[227,10,226,8,"tSTypeParameterInstantiation"],[227,38,226,0],[227,41,226,39,"exports"],[227,48,226,46],[227,49,226,47,"tsTypeParameterInstantiation"],[227,77,226,39],[227,80,226,78,"exports"],[227,87,226,85],[227,88,226,86,"TSTypeParameterInstantiation"],[227,116,226,78],[227,119,226,117,"TSTypeParameterInstantiation"],[227,147,226,0],[228,0,227,0,"exports"],[228,2,227,0,"exports"],[228,9,227,7],[228,10,227,8,"tSTypeParameterDeclaration"],[228,36,227,0],[228,39,227,37,"exports"],[228,46,227,44],[228,47,227,45,"tsTypeParameterDeclaration"],[228,73,227,37],[228,76,227,74,"exports"],[228,83,227,81],[228,84,227,82,"TSTypeParameterDeclaration"],[228,110,227,74],[228,113,227,111,"TSTypeParameterDeclaration"],[228,139,227,0],[229,0,228,0,"exports"],[229,2,228,0,"exports"],[229,9,228,7],[229,10,228,8,"tSTypeParameter"],[229,25,228,0],[229,28,228,26,"exports"],[229,35,228,33],[229,36,228,34,"tsTypeParameter"],[229,51,228,26],[229,54,228,52,"exports"],[229,61,228,59],[229,62,228,60,"TSTypeParameter"],[229,77,228,52],[229,80,228,78,"TSTypeParameter"],[229,95,228,0],[230,0,229,0,"exports"],[230,2,229,0,"exports"],[230,9,229,7],[230,10,229,8,"numberLiteral"],[230,23,229,0],[230,26,229,24,"exports"],[230,33,229,31],[230,34,229,32,"NumberLiteral"],[230,47,229,24],[230,50,229,48,"NumberLiteral"],[230,63,229,0],[231,0,230,0,"exports"],[231,2,230,0,"exports"],[231,9,230,7],[231,10,230,8,"regexLiteral"],[231,22,230,0],[231,25,230,23,"exports"],[231,32,230,30],[231,33,230,31,"RegexLiteral"],[231,45,230,23],[231,48,230,46,"RegexLiteral"],[231,60,230,0],[232,0,231,0,"exports"],[232,2,231,0,"exports"],[232,9,231,7],[232,10,231,8,"restProperty"],[232,22,231,0],[232,25,231,23,"exports"],[232,32,231,30],[232,33,231,31,"RestProperty"],[232,45,231,23],[232,48,231,46,"RestProperty"],[232,60,231,0],[233,0,232,0,"exports"],[233,2,232,0,"exports"],[233,9,232,7],[233,10,232,8,"spreadProperty"],[233,24,232,0],[233,27,232,25,"exports"],[233,34,232,32],[233,35,232,33,"SpreadProperty"],[233,49,232,25],[233,52,232,50,"SpreadProperty"],[233,66,232,0],[235,0,234,0],[235,6,234,4,"_builder"],[235,14,234,12],[235,17,234,15,"_interopRequireDefault"],[235,39,234,37],[235,40,234,38,"require"],[235,51,234,45],[235,84,234,37],[235,85,234,0],[237,0,236,0],[237,11,236,9,"_interopRequireDefault"],[237,33,236,0],[237,34,236,32,"obj"],[237,37,236,0],[237,39,236,37],[238,0,236,39],[238,11,236,46,"obj"],[238,14,236,49],[238,18,236,53,"obj"],[238,21,236,56],[238,22,236,57,"__esModule"],[238,32,236,46],[238,35,236,70,"obj"],[238,38,236,46],[238,41,236,76],[239,0,236,78,"default"],[239,6,236,78,"default"],[239,13,236,85],[239,15,236,87,"obj"],[240,0,236,76],[240,5,236,39],[241,0,236,95],[243,0,238,0],[243,11,238,9,"ArrayExpression"],[243,26,238,0],[243,29,238,34],[244,0,238,34],[244,38,238,28,"args"],[244,42,238,34],[245,0,238,28,"args"],[245,6,238,28,"args"],[245,10,238,34],[246,0,238,34],[248,0,239,2],[248,11,239,9],[248,12,239,10],[248,15,239,13,"_builder"],[248,23,239,21],[248,24,239,22,"default"],[248,31,239,9],[248,48,239,31],[248,65,239,9],[248,74,239,53,"args"],[248,78,239,9],[248,80,239,2],[249,0,240,1],[251,0,242,0],[251,11,242,9,"AssignmentExpression"],[251,31,242,0],[251,34,242,39],[252,0,242,39],[252,39,242,33,"args"],[252,43,242,39],[253,0,242,33,"args"],[253,6,242,33,"args"],[253,10,242,39],[254,0,242,39],[256,0,243,2],[256,11,243,9],[256,12,243,10],[256,15,243,13,"_builder"],[256,23,243,21],[256,24,243,22,"default"],[256,31,243,9],[256,48,243,31],[256,70,243,9],[256,79,243,58,"args"],[256,83,243,9],[256,85,243,2],[257,0,244,1],[259,0,246,0],[259,11,246,9,"BinaryExpression"],[259,27,246,0],[259,30,246,35],[260,0,246,35],[260,39,246,29,"args"],[260,43,246,35],[261,0,246,29,"args"],[261,6,246,29,"args"],[261,10,246,35],[262,0,246,35],[264,0,247,2],[264,11,247,9],[264,12,247,10],[264,15,247,13,"_builder"],[264,23,247,21],[264,24,247,22,"default"],[264,31,247,9],[264,48,247,31],[264,66,247,9],[264,75,247,54,"args"],[264,79,247,9],[264,81,247,2],[265,0,248,1],[267,0,250,0],[267,11,250,9,"InterpreterDirective"],[267,31,250,0],[267,34,250,39],[268,0,250,39],[268,39,250,33,"args"],[268,43,250,39],[269,0,250,33,"args"],[269,6,250,33,"args"],[269,10,250,39],[270,0,250,39],[272,0,251,2],[272,11,251,9],[272,12,251,10],[272,15,251,13,"_builder"],[272,23,251,21],[272,24,251,22,"default"],[272,31,251,9],[272,48,251,31],[272,70,251,9],[272,79,251,58,"args"],[272,83,251,9],[272,85,251,2],[273,0,252,1],[275,0,254,0],[275,11,254,9,"Directive"],[275,20,254,0],[275,23,254,28],[276,0,254,28],[276,39,254,22,"args"],[276,43,254,28],[277,0,254,22,"args"],[277,6,254,22,"args"],[277,10,254,28],[278,0,254,28],[280,0,255,2],[280,11,255,9],[280,12,255,10],[280,15,255,13,"_builder"],[280,23,255,21],[280,24,255,22,"default"],[280,31,255,9],[280,48,255,31],[280,59,255,9],[280,68,255,47,"args"],[280,72,255,9],[280,74,255,2],[281,0,256,1],[283,0,258,0],[283,11,258,9,"DirectiveLiteral"],[283,27,258,0],[283,30,258,35],[284,0,258,35],[284,39,258,29,"args"],[284,43,258,35],[285,0,258,29,"args"],[285,6,258,29,"args"],[285,10,258,35],[286,0,258,35],[288,0,259,2],[288,11,259,9],[288,12,259,10],[288,15,259,13,"_builder"],[288,23,259,21],[288,24,259,22,"default"],[288,31,259,9],[288,48,259,31],[288,66,259,9],[288,75,259,54,"args"],[288,79,259,9],[288,81,259,2],[289,0,260,1],[291,0,262,0],[291,11,262,9,"BlockStatement"],[291,25,262,0],[291,28,262,33],[292,0,262,33],[292,39,262,27,"args"],[292,43,262,33],[293,0,262,27,"args"],[293,6,262,27,"args"],[293,10,262,33],[294,0,262,33],[296,0,263,2],[296,11,263,9],[296,12,263,10],[296,15,263,13,"_builder"],[296,23,263,21],[296,24,263,22,"default"],[296,31,263,9],[296,48,263,31],[296,64,263,9],[296,73,263,52,"args"],[296,77,263,9],[296,79,263,2],[297,0,264,1],[299,0,266,0],[299,11,266,9,"BreakStatement"],[299,25,266,0],[299,28,266,33],[300,0,266,33],[300,39,266,27,"args"],[300,43,266,33],[301,0,266,27,"args"],[301,6,266,27,"args"],[301,10,266,33],[302,0,266,33],[304,0,267,2],[304,11,267,9],[304,12,267,10],[304,15,267,13,"_builder"],[304,23,267,21],[304,24,267,22,"default"],[304,31,267,9],[304,48,267,31],[304,64,267,9],[304,73,267,52,"args"],[304,77,267,9],[304,79,267,2],[305,0,268,1],[307,0,270,0],[307,11,270,9,"CallExpression"],[307,25,270,0],[307,28,270,33],[308,0,270,33],[308,39,270,27,"args"],[308,43,270,33],[309,0,270,27,"args"],[309,6,270,27,"args"],[309,10,270,33],[310,0,270,33],[312,0,271,2],[312,11,271,9],[312,12,271,10],[312,15,271,13,"_builder"],[312,23,271,21],[312,24,271,22,"default"],[312,31,271,9],[312,48,271,31],[312,64,271,9],[312,73,271,52,"args"],[312,77,271,9],[312,79,271,2],[313,0,272,1],[315,0,274,0],[315,11,274,9,"CatchClause"],[315,22,274,0],[315,25,274,30],[316,0,274,30],[316,40,274,24,"args"],[316,44,274,30],[317,0,274,24,"args"],[317,6,274,24,"args"],[317,10,274,30],[318,0,274,30],[320,0,275,2],[320,11,275,9],[320,12,275,10],[320,15,275,13,"_builder"],[320,23,275,21],[320,24,275,22,"default"],[320,31,275,9],[320,48,275,31],[320,61,275,9],[320,70,275,49,"args"],[320,74,275,9],[320,76,275,2],[321,0,276,1],[323,0,278,0],[323,11,278,9,"ConditionalExpression"],[323,32,278,0],[323,35,278,40],[324,0,278,40],[324,40,278,34,"args"],[324,44,278,40],[325,0,278,34,"args"],[325,6,278,34,"args"],[325,10,278,40],[326,0,278,40],[328,0,279,2],[328,11,279,9],[328,12,279,10],[328,15,279,13,"_builder"],[328,23,279,21],[328,24,279,22,"default"],[328,31,279,9],[328,48,279,31],[328,71,279,9],[328,80,279,59,"args"],[328,84,279,9],[328,86,279,2],[329,0,280,1],[331,0,282,0],[331,11,282,9,"ContinueStatement"],[331,28,282,0],[331,31,282,36],[332,0,282,36],[332,40,282,30,"args"],[332,44,282,36],[333,0,282,30,"args"],[333,6,282,30,"args"],[333,10,282,36],[334,0,282,36],[336,0,283,2],[336,11,283,9],[336,12,283,10],[336,15,283,13,"_builder"],[336,23,283,21],[336,24,283,22,"default"],[336,31,283,9],[336,48,283,31],[336,67,283,9],[336,76,283,55,"args"],[336,80,283,9],[336,82,283,2],[337,0,284,1],[339,0,286,0],[339,11,286,9,"DebuggerStatement"],[339,28,286,0],[339,31,286,36],[340,0,286,36],[340,40,286,30,"args"],[340,44,286,36],[341,0,286,30,"args"],[341,6,286,30,"args"],[341,10,286,36],[342,0,286,36],[344,0,287,2],[344,11,287,9],[344,12,287,10],[344,15,287,13,"_builder"],[344,23,287,21],[344,24,287,22,"default"],[344,31,287,9],[344,48,287,31],[344,67,287,9],[344,76,287,55,"args"],[344,80,287,9],[344,82,287,2],[345,0,288,1],[347,0,290,0],[347,11,290,9,"DoWhileStatement"],[347,27,290,0],[347,30,290,35],[348,0,290,35],[348,40,290,29,"args"],[348,44,290,35],[349,0,290,29,"args"],[349,6,290,29,"args"],[349,10,290,35],[350,0,290,35],[352,0,291,2],[352,11,291,9],[352,12,291,10],[352,15,291,13,"_builder"],[352,23,291,21],[352,24,291,22,"default"],[352,31,291,9],[352,48,291,31],[352,66,291,9],[352,75,291,54,"args"],[352,79,291,9],[352,81,291,2],[353,0,292,1],[355,0,294,0],[355,11,294,9,"EmptyStatement"],[355,25,294,0],[355,28,294,33],[356,0,294,33],[356,40,294,27,"args"],[356,44,294,33],[357,0,294,27,"args"],[357,6,294,27,"args"],[357,10,294,33],[358,0,294,33],[360,0,295,2],[360,11,295,9],[360,12,295,10],[360,15,295,13,"_builder"],[360,23,295,21],[360,24,295,22,"default"],[360,31,295,9],[360,48,295,31],[360,64,295,9],[360,73,295,52,"args"],[360,77,295,9],[360,79,295,2],[361,0,296,1],[363,0,298,0],[363,11,298,9,"ExpressionStatement"],[363,30,298,0],[363,33,298,38],[364,0,298,38],[364,40,298,32,"args"],[364,44,298,38],[365,0,298,32,"args"],[365,6,298,32,"args"],[365,10,298,38],[366,0,298,38],[368,0,299,2],[368,11,299,9],[368,12,299,10],[368,15,299,13,"_builder"],[368,23,299,21],[368,24,299,22,"default"],[368,31,299,9],[368,48,299,31],[368,69,299,9],[368,78,299,57,"args"],[368,82,299,9],[368,84,299,2],[369,0,300,1],[371,0,302,0],[371,11,302,9,"File"],[371,15,302,0],[371,18,302,23],[372,0,302,23],[372,40,302,17,"args"],[372,44,302,23],[373,0,302,17,"args"],[373,6,302,17,"args"],[373,10,302,23],[374,0,302,23],[376,0,303,2],[376,11,303,9],[376,12,303,10],[376,15,303,13,"_builder"],[376,23,303,21],[376,24,303,22,"default"],[376,31,303,9],[376,48,303,31],[376,54,303,9],[376,63,303,42,"args"],[376,67,303,9],[376,69,303,2],[377,0,304,1],[379,0,306,0],[379,11,306,9,"ForInStatement"],[379,25,306,0],[379,28,306,33],[380,0,306,33],[380,40,306,27,"args"],[380,44,306,33],[381,0,306,27,"args"],[381,6,306,27,"args"],[381,10,306,33],[382,0,306,33],[384,0,307,2],[384,11,307,9],[384,12,307,10],[384,15,307,13,"_builder"],[384,23,307,21],[384,24,307,22,"default"],[384,31,307,9],[384,48,307,31],[384,64,307,9],[384,73,307,52,"args"],[384,77,307,9],[384,79,307,2],[385,0,308,1],[387,0,310,0],[387,11,310,9,"ForStatement"],[387,23,310,0],[387,26,310,31],[388,0,310,31],[388,40,310,25,"args"],[388,44,310,31],[389,0,310,25,"args"],[389,6,310,25,"args"],[389,10,310,31],[390,0,310,31],[392,0,311,2],[392,11,311,9],[392,12,311,10],[392,15,311,13,"_builder"],[392,23,311,21],[392,24,311,22,"default"],[392,31,311,9],[392,48,311,31],[392,62,311,9],[392,71,311,50,"args"],[392,75,311,9],[392,77,311,2],[393,0,312,1],[395,0,314,0],[395,11,314,9,"FunctionDeclaration"],[395,30,314,0],[395,33,314,38],[396,0,314,38],[396,40,314,32,"args"],[396,44,314,38],[397,0,314,32,"args"],[397,6,314,32,"args"],[397,10,314,38],[398,0,314,38],[400,0,315,2],[400,11,315,9],[400,12,315,10],[400,15,315,13,"_builder"],[400,23,315,21],[400,24,315,22,"default"],[400,31,315,9],[400,48,315,31],[400,69,315,9],[400,78,315,57,"args"],[400,82,315,9],[400,84,315,2],[401,0,316,1],[403,0,318,0],[403,11,318,9,"FunctionExpression"],[403,29,318,0],[403,32,318,37],[404,0,318,37],[404,40,318,31,"args"],[404,44,318,37],[405,0,318,31,"args"],[405,6,318,31,"args"],[405,10,318,37],[406,0,318,37],[408,0,319,2],[408,11,319,9],[408,12,319,10],[408,15,319,13,"_builder"],[408,23,319,21],[408,24,319,22,"default"],[408,31,319,9],[408,48,319,31],[408,68,319,9],[408,77,319,56,"args"],[408,81,319,9],[408,83,319,2],[409,0,320,1],[411,0,322,0],[411,11,322,9,"Identifier"],[411,21,322,0],[411,24,322,29],[412,0,322,29],[412,40,322,23,"args"],[412,44,322,29],[413,0,322,23,"args"],[413,6,322,23,"args"],[413,10,322,29],[414,0,322,29],[416,0,323,2],[416,11,323,9],[416,12,323,10],[416,15,323,13,"_builder"],[416,23,323,21],[416,24,323,22,"default"],[416,31,323,9],[416,48,323,31],[416,60,323,9],[416,69,323,48,"args"],[416,73,323,9],[416,75,323,2],[417,0,324,1],[419,0,326,0],[419,11,326,9,"IfStatement"],[419,22,326,0],[419,25,326,30],[420,0,326,30],[420,40,326,24,"args"],[420,44,326,30],[421,0,326,24,"args"],[421,6,326,24,"args"],[421,10,326,30],[422,0,326,30],[424,0,327,2],[424,11,327,9],[424,12,327,10],[424,15,327,13,"_builder"],[424,23,327,21],[424,24,327,22,"default"],[424,31,327,9],[424,48,327,31],[424,61,327,9],[424,70,327,49,"args"],[424,74,327,9],[424,76,327,2],[425,0,328,1],[427,0,330,0],[427,11,330,9,"LabeledStatement"],[427,27,330,0],[427,30,330,35],[428,0,330,35],[428,40,330,29,"args"],[428,44,330,35],[429,0,330,29,"args"],[429,6,330,29,"args"],[429,10,330,35],[430,0,330,35],[432,0,331,2],[432,11,331,9],[432,12,331,10],[432,15,331,13,"_builder"],[432,23,331,21],[432,24,331,22,"default"],[432,31,331,9],[432,48,331,31],[432,66,331,9],[432,75,331,54,"args"],[432,79,331,9],[432,81,331,2],[433,0,332,1],[435,0,334,0],[435,11,334,9,"StringLiteral"],[435,24,334,0],[435,27,334,32],[436,0,334,32],[436,40,334,26,"args"],[436,44,334,32],[437,0,334,26,"args"],[437,6,334,26,"args"],[437,10,334,32],[438,0,334,32],[440,0,335,2],[440,11,335,9],[440,12,335,10],[440,15,335,13,"_builder"],[440,23,335,21],[440,24,335,22,"default"],[440,31,335,9],[440,48,335,31],[440,63,335,9],[440,72,335,51,"args"],[440,76,335,9],[440,78,335,2],[441,0,336,1],[443,0,338,0],[443,11,338,9,"NumericLiteral"],[443,25,338,0],[443,28,338,33],[444,0,338,33],[444,40,338,27,"args"],[444,44,338,33],[445,0,338,27,"args"],[445,6,338,27,"args"],[445,10,338,33],[446,0,338,33],[448,0,339,2],[448,11,339,9],[448,12,339,10],[448,15,339,13,"_builder"],[448,23,339,21],[448,24,339,22,"default"],[448,31,339,9],[448,48,339,31],[448,64,339,9],[448,73,339,52,"args"],[448,77,339,9],[448,79,339,2],[449,0,340,1],[451,0,342,0],[451,11,342,9,"NullLiteral"],[451,22,342,0],[451,25,342,30],[452,0,342,30],[452,40,342,24,"args"],[452,44,342,30],[453,0,342,24,"args"],[453,6,342,24,"args"],[453,10,342,30],[454,0,342,30],[456,0,343,2],[456,11,343,9],[456,12,343,10],[456,15,343,13,"_builder"],[456,23,343,21],[456,24,343,22,"default"],[456,31,343,9],[456,48,343,31],[456,61,343,9],[456,70,343,49,"args"],[456,74,343,9],[456,76,343,2],[457,0,344,1],[459,0,346,0],[459,11,346,9,"BooleanLiteral"],[459,25,346,0],[459,28,346,33],[460,0,346,33],[460,40,346,27,"args"],[460,44,346,33],[461,0,346,27,"args"],[461,6,346,27,"args"],[461,10,346,33],[462,0,346,33],[464,0,347,2],[464,11,347,9],[464,12,347,10],[464,15,347,13,"_builder"],[464,23,347,21],[464,24,347,22,"default"],[464,31,347,9],[464,48,347,31],[464,64,347,9],[464,73,347,52,"args"],[464,77,347,9],[464,79,347,2],[465,0,348,1],[467,0,350,0],[467,11,350,9,"RegExpLiteral"],[467,24,350,0],[467,27,350,32],[468,0,350,32],[468,40,350,26,"args"],[468,44,350,32],[469,0,350,26,"args"],[469,6,350,26,"args"],[469,10,350,32],[470,0,350,32],[472,0,351,2],[472,11,351,9],[472,12,351,10],[472,15,351,13,"_builder"],[472,23,351,21],[472,24,351,22,"default"],[472,31,351,9],[472,48,351,31],[472,63,351,9],[472,72,351,51,"args"],[472,76,351,9],[472,78,351,2],[473,0,352,1],[475,0,354,0],[475,11,354,9,"LogicalExpression"],[475,28,354,0],[475,31,354,36],[476,0,354,36],[476,40,354,30,"args"],[476,44,354,36],[477,0,354,30,"args"],[477,6,354,30,"args"],[477,10,354,36],[478,0,354,36],[480,0,355,2],[480,11,355,9],[480,12,355,10],[480,15,355,13,"_builder"],[480,23,355,21],[480,24,355,22,"default"],[480,31,355,9],[480,48,355,31],[480,67,355,9],[480,76,355,55,"args"],[480,80,355,9],[480,82,355,2],[481,0,356,1],[483,0,358,0],[483,11,358,9,"MemberExpression"],[483,27,358,0],[483,30,358,35],[484,0,358,35],[484,40,358,29,"args"],[484,44,358,35],[485,0,358,29,"args"],[485,6,358,29,"args"],[485,10,358,35],[486,0,358,35],[488,0,359,2],[488,11,359,9],[488,12,359,10],[488,15,359,13,"_builder"],[488,23,359,21],[488,24,359,22,"default"],[488,31,359,9],[488,48,359,31],[488,66,359,9],[488,75,359,54,"args"],[488,79,359,9],[488,81,359,2],[489,0,360,1],[491,0,362,0],[491,11,362,9,"NewExpression"],[491,24,362,0],[491,27,362,32],[492,0,362,32],[492,40,362,26,"args"],[492,44,362,32],[493,0,362,26,"args"],[493,6,362,26,"args"],[493,10,362,32],[494,0,362,32],[496,0,363,2],[496,11,363,9],[496,12,363,10],[496,15,363,13,"_builder"],[496,23,363,21],[496,24,363,22,"default"],[496,31,363,9],[496,48,363,31],[496,63,363,9],[496,72,363,51,"args"],[496,76,363,9],[496,78,363,2],[497,0,364,1],[499,0,366,0],[499,11,366,9,"Program"],[499,18,366,0],[499,21,366,26],[500,0,366,26],[500,40,366,20,"args"],[500,44,366,26],[501,0,366,20,"args"],[501,6,366,20,"args"],[501,10,366,26],[502,0,366,26],[504,0,367,2],[504,11,367,9],[504,12,367,10],[504,15,367,13,"_builder"],[504,23,367,21],[504,24,367,22,"default"],[504,31,367,9],[504,48,367,31],[504,57,367,9],[504,66,367,45,"args"],[504,70,367,9],[504,72,367,2],[505,0,368,1],[507,0,370,0],[507,11,370,9,"ObjectExpression"],[507,27,370,0],[507,30,370,35],[508,0,370,35],[508,40,370,29,"args"],[508,44,370,35],[509,0,370,29,"args"],[509,6,370,29,"args"],[509,10,370,35],[510,0,370,35],[512,0,371,2],[512,11,371,9],[512,12,371,10],[512,15,371,13,"_builder"],[512,23,371,21],[512,24,371,22,"default"],[512,31,371,9],[512,48,371,31],[512,66,371,9],[512,75,371,54,"args"],[512,79,371,9],[512,81,371,2],[513,0,372,1],[515,0,374,0],[515,11,374,9,"ObjectMethod"],[515,23,374,0],[515,26,374,31],[516,0,374,31],[516,40,374,25,"args"],[516,44,374,31],[517,0,374,25,"args"],[517,6,374,25,"args"],[517,10,374,31],[518,0,374,31],[520,0,375,2],[520,11,375,9],[520,12,375,10],[520,15,375,13,"_builder"],[520,23,375,21],[520,24,375,22,"default"],[520,31,375,9],[520,48,375,31],[520,62,375,9],[520,71,375,50,"args"],[520,75,375,9],[520,77,375,2],[521,0,376,1],[523,0,378,0],[523,11,378,9,"ObjectProperty"],[523,25,378,0],[523,28,378,33],[524,0,378,33],[524,40,378,27,"args"],[524,44,378,33],[525,0,378,27,"args"],[525,6,378,27,"args"],[525,10,378,33],[526,0,378,33],[528,0,379,2],[528,11,379,9],[528,12,379,10],[528,15,379,13,"_builder"],[528,23,379,21],[528,24,379,22,"default"],[528,31,379,9],[528,48,379,31],[528,64,379,9],[528,73,379,52,"args"],[528,77,379,9],[528,79,379,2],[529,0,380,1],[531,0,382,0],[531,11,382,9,"RestElement"],[531,22,382,0],[531,25,382,30],[532,0,382,30],[532,40,382,24,"args"],[532,44,382,30],[533,0,382,24,"args"],[533,6,382,24,"args"],[533,10,382,30],[534,0,382,30],[536,0,383,2],[536,11,383,9],[536,12,383,10],[536,15,383,13,"_builder"],[536,23,383,21],[536,24,383,22,"default"],[536,31,383,9],[536,48,383,31],[536,61,383,9],[536,70,383,49,"args"],[536,74,383,9],[536,76,383,2],[537,0,384,1],[539,0,386,0],[539,11,386,9,"ReturnStatement"],[539,26,386,0],[539,29,386,34],[540,0,386,34],[540,40,386,28,"args"],[540,44,386,34],[541,0,386,28,"args"],[541,6,386,28,"args"],[541,10,386,34],[542,0,386,34],[544,0,387,2],[544,11,387,9],[544,12,387,10],[544,15,387,13,"_builder"],[544,23,387,21],[544,24,387,22,"default"],[544,31,387,9],[544,48,387,31],[544,65,387,9],[544,74,387,53,"args"],[544,78,387,9],[544,80,387,2],[545,0,388,1],[547,0,390,0],[547,11,390,9,"SequenceExpression"],[547,29,390,0],[547,32,390,37],[548,0,390,37],[548,40,390,31,"args"],[548,44,390,37],[549,0,390,31,"args"],[549,6,390,31,"args"],[549,10,390,37],[550,0,390,37],[552,0,391,2],[552,11,391,9],[552,12,391,10],[552,15,391,13,"_builder"],[552,23,391,21],[552,24,391,22,"default"],[552,31,391,9],[552,48,391,31],[552,68,391,9],[552,77,391,56,"args"],[552,81,391,9],[552,83,391,2],[553,0,392,1],[555,0,394,0],[555,11,394,9,"ParenthesizedExpression"],[555,34,394,0],[555,37,394,42],[556,0,394,42],[556,40,394,36,"args"],[556,44,394,42],[557,0,394,36,"args"],[557,6,394,36,"args"],[557,10,394,42],[558,0,394,42],[560,0,395,2],[560,11,395,9],[560,12,395,10],[560,15,395,13,"_builder"],[560,23,395,21],[560,24,395,22,"default"],[560,31,395,9],[560,48,395,31],[560,73,395,9],[560,82,395,61,"args"],[560,86,395,9],[560,88,395,2],[561,0,396,1],[563,0,398,0],[563,11,398,9,"SwitchCase"],[563,21,398,0],[563,24,398,29],[564,0,398,29],[564,40,398,23,"args"],[564,44,398,29],[565,0,398,23,"args"],[565,6,398,23,"args"],[565,10,398,29],[566,0,398,29],[568,0,399,2],[568,11,399,9],[568,12,399,10],[568,15,399,13,"_builder"],[568,23,399,21],[568,24,399,22,"default"],[568,31,399,9],[568,48,399,31],[568,60,399,9],[568,69,399,48,"args"],[568,73,399,9],[568,75,399,2],[569,0,400,1],[571,0,402,0],[571,11,402,9,"SwitchStatement"],[571,26,402,0],[571,29,402,34],[572,0,402,34],[572,40,402,28,"args"],[572,44,402,34],[573,0,402,28,"args"],[573,6,402,28,"args"],[573,10,402,34],[574,0,402,34],[576,0,403,2],[576,11,403,9],[576,12,403,10],[576,15,403,13,"_builder"],[576,23,403,21],[576,24,403,22,"default"],[576,31,403,9],[576,48,403,31],[576,65,403,9],[576,74,403,53,"args"],[576,78,403,9],[576,80,403,2],[577,0,404,1],[579,0,406,0],[579,11,406,9,"ThisExpression"],[579,25,406,0],[579,28,406,33],[580,0,406,33],[580,40,406,27,"args"],[580,44,406,33],[581,0,406,27,"args"],[581,6,406,27,"args"],[581,10,406,33],[582,0,406,33],[584,0,407,2],[584,11,407,9],[584,12,407,10],[584,15,407,13,"_builder"],[584,23,407,21],[584,24,407,22,"default"],[584,31,407,9],[584,48,407,31],[584,64,407,9],[584,73,407,52,"args"],[584,77,407,9],[584,79,407,2],[585,0,408,1],[587,0,410,0],[587,11,410,9,"ThrowStatement"],[587,25,410,0],[587,28,410,33],[588,0,410,33],[588,40,410,27,"args"],[588,44,410,33],[589,0,410,27,"args"],[589,6,410,27,"args"],[589,10,410,33],[590,0,410,33],[592,0,411,2],[592,11,411,9],[592,12,411,10],[592,15,411,13,"_builder"],[592,23,411,21],[592,24,411,22,"default"],[592,31,411,9],[592,48,411,31],[592,64,411,9],[592,73,411,52,"args"],[592,77,411,9],[592,79,411,2],[593,0,412,1],[595,0,414,0],[595,11,414,9,"TryStatement"],[595,23,414,0],[595,26,414,31],[596,0,414,31],[596,40,414,25,"args"],[596,44,414,31],[597,0,414,25,"args"],[597,6,414,25,"args"],[597,10,414,31],[598,0,414,31],[600,0,415,2],[600,11,415,9],[600,12,415,10],[600,15,415,13,"_builder"],[600,23,415,21],[600,24,415,22,"default"],[600,31,415,9],[600,48,415,31],[600,62,415,9],[600,71,415,50,"args"],[600,75,415,9],[600,77,415,2],[601,0,416,1],[603,0,418,0],[603,11,418,9,"UnaryExpression"],[603,26,418,0],[603,29,418,34],[604,0,418,34],[604,40,418,28,"args"],[604,44,418,34],[605,0,418,28,"args"],[605,6,418,28,"args"],[605,10,418,34],[606,0,418,34],[608,0,419,2],[608,11,419,9],[608,12,419,10],[608,15,419,13,"_builder"],[608,23,419,21],[608,24,419,22,"default"],[608,31,419,9],[608,48,419,31],[608,65,419,9],[608,74,419,53,"args"],[608,78,419,9],[608,80,419,2],[609,0,420,1],[611,0,422,0],[611,11,422,9,"UpdateExpression"],[611,27,422,0],[611,30,422,35],[612,0,422,35],[612,40,422,29,"args"],[612,44,422,35],[613,0,422,29,"args"],[613,6,422,29,"args"],[613,10,422,35],[614,0,422,35],[616,0,423,2],[616,11,423,9],[616,12,423,10],[616,15,423,13,"_builder"],[616,23,423,21],[616,24,423,22,"default"],[616,31,423,9],[616,48,423,31],[616,66,423,9],[616,75,423,54,"args"],[616,79,423,9],[616,81,423,2],[617,0,424,1],[619,0,426,0],[619,11,426,9,"VariableDeclaration"],[619,30,426,0],[619,33,426,38],[620,0,426,38],[620,40,426,32,"args"],[620,44,426,38],[621,0,426,32,"args"],[621,6,426,32,"args"],[621,10,426,38],[622,0,426,38],[624,0,427,2],[624,11,427,9],[624,12,427,10],[624,15,427,13,"_builder"],[624,23,427,21],[624,24,427,22,"default"],[624,31,427,9],[624,48,427,31],[624,69,427,9],[624,78,427,57,"args"],[624,82,427,9],[624,84,427,2],[625,0,428,1],[627,0,430,0],[627,11,430,9,"VariableDeclarator"],[627,29,430,0],[627,32,430,37],[628,0,430,37],[628,40,430,31,"args"],[628,44,430,37],[629,0,430,31,"args"],[629,6,430,31,"args"],[629,10,430,37],[630,0,430,37],[632,0,431,2],[632,11,431,9],[632,12,431,10],[632,15,431,13,"_builder"],[632,23,431,21],[632,24,431,22,"default"],[632,31,431,9],[632,48,431,31],[632,68,431,9],[632,77,431,56,"args"],[632,81,431,9],[632,83,431,2],[633,0,432,1],[635,0,434,0],[635,11,434,9,"WhileStatement"],[635,25,434,0],[635,28,434,33],[636,0,434,33],[636,40,434,27,"args"],[636,44,434,33],[637,0,434,27,"args"],[637,6,434,27,"args"],[637,10,434,33],[638,0,434,33],[640,0,435,2],[640,11,435,9],[640,12,435,10],[640,15,435,13,"_builder"],[640,23,435,21],[640,24,435,22,"default"],[640,31,435,9],[640,48,435,31],[640,64,435,9],[640,73,435,52,"args"],[640,77,435,9],[640,79,435,2],[641,0,436,1],[643,0,438,0],[643,11,438,9,"WithStatement"],[643,24,438,0],[643,27,438,32],[644,0,438,32],[644,40,438,26,"args"],[644,44,438,32],[645,0,438,26,"args"],[645,6,438,26,"args"],[645,10,438,32],[646,0,438,32],[648,0,439,2],[648,11,439,9],[648,12,439,10],[648,15,439,13,"_builder"],[648,23,439,21],[648,24,439,22,"default"],[648,31,439,9],[648,48,439,31],[648,63,439,9],[648,72,439,51,"args"],[648,76,439,9],[648,78,439,2],[649,0,440,1],[651,0,442,0],[651,11,442,9,"AssignmentPattern"],[651,28,442,0],[651,31,442,36],[652,0,442,36],[652,40,442,30,"args"],[652,44,442,36],[653,0,442,30,"args"],[653,6,442,30,"args"],[653,10,442,36],[654,0,442,36],[656,0,443,2],[656,11,443,9],[656,12,443,10],[656,15,443,13,"_builder"],[656,23,443,21],[656,24,443,22,"default"],[656,31,443,9],[656,48,443,31],[656,67,443,9],[656,76,443,55,"args"],[656,80,443,9],[656,82,443,2],[657,0,444,1],[659,0,446,0],[659,11,446,9,"ArrayPattern"],[659,23,446,0],[659,26,446,31],[660,0,446,31],[660,40,446,25,"args"],[660,44,446,31],[661,0,446,25,"args"],[661,6,446,25,"args"],[661,10,446,31],[662,0,446,31],[664,0,447,2],[664,11,447,9],[664,12,447,10],[664,15,447,13,"_builder"],[664,23,447,21],[664,24,447,22,"default"],[664,31,447,9],[664,48,447,31],[664,62,447,9],[664,71,447,50,"args"],[664,75,447,9],[664,77,447,2],[665,0,448,1],[667,0,450,0],[667,11,450,9,"ArrowFunctionExpression"],[667,34,450,0],[667,37,450,42],[668,0,450,42],[668,40,450,36,"args"],[668,44,450,42],[669,0,450,36,"args"],[669,6,450,36,"args"],[669,10,450,42],[670,0,450,42],[672,0,451,2],[672,11,451,9],[672,12,451,10],[672,15,451,13,"_builder"],[672,23,451,21],[672,24,451,22,"default"],[672,31,451,9],[672,48,451,31],[672,73,451,9],[672,82,451,61,"args"],[672,86,451,9],[672,88,451,2],[673,0,452,1],[675,0,454,0],[675,11,454,9,"ClassBody"],[675,20,454,0],[675,23,454,28],[676,0,454,28],[676,40,454,22,"args"],[676,44,454,28],[677,0,454,22,"args"],[677,6,454,22,"args"],[677,10,454,28],[678,0,454,28],[680,0,455,2],[680,11,455,9],[680,12,455,10],[680,15,455,13,"_builder"],[680,23,455,21],[680,24,455,22,"default"],[680,31,455,9],[680,48,455,31],[680,59,455,9],[680,68,455,47,"args"],[680,72,455,9],[680,74,455,2],[681,0,456,1],[683,0,458,0],[683,11,458,9,"ClassDeclaration"],[683,27,458,0],[683,30,458,35],[684,0,458,35],[684,40,458,29,"args"],[684,44,458,35],[685,0,458,29,"args"],[685,6,458,29,"args"],[685,10,458,35],[686,0,458,35],[688,0,459,2],[688,11,459,9],[688,12,459,10],[688,15,459,13,"_builder"],[688,23,459,21],[688,24,459,22,"default"],[688,31,459,9],[688,48,459,31],[688,66,459,9],[688,75,459,54,"args"],[688,79,459,9],[688,81,459,2],[689,0,460,1],[691,0,462,0],[691,11,462,9,"ClassExpression"],[691,26,462,0],[691,29,462,34],[692,0,462,34],[692,40,462,28,"args"],[692,44,462,34],[693,0,462,28,"args"],[693,6,462,28,"args"],[693,10,462,34],[694,0,462,34],[696,0,463,2],[696,11,463,9],[696,12,463,10],[696,15,463,13,"_builder"],[696,23,463,21],[696,24,463,22,"default"],[696,31,463,9],[696,48,463,31],[696,65,463,9],[696,74,463,53,"args"],[696,78,463,9],[696,80,463,2],[697,0,464,1],[699,0,466,0],[699,11,466,9,"ExportAllDeclaration"],[699,31,466,0],[699,34,466,39],[700,0,466,39],[700,40,466,33,"args"],[700,44,466,39],[701,0,466,33,"args"],[701,6,466,33,"args"],[701,10,466,39],[702,0,466,39],[704,0,467,2],[704,11,467,9],[704,12,467,10],[704,15,467,13,"_builder"],[704,23,467,21],[704,24,467,22,"default"],[704,31,467,9],[704,48,467,31],[704,70,467,9],[704,79,467,58,"args"],[704,83,467,9],[704,85,467,2],[705,0,468,1],[707,0,470,0],[707,11,470,9,"ExportDefaultDeclaration"],[707,35,470,0],[707,38,470,43],[708,0,470,43],[708,40,470,37,"args"],[708,44,470,43],[709,0,470,37,"args"],[709,6,470,37,"args"],[709,10,470,43],[710,0,470,43],[712,0,471,2],[712,11,471,9],[712,12,471,10],[712,15,471,13,"_builder"],[712,23,471,21],[712,24,471,22,"default"],[712,31,471,9],[712,48,471,31],[712,74,471,9],[712,83,471,62,"args"],[712,87,471,9],[712,89,471,2],[713,0,472,1],[715,0,474,0],[715,11,474,9,"ExportNamedDeclaration"],[715,33,474,0],[715,36,474,41],[716,0,474,41],[716,40,474,35,"args"],[716,44,474,41],[717,0,474,35,"args"],[717,6,474,35,"args"],[717,10,474,41],[718,0,474,41],[720,0,475,2],[720,11,475,9],[720,12,475,10],[720,15,475,13,"_builder"],[720,23,475,21],[720,24,475,22,"default"],[720,31,475,9],[720,48,475,31],[720,72,475,9],[720,81,475,60,"args"],[720,85,475,9],[720,87,475,2],[721,0,476,1],[723,0,478,0],[723,11,478,9,"ExportSpecifier"],[723,26,478,0],[723,29,478,34],[724,0,478,34],[724,40,478,28,"args"],[724,44,478,34],[725,0,478,28,"args"],[725,6,478,28,"args"],[725,10,478,34],[726,0,478,34],[728,0,479,2],[728,11,479,9],[728,12,479,10],[728,15,479,13,"_builder"],[728,23,479,21],[728,24,479,22,"default"],[728,31,479,9],[728,48,479,31],[728,65,479,9],[728,74,479,53,"args"],[728,78,479,9],[728,80,479,2],[729,0,480,1],[731,0,482,0],[731,11,482,9,"ForOfStatement"],[731,25,482,0],[731,28,482,33],[732,0,482,33],[732,40,482,27,"args"],[732,44,482,33],[733,0,482,27,"args"],[733,6,482,27,"args"],[733,10,482,33],[734,0,482,33],[736,0,483,2],[736,11,483,9],[736,12,483,10],[736,15,483,13,"_builder"],[736,23,483,21],[736,24,483,22,"default"],[736,31,483,9],[736,48,483,31],[736,64,483,9],[736,73,483,52,"args"],[736,77,483,9],[736,79,483,2],[737,0,484,1],[739,0,486,0],[739,11,486,9,"ImportDeclaration"],[739,28,486,0],[739,31,486,36],[740,0,486,36],[740,40,486,30,"args"],[740,44,486,36],[741,0,486,30,"args"],[741,6,486,30,"args"],[741,10,486,36],[742,0,486,36],[744,0,487,2],[744,11,487,9],[744,12,487,10],[744,15,487,13,"_builder"],[744,23,487,21],[744,24,487,22,"default"],[744,31,487,9],[744,48,487,31],[744,67,487,9],[744,76,487,55,"args"],[744,80,487,9],[744,82,487,2],[745,0,488,1],[747,0,490,0],[747,11,490,9,"ImportDefaultSpecifier"],[747,33,490,0],[747,36,490,41],[748,0,490,41],[748,40,490,35,"args"],[748,44,490,41],[749,0,490,35,"args"],[749,6,490,35,"args"],[749,10,490,41],[750,0,490,41],[752,0,491,2],[752,11,491,9],[752,12,491,10],[752,15,491,13,"_builder"],[752,23,491,21],[752,24,491,22,"default"],[752,31,491,9],[752,48,491,31],[752,72,491,9],[752,81,491,60,"args"],[752,85,491,9],[752,87,491,2],[753,0,492,1],[755,0,494,0],[755,11,494,9,"ImportNamespaceSpecifier"],[755,35,494,0],[755,38,494,43],[756,0,494,43],[756,40,494,37,"args"],[756,44,494,43],[757,0,494,37,"args"],[757,6,494,37,"args"],[757,10,494,43],[758,0,494,43],[760,0,495,2],[760,11,495,9],[760,12,495,10],[760,15,495,13,"_builder"],[760,23,495,21],[760,24,495,22,"default"],[760,31,495,9],[760,48,495,31],[760,74,495,9],[760,83,495,62,"args"],[760,87,495,9],[760,89,495,2],[761,0,496,1],[763,0,498,0],[763,11,498,9,"ImportSpecifier"],[763,26,498,0],[763,29,498,34],[764,0,498,34],[764,40,498,28,"args"],[764,44,498,34],[765,0,498,28,"args"],[765,6,498,28,"args"],[765,10,498,34],[766,0,498,34],[768,0,499,2],[768,11,499,9],[768,12,499,10],[768,15,499,13,"_builder"],[768,23,499,21],[768,24,499,22,"default"],[768,31,499,9],[768,48,499,31],[768,65,499,9],[768,74,499,53,"args"],[768,78,499,9],[768,80,499,2],[769,0,500,1],[771,0,502,0],[771,11,502,9,"MetaProperty"],[771,23,502,0],[771,26,502,31],[772,0,502,31],[772,40,502,25,"args"],[772,44,502,31],[773,0,502,25,"args"],[773,6,502,25,"args"],[773,10,502,31],[774,0,502,31],[776,0,503,2],[776,11,503,9],[776,12,503,10],[776,15,503,13,"_builder"],[776,23,503,21],[776,24,503,22,"default"],[776,31,503,9],[776,48,503,31],[776,62,503,9],[776,71,503,50,"args"],[776,75,503,9],[776,77,503,2],[777,0,504,1],[779,0,506,0],[779,11,506,9,"ClassMethod"],[779,22,506,0],[779,25,506,30],[780,0,506,30],[780,40,506,24,"args"],[780,44,506,30],[781,0,506,24,"args"],[781,6,506,24,"args"],[781,10,506,30],[782,0,506,30],[784,0,507,2],[784,11,507,9],[784,12,507,10],[784,15,507,13,"_builder"],[784,23,507,21],[784,24,507,22,"default"],[784,31,507,9],[784,48,507,31],[784,61,507,9],[784,70,507,49,"args"],[784,74,507,9],[784,76,507,2],[785,0,508,1],[787,0,510,0],[787,11,510,9,"ObjectPattern"],[787,24,510,0],[787,27,510,32],[788,0,510,32],[788,40,510,26,"args"],[788,44,510,32],[789,0,510,26,"args"],[789,6,510,26,"args"],[789,10,510,32],[790,0,510,32],[792,0,511,2],[792,11,511,9],[792,12,511,10],[792,15,511,13,"_builder"],[792,23,511,21],[792,24,511,22,"default"],[792,31,511,9],[792,48,511,31],[792,63,511,9],[792,72,511,51,"args"],[792,76,511,9],[792,78,511,2],[793,0,512,1],[795,0,514,0],[795,11,514,9,"SpreadElement"],[795,24,514,0],[795,27,514,32],[796,0,514,32],[796,40,514,26,"args"],[796,44,514,32],[797,0,514,26,"args"],[797,6,514,26,"args"],[797,10,514,32],[798,0,514,32],[800,0,515,2],[800,11,515,9],[800,12,515,10],[800,15,515,13,"_builder"],[800,23,515,21],[800,24,515,22,"default"],[800,31,515,9],[800,48,515,31],[800,63,515,9],[800,72,515,51,"args"],[800,76,515,9],[800,78,515,2],[801,0,516,1],[803,0,518,0],[803,11,518,9,"Super"],[803,16,518,0],[803,19,518,24],[804,0,518,24],[804,40,518,18,"args"],[804,44,518,24],[805,0,518,18,"args"],[805,6,518,18,"args"],[805,10,518,24],[806,0,518,24],[808,0,519,2],[808,11,519,9],[808,12,519,10],[808,15,519,13,"_builder"],[808,23,519,21],[808,24,519,22,"default"],[808,31,519,9],[808,48,519,31],[808,55,519,9],[808,64,519,43,"args"],[808,68,519,9],[808,70,519,2],[809,0,520,1],[811,0,522,0],[811,11,522,9,"TaggedTemplateExpression"],[811,35,522,0],[811,38,522,43],[812,0,522,43],[812,40,522,37,"args"],[812,44,522,43],[813,0,522,37,"args"],[813,6,522,37,"args"],[813,10,522,43],[814,0,522,43],[816,0,523,2],[816,11,523,9],[816,12,523,10],[816,15,523,13,"_builder"],[816,23,523,21],[816,24,523,22,"default"],[816,31,523,9],[816,48,523,31],[816,74,523,9],[816,83,523,62,"args"],[816,87,523,9],[816,89,523,2],[817,0,524,1],[819,0,526,0],[819,11,526,9,"TemplateElement"],[819,26,526,0],[819,29,526,34],[820,0,526,34],[820,40,526,28,"args"],[820,44,526,34],[821,0,526,28,"args"],[821,6,526,28,"args"],[821,10,526,34],[822,0,526,34],[824,0,527,2],[824,11,527,9],[824,12,527,10],[824,15,527,13,"_builder"],[824,23,527,21],[824,24,527,22,"default"],[824,31,527,9],[824,48,527,31],[824,65,527,9],[824,74,527,53,"args"],[824,78,527,9],[824,80,527,2],[825,0,528,1],[827,0,530,0],[827,11,530,9,"TemplateLiteral"],[827,26,530,0],[827,29,530,34],[828,0,530,34],[828,40,530,28,"args"],[828,44,530,34],[829,0,530,28,"args"],[829,6,530,28,"args"],[829,10,530,34],[830,0,530,34],[832,0,531,2],[832,11,531,9],[832,12,531,10],[832,15,531,13,"_builder"],[832,23,531,21],[832,24,531,22,"default"],[832,31,531,9],[832,48,531,31],[832,65,531,9],[832,74,531,53,"args"],[832,78,531,9],[832,80,531,2],[833,0,532,1],[835,0,534,0],[835,11,534,9,"YieldExpression"],[835,26,534,0],[835,29,534,34],[836,0,534,34],[836,40,534,28,"args"],[836,44,534,34],[837,0,534,28,"args"],[837,6,534,28,"args"],[837,10,534,34],[838,0,534,34],[840,0,535,2],[840,11,535,9],[840,12,535,10],[840,15,535,13,"_builder"],[840,23,535,21],[840,24,535,22,"default"],[840,31,535,9],[840,48,535,31],[840,65,535,9],[840,74,535,53,"args"],[840,78,535,9],[840,80,535,2],[841,0,536,1],[843,0,538,0],[843,11,538,9,"AnyTypeAnnotation"],[843,28,538,0],[843,31,538,36],[844,0,538,36],[844,40,538,30,"args"],[844,44,538,36],[845,0,538,30,"args"],[845,6,538,30,"args"],[845,10,538,36],[846,0,538,36],[848,0,539,2],[848,11,539,9],[848,12,539,10],[848,15,539,13,"_builder"],[848,23,539,21],[848,24,539,22,"default"],[848,31,539,9],[848,48,539,31],[848,67,539,9],[848,76,539,55,"args"],[848,80,539,9],[848,82,539,2],[849,0,540,1],[851,0,542,0],[851,11,542,9,"ArrayTypeAnnotation"],[851,30,542,0],[851,33,542,38],[852,0,542,38],[852,40,542,32,"args"],[852,44,542,38],[853,0,542,32,"args"],[853,6,542,32,"args"],[853,10,542,38],[854,0,542,38],[856,0,543,2],[856,11,543,9],[856,12,543,10],[856,15,543,13,"_builder"],[856,23,543,21],[856,24,543,22,"default"],[856,31,543,9],[856,48,543,31],[856,69,543,9],[856,78,543,57,"args"],[856,82,543,9],[856,84,543,2],[857,0,544,1],[859,0,546,0],[859,11,546,9,"BooleanTypeAnnotation"],[859,32,546,0],[859,35,546,40],[860,0,546,40],[860,40,546,34,"args"],[860,44,546,40],[861,0,546,34,"args"],[861,6,546,34,"args"],[861,10,546,40],[862,0,546,40],[864,0,547,2],[864,11,547,9],[864,12,547,10],[864,15,547,13,"_builder"],[864,23,547,21],[864,24,547,22,"default"],[864,31,547,9],[864,48,547,31],[864,71,547,9],[864,80,547,59,"args"],[864,84,547,9],[864,86,547,2],[865,0,548,1],[867,0,550,0],[867,11,550,9,"BooleanLiteralTypeAnnotation"],[867,39,550,0],[867,42,550,47],[868,0,550,47],[868,40,550,41,"args"],[868,44,550,47],[869,0,550,41,"args"],[869,6,550,41,"args"],[869,10,550,47],[870,0,550,47],[872,0,551,2],[872,11,551,9],[872,12,551,10],[872,15,551,13,"_builder"],[872,23,551,21],[872,24,551,22,"default"],[872,31,551,9],[872,48,551,31],[872,78,551,9],[872,87,551,66,"args"],[872,91,551,9],[872,93,551,2],[873,0,552,1],[875,0,554,0],[875,11,554,9,"NullLiteralTypeAnnotation"],[875,36,554,0],[875,39,554,44],[876,0,554,44],[876,40,554,38,"args"],[876,44,554,44],[877,0,554,38,"args"],[877,6,554,38,"args"],[877,10,554,44],[878,0,554,44],[880,0,555,2],[880,11,555,9],[880,12,555,10],[880,15,555,13,"_builder"],[880,23,555,21],[880,24,555,22,"default"],[880,31,555,9],[880,48,555,31],[880,75,555,9],[880,84,555,63,"args"],[880,88,555,9],[880,90,555,2],[881,0,556,1],[883,0,558,0],[883,11,558,9,"ClassImplements"],[883,26,558,0],[883,29,558,34],[884,0,558,34],[884,40,558,28,"args"],[884,44,558,34],[885,0,558,28,"args"],[885,6,558,28,"args"],[885,10,558,34],[886,0,558,34],[888,0,559,2],[888,11,559,9],[888,12,559,10],[888,15,559,13,"_builder"],[888,23,559,21],[888,24,559,22,"default"],[888,31,559,9],[888,48,559,31],[888,65,559,9],[888,74,559,53,"args"],[888,78,559,9],[888,80,559,2],[889,0,560,1],[891,0,562,0],[891,11,562,9,"DeclareClass"],[891,23,562,0],[891,26,562,31],[892,0,562,31],[892,40,562,25,"args"],[892,44,562,31],[893,0,562,25,"args"],[893,6,562,25,"args"],[893,10,562,31],[894,0,562,31],[896,0,563,2],[896,11,563,9],[896,12,563,10],[896,15,563,13,"_builder"],[896,23,563,21],[896,24,563,22,"default"],[896,31,563,9],[896,48,563,31],[896,62,563,9],[896,71,563,50,"args"],[896,75,563,9],[896,77,563,2],[897,0,564,1],[899,0,566,0],[899,11,566,9,"DeclareFunction"],[899,26,566,0],[899,29,566,34],[900,0,566,34],[900,40,566,28,"args"],[900,44,566,34],[901,0,566,28,"args"],[901,6,566,28,"args"],[901,10,566,34],[902,0,566,34],[904,0,567,2],[904,11,567,9],[904,12,567,10],[904,15,567,13,"_builder"],[904,23,567,21],[904,24,567,22,"default"],[904,31,567,9],[904,48,567,31],[904,65,567,9],[904,74,567,53,"args"],[904,78,567,9],[904,80,567,2],[905,0,568,1],[907,0,570,0],[907,11,570,9,"DeclareInterface"],[907,27,570,0],[907,30,570,35],[908,0,570,35],[908,40,570,29,"args"],[908,44,570,35],[909,0,570,29,"args"],[909,6,570,29,"args"],[909,10,570,35],[910,0,570,35],[912,0,571,2],[912,11,571,9],[912,12,571,10],[912,15,571,13,"_builder"],[912,23,571,21],[912,24,571,22,"default"],[912,31,571,9],[912,48,571,31],[912,66,571,9],[912,75,571,54,"args"],[912,79,571,9],[912,81,571,2],[913,0,572,1],[915,0,574,0],[915,11,574,9,"DeclareModule"],[915,24,574,0],[915,27,574,32],[916,0,574,32],[916,40,574,26,"args"],[916,44,574,32],[917,0,574,26,"args"],[917,6,574,26,"args"],[917,10,574,32],[918,0,574,32],[920,0,575,2],[920,11,575,9],[920,12,575,10],[920,15,575,13,"_builder"],[920,23,575,21],[920,24,575,22,"default"],[920,31,575,9],[920,48,575,31],[920,63,575,9],[920,72,575,51,"args"],[920,76,575,9],[920,78,575,2],[921,0,576,1],[923,0,578,0],[923,11,578,9,"DeclareModuleExports"],[923,31,578,0],[923,34,578,39],[924,0,578,39],[924,40,578,33,"args"],[924,44,578,39],[925,0,578,33,"args"],[925,6,578,33,"args"],[925,10,578,39],[926,0,578,39],[928,0,579,2],[928,11,579,9],[928,12,579,10],[928,15,579,13,"_builder"],[928,23,579,21],[928,24,579,22,"default"],[928,31,579,9],[928,48,579,31],[928,70,579,9],[928,79,579,58,"args"],[928,83,579,9],[928,85,579,2],[929,0,580,1],[931,0,582,0],[931,11,582,9,"DeclareTypeAlias"],[931,27,582,0],[931,30,582,35],[932,0,582,35],[932,40,582,29,"args"],[932,44,582,35],[933,0,582,29,"args"],[933,6,582,29,"args"],[933,10,582,35],[934,0,582,35],[936,0,583,2],[936,11,583,9],[936,12,583,10],[936,15,583,13,"_builder"],[936,23,583,21],[936,24,583,22,"default"],[936,31,583,9],[936,48,583,31],[936,66,583,9],[936,75,583,54,"args"],[936,79,583,9],[936,81,583,2],[937,0,584,1],[939,0,586,0],[939,11,586,9,"DeclareOpaqueType"],[939,28,586,0],[939,31,586,36],[940,0,586,36],[940,40,586,30,"args"],[940,44,586,36],[941,0,586,30,"args"],[941,6,586,30,"args"],[941,10,586,36],[942,0,586,36],[944,0,587,2],[944,11,587,9],[944,12,587,10],[944,15,587,13,"_builder"],[944,23,587,21],[944,24,587,22,"default"],[944,31,587,9],[944,48,587,31],[944,67,587,9],[944,76,587,55,"args"],[944,80,587,9],[944,82,587,2],[945,0,588,1],[947,0,590,0],[947,11,590,9,"DeclareVariable"],[947,26,590,0],[947,29,590,34],[948,0,590,34],[948,40,590,28,"args"],[948,44,590,34],[949,0,590,28,"args"],[949,6,590,28,"args"],[949,10,590,34],[950,0,590,34],[952,0,591,2],[952,11,591,9],[952,12,591,10],[952,15,591,13,"_builder"],[952,23,591,21],[952,24,591,22,"default"],[952,31,591,9],[952,48,591,31],[952,65,591,9],[952,74,591,53,"args"],[952,78,591,9],[952,80,591,2],[953,0,592,1],[955,0,594,0],[955,11,594,9,"DeclareExportDeclaration"],[955,35,594,0],[955,38,594,43],[956,0,594,43],[956,40,594,37,"args"],[956,44,594,43],[957,0,594,37,"args"],[957,6,594,37,"args"],[957,10,594,43],[958,0,594,43],[960,0,595,2],[960,11,595,9],[960,12,595,10],[960,15,595,13,"_builder"],[960,23,595,21],[960,24,595,22,"default"],[960,31,595,9],[960,48,595,31],[960,74,595,9],[960,83,595,62,"args"],[960,87,595,9],[960,89,595,2],[961,0,596,1],[963,0,598,0],[963,11,598,9,"DeclareExportAllDeclaration"],[963,38,598,0],[963,41,598,46],[964,0,598,46],[964,40,598,40,"args"],[964,44,598,46],[965,0,598,40,"args"],[965,6,598,40,"args"],[965,10,598,46],[966,0,598,46],[968,0,599,2],[968,11,599,9],[968,12,599,10],[968,15,599,13,"_builder"],[968,23,599,21],[968,24,599,22,"default"],[968,31,599,9],[968,48,599,31],[968,77,599,9],[968,86,599,65,"args"],[968,90,599,9],[968,92,599,2],[969,0,600,1],[971,0,602,0],[971,11,602,9,"DeclaredPredicate"],[971,28,602,0],[971,31,602,36],[972,0,602,36],[972,40,602,30,"args"],[972,44,602,36],[973,0,602,30,"args"],[973,6,602,30,"args"],[973,10,602,36],[974,0,602,36],[976,0,603,2],[976,11,603,9],[976,12,603,10],[976,15,603,13,"_builder"],[976,23,603,21],[976,24,603,22,"default"],[976,31,603,9],[976,48,603,31],[976,67,603,9],[976,76,603,55,"args"],[976,80,603,9],[976,82,603,2],[977,0,604,1],[979,0,606,0],[979,11,606,9,"ExistsTypeAnnotation"],[979,31,606,0],[979,34,606,39],[980,0,606,39],[980,40,606,33,"args"],[980,44,606,39],[981,0,606,33,"args"],[981,6,606,33,"args"],[981,10,606,39],[982,0,606,39],[984,0,607,2],[984,11,607,9],[984,12,607,10],[984,15,607,13,"_builder"],[984,23,607,21],[984,24,607,22,"default"],[984,31,607,9],[984,48,607,31],[984,70,607,9],[984,79,607,58,"args"],[984,83,607,9],[984,85,607,2],[985,0,608,1],[987,0,610,0],[987,11,610,9,"FunctionTypeAnnotation"],[987,33,610,0],[987,36,610,41],[988,0,610,41],[988,40,610,35,"args"],[988,44,610,41],[989,0,610,35,"args"],[989,6,610,35,"args"],[989,10,610,41],[990,0,610,41],[992,0,611,2],[992,11,611,9],[992,12,611,10],[992,15,611,13,"_builder"],[992,23,611,21],[992,24,611,22,"default"],[992,31,611,9],[992,48,611,31],[992,72,611,9],[992,81,611,60,"args"],[992,85,611,9],[992,87,611,2],[993,0,612,1],[995,0,614,0],[995,11,614,9,"FunctionTypeParam"],[995,28,614,0],[995,31,614,36],[996,0,614,36],[996,40,614,30,"args"],[996,44,614,36],[997,0,614,30,"args"],[997,6,614,30,"args"],[997,10,614,36],[998,0,614,36],[1000,0,615,2],[1000,11,615,9],[1000,12,615,10],[1000,15,615,13,"_builder"],[1000,23,615,21],[1000,24,615,22,"default"],[1000,31,615,9],[1000,48,615,31],[1000,67,615,9],[1000,76,615,55,"args"],[1000,80,615,9],[1000,82,615,2],[1001,0,616,1],[1003,0,618,0],[1003,11,618,9,"GenericTypeAnnotation"],[1003,32,618,0],[1003,35,618,40],[1004,0,618,40],[1004,40,618,34,"args"],[1004,44,618,40],[1005,0,618,34,"args"],[1005,6,618,34,"args"],[1005,10,618,40],[1006,0,618,40],[1008,0,619,2],[1008,11,619,9],[1008,12,619,10],[1008,15,619,13,"_builder"],[1008,23,619,21],[1008,24,619,22,"default"],[1008,31,619,9],[1008,48,619,31],[1008,71,619,9],[1008,80,619,59,"args"],[1008,84,619,9],[1008,86,619,2],[1009,0,620,1],[1011,0,622,0],[1011,11,622,9,"InferredPredicate"],[1011,28,622,0],[1011,31,622,36],[1012,0,622,36],[1012,40,622,30,"args"],[1012,44,622,36],[1013,0,622,30,"args"],[1013,6,622,30,"args"],[1013,10,622,36],[1014,0,622,36],[1016,0,623,2],[1016,11,623,9],[1016,12,623,10],[1016,15,623,13,"_builder"],[1016,23,623,21],[1016,24,623,22,"default"],[1016,31,623,9],[1016,48,623,31],[1016,67,623,9],[1016,76,623,55,"args"],[1016,80,623,9],[1016,82,623,2],[1017,0,624,1],[1019,0,626,0],[1019,11,626,9,"InterfaceExtends"],[1019,27,626,0],[1019,30,626,35],[1020,0,626,35],[1020,40,626,29,"args"],[1020,44,626,35],[1021,0,626,29,"args"],[1021,6,626,29,"args"],[1021,10,626,35],[1022,0,626,35],[1024,0,627,2],[1024,11,627,9],[1024,12,627,10],[1024,15,627,13,"_builder"],[1024,23,627,21],[1024,24,627,22,"default"],[1024,31,627,9],[1024,48,627,31],[1024,66,627,9],[1024,75,627,54,"args"],[1024,79,627,9],[1024,81,627,2],[1025,0,628,1],[1027,0,630,0],[1027,11,630,9,"InterfaceDeclaration"],[1027,31,630,0],[1027,34,630,39],[1028,0,630,39],[1028,40,630,33,"args"],[1028,44,630,39],[1029,0,630,33,"args"],[1029,6,630,33,"args"],[1029,10,630,39],[1030,0,630,39],[1032,0,631,2],[1032,11,631,9],[1032,12,631,10],[1032,15,631,13,"_builder"],[1032,23,631,21],[1032,24,631,22,"default"],[1032,31,631,9],[1032,48,631,31],[1032,70,631,9],[1032,79,631,58,"args"],[1032,83,631,9],[1032,85,631,2],[1033,0,632,1],[1035,0,634,0],[1035,11,634,9,"InterfaceTypeAnnotation"],[1035,34,634,0],[1035,37,634,42],[1036,0,634,42],[1036,41,634,36,"args"],[1036,45,634,42],[1037,0,634,36,"args"],[1037,6,634,36,"args"],[1037,10,634,42],[1038,0,634,42],[1040,0,635,2],[1040,11,635,9],[1040,12,635,10],[1040,15,635,13,"_builder"],[1040,23,635,21],[1040,24,635,22,"default"],[1040,31,635,9],[1040,48,635,31],[1040,73,635,9],[1040,82,635,61,"args"],[1040,86,635,9],[1040,88,635,2],[1041,0,636,1],[1043,0,638,0],[1043,11,638,9,"IntersectionTypeAnnotation"],[1043,37,638,0],[1043,40,638,45],[1044,0,638,45],[1044,41,638,39,"args"],[1044,45,638,45],[1045,0,638,39,"args"],[1045,6,638,39,"args"],[1045,10,638,45],[1046,0,638,45],[1048,0,639,2],[1048,11,639,9],[1048,12,639,10],[1048,15,639,13,"_builder"],[1048,23,639,21],[1048,24,639,22,"default"],[1048,31,639,9],[1048,48,639,31],[1048,76,639,9],[1048,85,639,64,"args"],[1048,89,639,9],[1048,91,639,2],[1049,0,640,1],[1051,0,642,0],[1051,11,642,9,"MixedTypeAnnotation"],[1051,30,642,0],[1051,33,642,38],[1052,0,642,38],[1052,41,642,32,"args"],[1052,45,642,38],[1053,0,642,32,"args"],[1053,6,642,32,"args"],[1053,10,642,38],[1054,0,642,38],[1056,0,643,2],[1056,11,643,9],[1056,12,643,10],[1056,15,643,13,"_builder"],[1056,23,643,21],[1056,24,643,22,"default"],[1056,31,643,9],[1056,48,643,31],[1056,69,643,9],[1056,78,643,57,"args"],[1056,82,643,9],[1056,84,643,2],[1057,0,644,1],[1059,0,646,0],[1059,11,646,9,"EmptyTypeAnnotation"],[1059,30,646,0],[1059,33,646,38],[1060,0,646,38],[1060,41,646,32,"args"],[1060,45,646,38],[1061,0,646,32,"args"],[1061,6,646,32,"args"],[1061,10,646,38],[1062,0,646,38],[1064,0,647,2],[1064,11,647,9],[1064,12,647,10],[1064,15,647,13,"_builder"],[1064,23,647,21],[1064,24,647,22,"default"],[1064,31,647,9],[1064,48,647,31],[1064,69,647,9],[1064,78,647,57,"args"],[1064,82,647,9],[1064,84,647,2],[1065,0,648,1],[1067,0,650,0],[1067,11,650,9,"NullableTypeAnnotation"],[1067,33,650,0],[1067,36,650,41],[1068,0,650,41],[1068,41,650,35,"args"],[1068,45,650,41],[1069,0,650,35,"args"],[1069,6,650,35,"args"],[1069,10,650,41],[1070,0,650,41],[1072,0,651,2],[1072,11,651,9],[1072,12,651,10],[1072,15,651,13,"_builder"],[1072,23,651,21],[1072,24,651,22,"default"],[1072,31,651,9],[1072,48,651,31],[1072,72,651,9],[1072,81,651,60,"args"],[1072,85,651,9],[1072,87,651,2],[1073,0,652,1],[1075,0,654,0],[1075,11,654,9,"NumberLiteralTypeAnnotation"],[1075,38,654,0],[1075,41,654,46],[1076,0,654,46],[1076,41,654,40,"args"],[1076,45,654,46],[1077,0,654,40,"args"],[1077,6,654,40,"args"],[1077,10,654,46],[1078,0,654,46],[1080,0,655,2],[1080,11,655,9],[1080,12,655,10],[1080,15,655,13,"_builder"],[1080,23,655,21],[1080,24,655,22,"default"],[1080,31,655,9],[1080,48,655,31],[1080,77,655,9],[1080,86,655,65,"args"],[1080,90,655,9],[1080,92,655,2],[1081,0,656,1],[1083,0,658,0],[1083,11,658,9,"NumberTypeAnnotation"],[1083,31,658,0],[1083,34,658,39],[1084,0,658,39],[1084,41,658,33,"args"],[1084,45,658,39],[1085,0,658,33,"args"],[1085,6,658,33,"args"],[1085,10,658,39],[1086,0,658,39],[1088,0,659,2],[1088,11,659,9],[1088,12,659,10],[1088,15,659,13,"_builder"],[1088,23,659,21],[1088,24,659,22,"default"],[1088,31,659,9],[1088,48,659,31],[1088,70,659,9],[1088,79,659,58,"args"],[1088,83,659,9],[1088,85,659,2],[1089,0,660,1],[1091,0,662,0],[1091,11,662,9,"ObjectTypeAnnotation"],[1091,31,662,0],[1091,34,662,39],[1092,0,662,39],[1092,41,662,33,"args"],[1092,45,662,39],[1093,0,662,33,"args"],[1093,6,662,33,"args"],[1093,10,662,39],[1094,0,662,39],[1096,0,663,2],[1096,11,663,9],[1096,12,663,10],[1096,15,663,13,"_builder"],[1096,23,663,21],[1096,24,663,22,"default"],[1096,31,663,9],[1096,48,663,31],[1096,70,663,9],[1096,79,663,58,"args"],[1096,83,663,9],[1096,85,663,2],[1097,0,664,1],[1099,0,666,0],[1099,11,666,9,"ObjectTypeInternalSlot"],[1099,33,666,0],[1099,36,666,41],[1100,0,666,41],[1100,41,666,35,"args"],[1100,45,666,41],[1101,0,666,35,"args"],[1101,6,666,35,"args"],[1101,10,666,41],[1102,0,666,41],[1104,0,667,2],[1104,11,667,9],[1104,12,667,10],[1104,15,667,13,"_builder"],[1104,23,667,21],[1104,24,667,22,"default"],[1104,31,667,9],[1104,48,667,31],[1104,72,667,9],[1104,81,667,60,"args"],[1104,85,667,9],[1104,87,667,2],[1105,0,668,1],[1107,0,670,0],[1107,11,670,9,"ObjectTypeCallProperty"],[1107,33,670,0],[1107,36,670,41],[1108,0,670,41],[1108,41,670,35,"args"],[1108,45,670,41],[1109,0,670,35,"args"],[1109,6,670,35,"args"],[1109,10,670,41],[1110,0,670,41],[1112,0,671,2],[1112,11,671,9],[1112,12,671,10],[1112,15,671,13,"_builder"],[1112,23,671,21],[1112,24,671,22,"default"],[1112,31,671,9],[1112,48,671,31],[1112,72,671,9],[1112,81,671,60,"args"],[1112,85,671,9],[1112,87,671,2],[1113,0,672,1],[1115,0,674,0],[1115,11,674,9,"ObjectTypeIndexer"],[1115,28,674,0],[1115,31,674,36],[1116,0,674,36],[1116,41,674,30,"args"],[1116,45,674,36],[1117,0,674,30,"args"],[1117,6,674,30,"args"],[1117,10,674,36],[1118,0,674,36],[1120,0,675,2],[1120,11,675,9],[1120,12,675,10],[1120,15,675,13,"_builder"],[1120,23,675,21],[1120,24,675,22,"default"],[1120,31,675,9],[1120,48,675,31],[1120,67,675,9],[1120,76,675,55,"args"],[1120,80,675,9],[1120,82,675,2],[1121,0,676,1],[1123,0,678,0],[1123,11,678,9,"ObjectTypeProperty"],[1123,29,678,0],[1123,32,678,37],[1124,0,678,37],[1124,41,678,31,"args"],[1124,45,678,37],[1125,0,678,31,"args"],[1125,6,678,31,"args"],[1125,10,678,37],[1126,0,678,37],[1128,0,679,2],[1128,11,679,9],[1128,12,679,10],[1128,15,679,13,"_builder"],[1128,23,679,21],[1128,24,679,22,"default"],[1128,31,679,9],[1128,48,679,31],[1128,68,679,9],[1128,77,679,56,"args"],[1128,81,679,9],[1128,83,679,2],[1129,0,680,1],[1131,0,682,0],[1131,11,682,9,"ObjectTypeSpreadProperty"],[1131,35,682,0],[1131,38,682,43],[1132,0,682,43],[1132,41,682,37,"args"],[1132,45,682,43],[1133,0,682,37,"args"],[1133,6,682,37,"args"],[1133,10,682,43],[1134,0,682,43],[1136,0,683,2],[1136,11,683,9],[1136,12,683,10],[1136,15,683,13,"_builder"],[1136,23,683,21],[1136,24,683,22,"default"],[1136,31,683,9],[1136,48,683,31],[1136,74,683,9],[1136,83,683,62,"args"],[1136,87,683,9],[1136,89,683,2],[1137,0,684,1],[1139,0,686,0],[1139,11,686,9,"OpaqueType"],[1139,21,686,0],[1139,24,686,29],[1140,0,686,29],[1140,41,686,23,"args"],[1140,45,686,29],[1141,0,686,23,"args"],[1141,6,686,23,"args"],[1141,10,686,29],[1142,0,686,29],[1144,0,687,2],[1144,11,687,9],[1144,12,687,10],[1144,15,687,13,"_builder"],[1144,23,687,21],[1144,24,687,22,"default"],[1144,31,687,9],[1144,48,687,31],[1144,60,687,9],[1144,69,687,48,"args"],[1144,73,687,9],[1144,75,687,2],[1145,0,688,1],[1147,0,690,0],[1147,11,690,9,"QualifiedTypeIdentifier"],[1147,34,690,0],[1147,37,690,42],[1148,0,690,42],[1148,41,690,36,"args"],[1148,45,690,42],[1149,0,690,36,"args"],[1149,6,690,36,"args"],[1149,10,690,42],[1150,0,690,42],[1152,0,691,2],[1152,11,691,9],[1152,12,691,10],[1152,15,691,13,"_builder"],[1152,23,691,21],[1152,24,691,22,"default"],[1152,31,691,9],[1152,48,691,31],[1152,73,691,9],[1152,82,691,61,"args"],[1152,86,691,9],[1152,88,691,2],[1153,0,692,1],[1155,0,694,0],[1155,11,694,9,"StringLiteralTypeAnnotation"],[1155,38,694,0],[1155,41,694,46],[1156,0,694,46],[1156,41,694,40,"args"],[1156,45,694,46],[1157,0,694,40,"args"],[1157,6,694,40,"args"],[1157,10,694,46],[1158,0,694,46],[1160,0,695,2],[1160,11,695,9],[1160,12,695,10],[1160,15,695,13,"_builder"],[1160,23,695,21],[1160,24,695,22,"default"],[1160,31,695,9],[1160,48,695,31],[1160,77,695,9],[1160,86,695,65,"args"],[1160,90,695,9],[1160,92,695,2],[1161,0,696,1],[1163,0,698,0],[1163,11,698,9,"StringTypeAnnotation"],[1163,31,698,0],[1163,34,698,39],[1164,0,698,39],[1164,41,698,33,"args"],[1164,45,698,39],[1165,0,698,33,"args"],[1165,6,698,33,"args"],[1165,10,698,39],[1166,0,698,39],[1168,0,699,2],[1168,11,699,9],[1168,12,699,10],[1168,15,699,13,"_builder"],[1168,23,699,21],[1168,24,699,22,"default"],[1168,31,699,9],[1168,48,699,31],[1168,70,699,9],[1168,79,699,58,"args"],[1168,83,699,9],[1168,85,699,2],[1169,0,700,1],[1171,0,702,0],[1171,11,702,9,"ThisTypeAnnotation"],[1171,29,702,0],[1171,32,702,37],[1172,0,702,37],[1172,41,702,31,"args"],[1172,45,702,37],[1173,0,702,31,"args"],[1173,6,702,31,"args"],[1173,10,702,37],[1174,0,702,37],[1176,0,703,2],[1176,11,703,9],[1176,12,703,10],[1176,15,703,13,"_builder"],[1176,23,703,21],[1176,24,703,22,"default"],[1176,31,703,9],[1176,48,703,31],[1176,68,703,9],[1176,77,703,56,"args"],[1176,81,703,9],[1176,83,703,2],[1177,0,704,1],[1179,0,706,0],[1179,11,706,9,"TupleTypeAnnotation"],[1179,30,706,0],[1179,33,706,38],[1180,0,706,38],[1180,41,706,32,"args"],[1180,45,706,38],[1181,0,706,32,"args"],[1181,6,706,32,"args"],[1181,10,706,38],[1182,0,706,38],[1184,0,707,2],[1184,11,707,9],[1184,12,707,10],[1184,15,707,13,"_builder"],[1184,23,707,21],[1184,24,707,22,"default"],[1184,31,707,9],[1184,48,707,31],[1184,69,707,9],[1184,78,707,57,"args"],[1184,82,707,9],[1184,84,707,2],[1185,0,708,1],[1187,0,710,0],[1187,11,710,9,"TypeofTypeAnnotation"],[1187,31,710,0],[1187,34,710,39],[1188,0,710,39],[1188,41,710,33,"args"],[1188,45,710,39],[1189,0,710,33,"args"],[1189,6,710,33,"args"],[1189,10,710,39],[1190,0,710,39],[1192,0,711,2],[1192,11,711,9],[1192,12,711,10],[1192,15,711,13,"_builder"],[1192,23,711,21],[1192,24,711,22,"default"],[1192,31,711,9],[1192,48,711,31],[1192,70,711,9],[1192,79,711,58,"args"],[1192,83,711,9],[1192,85,711,2],[1193,0,712,1],[1195,0,714,0],[1195,11,714,9,"TypeAlias"],[1195,20,714,0],[1195,23,714,28],[1196,0,714,28],[1196,41,714,22,"args"],[1196,45,714,28],[1197,0,714,22,"args"],[1197,6,714,22,"args"],[1197,10,714,28],[1198,0,714,28],[1200,0,715,2],[1200,11,715,9],[1200,12,715,10],[1200,15,715,13,"_builder"],[1200,23,715,21],[1200,24,715,22,"default"],[1200,31,715,9],[1200,48,715,31],[1200,59,715,9],[1200,68,715,47,"args"],[1200,72,715,9],[1200,74,715,2],[1201,0,716,1],[1203,0,718,0],[1203,11,718,9,"TypeAnnotation"],[1203,25,718,0],[1203,28,718,33],[1204,0,718,33],[1204,41,718,27,"args"],[1204,45,718,33],[1205,0,718,27,"args"],[1205,6,718,27,"args"],[1205,10,718,33],[1206,0,718,33],[1208,0,719,2],[1208,11,719,9],[1208,12,719,10],[1208,15,719,13,"_builder"],[1208,23,719,21],[1208,24,719,22,"default"],[1208,31,719,9],[1208,48,719,31],[1208,64,719,9],[1208,73,719,52,"args"],[1208,77,719,9],[1208,79,719,2],[1209,0,720,1],[1211,0,722,0],[1211,11,722,9,"TypeCastExpression"],[1211,29,722,0],[1211,32,722,37],[1212,0,722,37],[1212,41,722,31,"args"],[1212,45,722,37],[1213,0,722,31,"args"],[1213,6,722,31,"args"],[1213,10,722,37],[1214,0,722,37],[1216,0,723,2],[1216,11,723,9],[1216,12,723,10],[1216,15,723,13,"_builder"],[1216,23,723,21],[1216,24,723,22,"default"],[1216,31,723,9],[1216,48,723,31],[1216,68,723,9],[1216,77,723,56,"args"],[1216,81,723,9],[1216,83,723,2],[1217,0,724,1],[1219,0,726,0],[1219,11,726,9,"TypeParameter"],[1219,24,726,0],[1219,27,726,32],[1220,0,726,32],[1220,41,726,26,"args"],[1220,45,726,32],[1221,0,726,26,"args"],[1221,6,726,26,"args"],[1221,10,726,32],[1222,0,726,32],[1224,0,727,2],[1224,11,727,9],[1224,12,727,10],[1224,15,727,13,"_builder"],[1224,23,727,21],[1224,24,727,22,"default"],[1224,31,727,9],[1224,48,727,31],[1224,63,727,9],[1224,72,727,51,"args"],[1224,76,727,9],[1224,78,727,2],[1225,0,728,1],[1227,0,730,0],[1227,11,730,9,"TypeParameterDeclaration"],[1227,35,730,0],[1227,38,730,43],[1228,0,730,43],[1228,41,730,37,"args"],[1228,45,730,43],[1229,0,730,37,"args"],[1229,6,730,37,"args"],[1229,10,730,43],[1230,0,730,43],[1232,0,731,2],[1232,11,731,9],[1232,12,731,10],[1232,15,731,13,"_builder"],[1232,23,731,21],[1232,24,731,22,"default"],[1232,31,731,9],[1232,48,731,31],[1232,74,731,9],[1232,83,731,62,"args"],[1232,87,731,9],[1232,89,731,2],[1233,0,732,1],[1235,0,734,0],[1235,11,734,9,"TypeParameterInstantiation"],[1235,37,734,0],[1235,40,734,45],[1236,0,734,45],[1236,41,734,39,"args"],[1236,45,734,45],[1237,0,734,39,"args"],[1237,6,734,39,"args"],[1237,10,734,45],[1238,0,734,45],[1240,0,735,2],[1240,11,735,9],[1240,12,735,10],[1240,15,735,13,"_builder"],[1240,23,735,21],[1240,24,735,22,"default"],[1240,31,735,9],[1240,48,735,31],[1240,76,735,9],[1240,85,735,64,"args"],[1240,89,735,9],[1240,91,735,2],[1241,0,736,1],[1243,0,738,0],[1243,11,738,9,"UnionTypeAnnotation"],[1243,30,738,0],[1243,33,738,38],[1244,0,738,38],[1244,41,738,32,"args"],[1244,45,738,38],[1245,0,738,32,"args"],[1245,6,738,32,"args"],[1245,10,738,38],[1246,0,738,38],[1248,0,739,2],[1248,11,739,9],[1248,12,739,10],[1248,15,739,13,"_builder"],[1248,23,739,21],[1248,24,739,22,"default"],[1248,31,739,9],[1248,48,739,31],[1248,69,739,9],[1248,78,739,57,"args"],[1248,82,739,9],[1248,84,739,2],[1249,0,740,1],[1251,0,742,0],[1251,11,742,9,"Variance"],[1251,19,742,0],[1251,22,742,27],[1252,0,742,27],[1252,41,742,21,"args"],[1252,45,742,27],[1253,0,742,21,"args"],[1253,6,742,21,"args"],[1253,10,742,27],[1254,0,742,27],[1256,0,743,2],[1256,11,743,9],[1256,12,743,10],[1256,15,743,13,"_builder"],[1256,23,743,21],[1256,24,743,22,"default"],[1256,31,743,9],[1256,48,743,31],[1256,58,743,9],[1256,67,743,46,"args"],[1256,71,743,9],[1256,73,743,2],[1257,0,744,1],[1259,0,746,0],[1259,11,746,9,"VoidTypeAnnotation"],[1259,29,746,0],[1259,32,746,37],[1260,0,746,37],[1260,41,746,31,"args"],[1260,45,746,37],[1261,0,746,31,"args"],[1261,6,746,31,"args"],[1261,10,746,37],[1262,0,746,37],[1264,0,747,2],[1264,11,747,9],[1264,12,747,10],[1264,15,747,13,"_builder"],[1264,23,747,21],[1264,24,747,22,"default"],[1264,31,747,9],[1264,48,747,31],[1264,68,747,9],[1264,77,747,56,"args"],[1264,81,747,9],[1264,83,747,2],[1265,0,748,1],[1267,0,750,0],[1267,11,750,9,"JSXAttribute"],[1267,23,750,0],[1267,26,750,31],[1268,0,750,31],[1268,41,750,25,"args"],[1268,45,750,31],[1269,0,750,25,"args"],[1269,6,750,25,"args"],[1269,10,750,31],[1270,0,750,31],[1272,0,751,2],[1272,11,751,9],[1272,12,751,10],[1272,15,751,13,"_builder"],[1272,23,751,21],[1272,24,751,22,"default"],[1272,31,751,9],[1272,48,751,31],[1272,62,751,9],[1272,71,751,50,"args"],[1272,75,751,9],[1272,77,751,2],[1273,0,752,1],[1275,0,754,0],[1275,11,754,9,"JSXClosingElement"],[1275,28,754,0],[1275,31,754,36],[1276,0,754,36],[1276,41,754,30,"args"],[1276,45,754,36],[1277,0,754,30,"args"],[1277,6,754,30,"args"],[1277,10,754,36],[1278,0,754,36],[1280,0,755,2],[1280,11,755,9],[1280,12,755,10],[1280,15,755,13,"_builder"],[1280,23,755,21],[1280,24,755,22,"default"],[1280,31,755,9],[1280,48,755,31],[1280,67,755,9],[1280,76,755,55,"args"],[1280,80,755,9],[1280,82,755,2],[1281,0,756,1],[1283,0,758,0],[1283,11,758,9,"JSXElement"],[1283,21,758,0],[1283,24,758,29],[1284,0,758,29],[1284,41,758,23,"args"],[1284,45,758,29],[1285,0,758,23,"args"],[1285,6,758,23,"args"],[1285,10,758,29],[1286,0,758,29],[1288,0,759,2],[1288,11,759,9],[1288,12,759,10],[1288,15,759,13,"_builder"],[1288,23,759,21],[1288,24,759,22,"default"],[1288,31,759,9],[1288,48,759,31],[1288,60,759,9],[1288,69,759,48,"args"],[1288,73,759,9],[1288,75,759,2],[1289,0,760,1],[1291,0,762,0],[1291,11,762,9,"JSXEmptyExpression"],[1291,29,762,0],[1291,32,762,37],[1292,0,762,37],[1292,41,762,31,"args"],[1292,45,762,37],[1293,0,762,31,"args"],[1293,6,762,31,"args"],[1293,10,762,37],[1294,0,762,37],[1296,0,763,2],[1296,11,763,9],[1296,12,763,10],[1296,15,763,13,"_builder"],[1296,23,763,21],[1296,24,763,22,"default"],[1296,31,763,9],[1296,48,763,31],[1296,68,763,9],[1296,77,763,56,"args"],[1296,81,763,9],[1296,83,763,2],[1297,0,764,1],[1299,0,766,0],[1299,11,766,9,"JSXExpressionContainer"],[1299,33,766,0],[1299,36,766,41],[1300,0,766,41],[1300,41,766,35,"args"],[1300,45,766,41],[1301,0,766,35,"args"],[1301,6,766,35,"args"],[1301,10,766,41],[1302,0,766,41],[1304,0,767,2],[1304,11,767,9],[1304,12,767,10],[1304,15,767,13,"_builder"],[1304,23,767,21],[1304,24,767,22,"default"],[1304,31,767,9],[1304,48,767,31],[1304,72,767,9],[1304,81,767,60,"args"],[1304,85,767,9],[1304,87,767,2],[1305,0,768,1],[1307,0,770,0],[1307,11,770,9,"JSXSpreadChild"],[1307,25,770,0],[1307,28,770,33],[1308,0,770,33],[1308,41,770,27,"args"],[1308,45,770,33],[1309,0,770,27,"args"],[1309,6,770,27,"args"],[1309,10,770,33],[1310,0,770,33],[1312,0,771,2],[1312,11,771,9],[1312,12,771,10],[1312,15,771,13,"_builder"],[1312,23,771,21],[1312,24,771,22,"default"],[1312,31,771,9],[1312,48,771,31],[1312,64,771,9],[1312,73,771,52,"args"],[1312,77,771,9],[1312,79,771,2],[1313,0,772,1],[1315,0,774,0],[1315,11,774,9,"JSXIdentifier"],[1315,24,774,0],[1315,27,774,32],[1316,0,774,32],[1316,41,774,26,"args"],[1316,45,774,32],[1317,0,774,26,"args"],[1317,6,774,26,"args"],[1317,10,774,32],[1318,0,774,32],[1320,0,775,2],[1320,11,775,9],[1320,12,775,10],[1320,15,775,13,"_builder"],[1320,23,775,21],[1320,24,775,22,"default"],[1320,31,775,9],[1320,48,775,31],[1320,63,775,9],[1320,72,775,51,"args"],[1320,76,775,9],[1320,78,775,2],[1321,0,776,1],[1323,0,778,0],[1323,11,778,9,"JSXMemberExpression"],[1323,30,778,0],[1323,33,778,38],[1324,0,778,38],[1324,41,778,32,"args"],[1324,45,778,38],[1325,0,778,32,"args"],[1325,6,778,32,"args"],[1325,10,778,38],[1326,0,778,38],[1328,0,779,2],[1328,11,779,9],[1328,12,779,10],[1328,15,779,13,"_builder"],[1328,23,779,21],[1328,24,779,22,"default"],[1328,31,779,9],[1328,48,779,31],[1328,69,779,9],[1328,78,779,57,"args"],[1328,82,779,9],[1328,84,779,2],[1329,0,780,1],[1331,0,782,0],[1331,11,782,9,"JSXNamespacedName"],[1331,28,782,0],[1331,31,782,36],[1332,0,782,36],[1332,41,782,30,"args"],[1332,45,782,36],[1333,0,782,30,"args"],[1333,6,782,30,"args"],[1333,10,782,36],[1334,0,782,36],[1336,0,783,2],[1336,11,783,9],[1336,12,783,10],[1336,15,783,13,"_builder"],[1336,23,783,21],[1336,24,783,22,"default"],[1336,31,783,9],[1336,48,783,31],[1336,67,783,9],[1336,76,783,55,"args"],[1336,80,783,9],[1336,82,783,2],[1337,0,784,1],[1339,0,786,0],[1339,11,786,9,"JSXOpeningElement"],[1339,28,786,0],[1339,31,786,36],[1340,0,786,36],[1340,41,786,30,"args"],[1340,45,786,36],[1341,0,786,30,"args"],[1341,6,786,30,"args"],[1341,10,786,36],[1342,0,786,36],[1344,0,787,2],[1344,11,787,9],[1344,12,787,10],[1344,15,787,13,"_builder"],[1344,23,787,21],[1344,24,787,22,"default"],[1344,31,787,9],[1344,48,787,31],[1344,67,787,9],[1344,76,787,55,"args"],[1344,80,787,9],[1344,82,787,2],[1345,0,788,1],[1347,0,790,0],[1347,11,790,9,"JSXSpreadAttribute"],[1347,29,790,0],[1347,32,790,37],[1348,0,790,37],[1348,41,790,31,"args"],[1348,45,790,37],[1349,0,790,31,"args"],[1349,6,790,31,"args"],[1349,10,790,37],[1350,0,790,37],[1352,0,791,2],[1352,11,791,9],[1352,12,791,10],[1352,15,791,13,"_builder"],[1352,23,791,21],[1352,24,791,22,"default"],[1352,31,791,9],[1352,48,791,31],[1352,68,791,9],[1352,77,791,56,"args"],[1352,81,791,9],[1352,83,791,2],[1353,0,792,1],[1355,0,794,0],[1355,11,794,9,"JSXText"],[1355,18,794,0],[1355,21,794,26],[1356,0,794,26],[1356,41,794,20,"args"],[1356,45,794,26],[1357,0,794,20,"args"],[1357,6,794,20,"args"],[1357,10,794,26],[1358,0,794,26],[1360,0,795,2],[1360,11,795,9],[1360,12,795,10],[1360,15,795,13,"_builder"],[1360,23,795,21],[1360,24,795,22,"default"],[1360,31,795,9],[1360,48,795,31],[1360,57,795,9],[1360,66,795,45,"args"],[1360,70,795,9],[1360,72,795,2],[1361,0,796,1],[1363,0,798,0],[1363,11,798,9,"JSXFragment"],[1363,22,798,0],[1363,25,798,30],[1364,0,798,30],[1364,41,798,24,"args"],[1364,45,798,30],[1365,0,798,24,"args"],[1365,6,798,24,"args"],[1365,10,798,30],[1366,0,798,30],[1368,0,799,2],[1368,11,799,9],[1368,12,799,10],[1368,15,799,13,"_builder"],[1368,23,799,21],[1368,24,799,22,"default"],[1368,31,799,9],[1368,48,799,31],[1368,61,799,9],[1368,70,799,49,"args"],[1368,74,799,9],[1368,76,799,2],[1369,0,800,1],[1371,0,802,0],[1371,11,802,9,"JSXOpeningFragment"],[1371,29,802,0],[1371,32,802,37],[1372,0,802,37],[1372,41,802,31,"args"],[1372,45,802,37],[1373,0,802,31,"args"],[1373,6,802,31,"args"],[1373,10,802,37],[1374,0,802,37],[1376,0,803,2],[1376,11,803,9],[1376,12,803,10],[1376,15,803,13,"_builder"],[1376,23,803,21],[1376,24,803,22,"default"],[1376,31,803,9],[1376,48,803,31],[1376,68,803,9],[1376,77,803,56,"args"],[1376,81,803,9],[1376,83,803,2],[1377,0,804,1],[1379,0,806,0],[1379,11,806,9,"JSXClosingFragment"],[1379,29,806,0],[1379,32,806,37],[1380,0,806,37],[1380,41,806,31,"args"],[1380,45,806,37],[1381,0,806,31,"args"],[1381,6,806,31,"args"],[1381,10,806,37],[1382,0,806,37],[1384,0,807,2],[1384,11,807,9],[1384,12,807,10],[1384,15,807,13,"_builder"],[1384,23,807,21],[1384,24,807,22,"default"],[1384,31,807,9],[1384,48,807,31],[1384,68,807,9],[1384,77,807,56,"args"],[1384,81,807,9],[1384,83,807,2],[1385,0,808,1],[1387,0,810,0],[1387,11,810,9,"Noop"],[1387,15,810,0],[1387,18,810,23],[1388,0,810,23],[1388,41,810,17,"args"],[1388,45,810,23],[1389,0,810,17,"args"],[1389,6,810,17,"args"],[1389,10,810,23],[1390,0,810,23],[1392,0,811,2],[1392,11,811,9],[1392,12,811,10],[1392,15,811,13,"_builder"],[1392,23,811,21],[1392,24,811,22,"default"],[1392,31,811,9],[1392,48,811,31],[1392,54,811,9],[1392,63,811,42,"args"],[1392,67,811,9],[1392,69,811,2],[1393,0,812,1],[1395,0,814,0],[1395,11,814,9,"Placeholder"],[1395,22,814,0],[1395,25,814,30],[1396,0,814,30],[1396,41,814,24,"args"],[1396,45,814,30],[1397,0,814,24,"args"],[1397,6,814,24,"args"],[1397,10,814,30],[1398,0,814,30],[1400,0,815,2],[1400,11,815,9],[1400,12,815,10],[1400,15,815,13,"_builder"],[1400,23,815,21],[1400,24,815,22,"default"],[1400,31,815,9],[1400,48,815,31],[1400,61,815,9],[1400,70,815,49,"args"],[1400,74,815,9],[1400,76,815,2],[1401,0,816,1],[1403,0,818,0],[1403,11,818,9,"ArgumentPlaceholder"],[1403,30,818,0],[1403,33,818,38],[1404,0,818,38],[1404,41,818,32,"args"],[1404,45,818,38],[1405,0,818,32,"args"],[1405,6,818,32,"args"],[1405,10,818,38],[1406,0,818,38],[1408,0,819,2],[1408,11,819,9],[1408,12,819,10],[1408,15,819,13,"_builder"],[1408,23,819,21],[1408,24,819,22,"default"],[1408,31,819,9],[1408,48,819,31],[1408,69,819,9],[1408,78,819,57,"args"],[1408,82,819,9],[1408,84,819,2],[1409,0,820,1],[1411,0,822,0],[1411,11,822,9,"AwaitExpression"],[1411,26,822,0],[1411,29,822,34],[1412,0,822,34],[1412,41,822,28,"args"],[1412,45,822,34],[1413,0,822,28,"args"],[1413,6,822,28,"args"],[1413,10,822,34],[1414,0,822,34],[1416,0,823,2],[1416,11,823,9],[1416,12,823,10],[1416,15,823,13,"_builder"],[1416,23,823,21],[1416,24,823,22,"default"],[1416,31,823,9],[1416,48,823,31],[1416,65,823,9],[1416,74,823,53,"args"],[1416,78,823,9],[1416,80,823,2],[1417,0,824,1],[1419,0,826,0],[1419,11,826,9,"BindExpression"],[1419,25,826,0],[1419,28,826,33],[1420,0,826,33],[1420,41,826,27,"args"],[1420,45,826,33],[1421,0,826,27,"args"],[1421,6,826,27,"args"],[1421,10,826,33],[1422,0,826,33],[1424,0,827,2],[1424,11,827,9],[1424,12,827,10],[1424,15,827,13,"_builder"],[1424,23,827,21],[1424,24,827,22,"default"],[1424,31,827,9],[1424,48,827,31],[1424,64,827,9],[1424,73,827,52,"args"],[1424,77,827,9],[1424,79,827,2],[1425,0,828,1],[1427,0,830,0],[1427,11,830,9,"ClassProperty"],[1427,24,830,0],[1427,27,830,32],[1428,0,830,32],[1428,41,830,26,"args"],[1428,45,830,32],[1429,0,830,26,"args"],[1429,6,830,26,"args"],[1429,10,830,32],[1430,0,830,32],[1432,0,831,2],[1432,11,831,9],[1432,12,831,10],[1432,15,831,13,"_builder"],[1432,23,831,21],[1432,24,831,22,"default"],[1432,31,831,9],[1432,48,831,31],[1432,63,831,9],[1432,72,831,51,"args"],[1432,76,831,9],[1432,78,831,2],[1433,0,832,1],[1435,0,834,0],[1435,11,834,9,"OptionalMemberExpression"],[1435,35,834,0],[1435,38,834,43],[1436,0,834,43],[1436,41,834,37,"args"],[1436,45,834,43],[1437,0,834,37,"args"],[1437,6,834,37,"args"],[1437,10,834,43],[1438,0,834,43],[1440,0,835,2],[1440,11,835,9],[1440,12,835,10],[1440,15,835,13,"_builder"],[1440,23,835,21],[1440,24,835,22,"default"],[1440,31,835,9],[1440,48,835,31],[1440,74,835,9],[1440,83,835,62,"args"],[1440,87,835,9],[1440,89,835,2],[1441,0,836,1],[1443,0,838,0],[1443,11,838,9,"PipelineTopicExpression"],[1443,34,838,0],[1443,37,838,42],[1444,0,838,42],[1444,41,838,36,"args"],[1444,45,838,42],[1445,0,838,36,"args"],[1445,6,838,36,"args"],[1445,10,838,42],[1446,0,838,42],[1448,0,839,2],[1448,11,839,9],[1448,12,839,10],[1448,15,839,13,"_builder"],[1448,23,839,21],[1448,24,839,22,"default"],[1448,31,839,9],[1448,48,839,31],[1448,73,839,9],[1448,82,839,61,"args"],[1448,86,839,9],[1448,88,839,2],[1449,0,840,1],[1451,0,842,0],[1451,11,842,9,"PipelineBareFunction"],[1451,31,842,0],[1451,34,842,39],[1452,0,842,39],[1452,41,842,33,"args"],[1452,45,842,39],[1453,0,842,33,"args"],[1453,6,842,33,"args"],[1453,10,842,39],[1454,0,842,39],[1456,0,843,2],[1456,11,843,9],[1456,12,843,10],[1456,15,843,13,"_builder"],[1456,23,843,21],[1456,24,843,22,"default"],[1456,31,843,9],[1456,48,843,31],[1456,70,843,9],[1456,79,843,58,"args"],[1456,83,843,9],[1456,85,843,2],[1457,0,844,1],[1459,0,846,0],[1459,11,846,9,"PipelinePrimaryTopicReference"],[1459,40,846,0],[1459,43,846,48],[1460,0,846,48],[1460,41,846,42,"args"],[1460,45,846,48],[1461,0,846,42,"args"],[1461,6,846,42,"args"],[1461,10,846,48],[1462,0,846,48],[1464,0,847,2],[1464,11,847,9],[1464,12,847,10],[1464,15,847,13,"_builder"],[1464,23,847,21],[1464,24,847,22,"default"],[1464,31,847,9],[1464,48,847,31],[1464,79,847,9],[1464,88,847,67,"args"],[1464,92,847,9],[1464,94,847,2],[1465,0,848,1],[1467,0,850,0],[1467,11,850,9,"OptionalCallExpression"],[1467,33,850,0],[1467,36,850,41],[1468,0,850,41],[1468,41,850,35,"args"],[1468,45,850,41],[1469,0,850,35,"args"],[1469,6,850,35,"args"],[1469,10,850,41],[1470,0,850,41],[1472,0,851,2],[1472,11,851,9],[1472,12,851,10],[1472,15,851,13,"_builder"],[1472,23,851,21],[1472,24,851,22,"default"],[1472,31,851,9],[1472,48,851,31],[1472,72,851,9],[1472,81,851,60,"args"],[1472,85,851,9],[1472,87,851,2],[1473,0,852,1],[1475,0,854,0],[1475,11,854,9,"ClassPrivateProperty"],[1475,31,854,0],[1475,34,854,39],[1476,0,854,39],[1476,41,854,33,"args"],[1476,45,854,39],[1477,0,854,33,"args"],[1477,6,854,33,"args"],[1477,10,854,39],[1478,0,854,39],[1480,0,855,2],[1480,11,855,9],[1480,12,855,10],[1480,15,855,13,"_builder"],[1480,23,855,21],[1480,24,855,22,"default"],[1480,31,855,9],[1480,48,855,31],[1480,70,855,9],[1480,79,855,58,"args"],[1480,83,855,9],[1480,85,855,2],[1481,0,856,1],[1483,0,858,0],[1483,11,858,9,"ClassPrivateMethod"],[1483,29,858,0],[1483,32,858,37],[1484,0,858,37],[1484,41,858,31,"args"],[1484,45,858,37],[1485,0,858,31,"args"],[1485,6,858,31,"args"],[1485,10,858,37],[1486,0,858,37],[1488,0,859,2],[1488,11,859,9],[1488,12,859,10],[1488,15,859,13,"_builder"],[1488,23,859,21],[1488,24,859,22,"default"],[1488,31,859,9],[1488,48,859,31],[1488,68,859,9],[1488,77,859,56,"args"],[1488,81,859,9],[1488,83,859,2],[1489,0,860,1],[1491,0,862,0],[1491,11,862,9,"Import"],[1491,17,862,0],[1491,20,862,25],[1492,0,862,25],[1492,41,862,19,"args"],[1492,45,862,25],[1493,0,862,19,"args"],[1493,6,862,19,"args"],[1493,10,862,25],[1494,0,862,25],[1496,0,863,2],[1496,11,863,9],[1496,12,863,10],[1496,15,863,13,"_builder"],[1496,23,863,21],[1496,24,863,22,"default"],[1496,31,863,9],[1496,48,863,31],[1496,56,863,9],[1496,65,863,44,"args"],[1496,69,863,9],[1496,71,863,2],[1497,0,864,1],[1499,0,866,0],[1499,11,866,9,"Decorator"],[1499,20,866,0],[1499,23,866,28],[1500,0,866,28],[1500,41,866,22,"args"],[1500,45,866,28],[1501,0,866,22,"args"],[1501,6,866,22,"args"],[1501,10,866,28],[1502,0,866,28],[1504,0,867,2],[1504,11,867,9],[1504,12,867,10],[1504,15,867,13,"_builder"],[1504,23,867,21],[1504,24,867,22,"default"],[1504,31,867,9],[1504,48,867,31],[1504,59,867,9],[1504,68,867,47,"args"],[1504,72,867,9],[1504,74,867,2],[1505,0,868,1],[1507,0,870,0],[1507,11,870,9,"DoExpression"],[1507,23,870,0],[1507,26,870,31],[1508,0,870,31],[1508,41,870,25,"args"],[1508,45,870,31],[1509,0,870,25,"args"],[1509,6,870,25,"args"],[1509,10,870,31],[1510,0,870,31],[1512,0,871,2],[1512,11,871,9],[1512,12,871,10],[1512,15,871,13,"_builder"],[1512,23,871,21],[1512,24,871,22,"default"],[1512,31,871,9],[1512,48,871,31],[1512,62,871,9],[1512,71,871,50,"args"],[1512,75,871,9],[1512,77,871,2],[1513,0,872,1],[1515,0,874,0],[1515,11,874,9,"ExportDefaultSpecifier"],[1515,33,874,0],[1515,36,874,41],[1516,0,874,41],[1516,41,874,35,"args"],[1516,45,874,41],[1517,0,874,35,"args"],[1517,6,874,35,"args"],[1517,10,874,41],[1518,0,874,41],[1520,0,875,2],[1520,11,875,9],[1520,12,875,10],[1520,15,875,13,"_builder"],[1520,23,875,21],[1520,24,875,22,"default"],[1520,31,875,9],[1520,48,875,31],[1520,72,875,9],[1520,81,875,60,"args"],[1520,85,875,9],[1520,87,875,2],[1521,0,876,1],[1523,0,878,0],[1523,11,878,9,"ExportNamespaceSpecifier"],[1523,35,878,0],[1523,38,878,43],[1524,0,878,43],[1524,41,878,37,"args"],[1524,45,878,43],[1525,0,878,37,"args"],[1525,6,878,37,"args"],[1525,10,878,43],[1526,0,878,43],[1528,0,879,2],[1528,11,879,9],[1528,12,879,10],[1528,15,879,13,"_builder"],[1528,23,879,21],[1528,24,879,22,"default"],[1528,31,879,9],[1528,48,879,31],[1528,74,879,9],[1528,83,879,62,"args"],[1528,87,879,9],[1528,89,879,2],[1529,0,880,1],[1531,0,882,0],[1531,11,882,9,"PrivateName"],[1531,22,882,0],[1531,25,882,30],[1532,0,882,30],[1532,41,882,24,"args"],[1532,45,882,30],[1533,0,882,24,"args"],[1533,6,882,24,"args"],[1533,10,882,30],[1534,0,882,30],[1536,0,883,2],[1536,11,883,9],[1536,12,883,10],[1536,15,883,13,"_builder"],[1536,23,883,21],[1536,24,883,22,"default"],[1536,31,883,9],[1536,48,883,31],[1536,61,883,9],[1536,70,883,49,"args"],[1536,74,883,9],[1536,76,883,2],[1537,0,884,1],[1539,0,886,0],[1539,11,886,9,"BigIntLiteral"],[1539,24,886,0],[1539,27,886,32],[1540,0,886,32],[1540,41,886,26,"args"],[1540,45,886,32],[1541,0,886,26,"args"],[1541,6,886,26,"args"],[1541,10,886,32],[1542,0,886,32],[1544,0,887,2],[1544,11,887,9],[1544,12,887,10],[1544,15,887,13,"_builder"],[1544,23,887,21],[1544,24,887,22,"default"],[1544,31,887,9],[1544,48,887,31],[1544,63,887,9],[1544,72,887,51,"args"],[1544,76,887,9],[1544,78,887,2],[1545,0,888,1],[1547,0,890,0],[1547,11,890,9,"TSParameterProperty"],[1547,30,890,0],[1547,33,890,38],[1548,0,890,38],[1548,41,890,32,"args"],[1548,45,890,38],[1549,0,890,32,"args"],[1549,6,890,32,"args"],[1549,10,890,38],[1550,0,890,38],[1552,0,891,2],[1552,11,891,9],[1552,12,891,10],[1552,15,891,13,"_builder"],[1552,23,891,21],[1552,24,891,22,"default"],[1552,31,891,9],[1552,48,891,31],[1552,69,891,9],[1552,78,891,57,"args"],[1552,82,891,9],[1552,84,891,2],[1553,0,892,1],[1555,0,894,0],[1555,11,894,9,"TSDeclareFunction"],[1555,28,894,0],[1555,31,894,36],[1556,0,894,36],[1556,41,894,30,"args"],[1556,45,894,36],[1557,0,894,30,"args"],[1557,6,894,30,"args"],[1557,10,894,36],[1558,0,894,36],[1560,0,895,2],[1560,11,895,9],[1560,12,895,10],[1560,15,895,13,"_builder"],[1560,23,895,21],[1560,24,895,22,"default"],[1560,31,895,9],[1560,48,895,31],[1560,67,895,9],[1560,76,895,55,"args"],[1560,80,895,9],[1560,82,895,2],[1561,0,896,1],[1563,0,898,0],[1563,11,898,9,"TSDeclareMethod"],[1563,26,898,0],[1563,29,898,34],[1564,0,898,34],[1564,41,898,28,"args"],[1564,45,898,34],[1565,0,898,28,"args"],[1565,6,898,28,"args"],[1565,10,898,34],[1566,0,898,34],[1568,0,899,2],[1568,11,899,9],[1568,12,899,10],[1568,15,899,13,"_builder"],[1568,23,899,21],[1568,24,899,22,"default"],[1568,31,899,9],[1568,48,899,31],[1568,65,899,9],[1568,74,899,53,"args"],[1568,78,899,9],[1568,80,899,2],[1569,0,900,1],[1571,0,902,0],[1571,11,902,9,"TSQualifiedName"],[1571,26,902,0],[1571,29,902,34],[1572,0,902,34],[1572,41,902,28,"args"],[1572,45,902,34],[1573,0,902,28,"args"],[1573,6,902,28,"args"],[1573,10,902,34],[1574,0,902,34],[1576,0,903,2],[1576,11,903,9],[1576,12,903,10],[1576,15,903,13,"_builder"],[1576,23,903,21],[1576,24,903,22,"default"],[1576,31,903,9],[1576,48,903,31],[1576,65,903,9],[1576,74,903,53,"args"],[1576,78,903,9],[1576,80,903,2],[1577,0,904,1],[1579,0,906,0],[1579,11,906,9,"TSCallSignatureDeclaration"],[1579,37,906,0],[1579,40,906,45],[1580,0,906,45],[1580,41,906,39,"args"],[1580,45,906,45],[1581,0,906,39,"args"],[1581,6,906,39,"args"],[1581,10,906,45],[1582,0,906,45],[1584,0,907,2],[1584,11,907,9],[1584,12,907,10],[1584,15,907,13,"_builder"],[1584,23,907,21],[1584,24,907,22,"default"],[1584,31,907,9],[1584,48,907,31],[1584,76,907,9],[1584,85,907,64,"args"],[1584,89,907,9],[1584,91,907,2],[1585,0,908,1],[1587,0,910,0],[1587,11,910,9,"TSConstructSignatureDeclaration"],[1587,42,910,0],[1587,45,910,50],[1588,0,910,50],[1588,41,910,44,"args"],[1588,45,910,50],[1589,0,910,44,"args"],[1589,6,910,44,"args"],[1589,10,910,50],[1590,0,910,50],[1592,0,911,2],[1592,11,911,9],[1592,12,911,10],[1592,15,911,13,"_builder"],[1592,23,911,21],[1592,24,911,22,"default"],[1592,31,911,9],[1592,48,911,31],[1592,81,911,9],[1592,90,911,69,"args"],[1592,94,911,9],[1592,96,911,2],[1593,0,912,1],[1595,0,914,0],[1595,11,914,9,"TSPropertySignature"],[1595,30,914,0],[1595,33,914,38],[1596,0,914,38],[1596,41,914,32,"args"],[1596,45,914,38],[1597,0,914,32,"args"],[1597,6,914,32,"args"],[1597,10,914,38],[1598,0,914,38],[1600,0,915,2],[1600,11,915,9],[1600,12,915,10],[1600,15,915,13,"_builder"],[1600,23,915,21],[1600,24,915,22,"default"],[1600,31,915,9],[1600,48,915,31],[1600,69,915,9],[1600,78,915,57,"args"],[1600,82,915,9],[1600,84,915,2],[1601,0,916,1],[1603,0,918,0],[1603,11,918,9,"TSMethodSignature"],[1603,28,918,0],[1603,31,918,36],[1604,0,918,36],[1604,41,918,30,"args"],[1604,45,918,36],[1605,0,918,30,"args"],[1605,6,918,30,"args"],[1605,10,918,36],[1606,0,918,36],[1608,0,919,2],[1608,11,919,9],[1608,12,919,10],[1608,15,919,13,"_builder"],[1608,23,919,21],[1608,24,919,22,"default"],[1608,31,919,9],[1608,48,919,31],[1608,67,919,9],[1608,76,919,55,"args"],[1608,80,919,9],[1608,82,919,2],[1609,0,920,1],[1611,0,922,0],[1611,11,922,9,"TSIndexSignature"],[1611,27,922,0],[1611,30,922,35],[1612,0,922,35],[1612,41,922,29,"args"],[1612,45,922,35],[1613,0,922,29,"args"],[1613,6,922,29,"args"],[1613,10,922,35],[1614,0,922,35],[1616,0,923,2],[1616,11,923,9],[1616,12,923,10],[1616,15,923,13,"_builder"],[1616,23,923,21],[1616,24,923,22,"default"],[1616,31,923,9],[1616,48,923,31],[1616,66,923,9],[1616,75,923,54,"args"],[1616,79,923,9],[1616,81,923,2],[1617,0,924,1],[1619,0,926,0],[1619,11,926,9,"TSAnyKeyword"],[1619,23,926,0],[1619,26,926,31],[1620,0,926,31],[1620,41,926,25,"args"],[1620,45,926,31],[1621,0,926,25,"args"],[1621,6,926,25,"args"],[1621,10,926,31],[1622,0,926,31],[1624,0,927,2],[1624,11,927,9],[1624,12,927,10],[1624,15,927,13,"_builder"],[1624,23,927,21],[1624,24,927,22,"default"],[1624,31,927,9],[1624,48,927,31],[1624,62,927,9],[1624,71,927,50,"args"],[1624,75,927,9],[1624,77,927,2],[1625,0,928,1],[1627,0,930,0],[1627,11,930,9,"TSUnknownKeyword"],[1627,27,930,0],[1627,30,930,35],[1628,0,930,35],[1628,41,930,29,"args"],[1628,45,930,35],[1629,0,930,29,"args"],[1629,6,930,29,"args"],[1629,10,930,35],[1630,0,930,35],[1632,0,931,2],[1632,11,931,9],[1632,12,931,10],[1632,15,931,13,"_builder"],[1632,23,931,21],[1632,24,931,22,"default"],[1632,31,931,9],[1632,48,931,31],[1632,66,931,9],[1632,75,931,54,"args"],[1632,79,931,9],[1632,81,931,2],[1633,0,932,1],[1635,0,934,0],[1635,11,934,9,"TSNumberKeyword"],[1635,26,934,0],[1635,29,934,34],[1636,0,934,34],[1636,41,934,28,"args"],[1636,45,934,34],[1637,0,934,28,"args"],[1637,6,934,28,"args"],[1637,10,934,34],[1638,0,934,34],[1640,0,935,2],[1640,11,935,9],[1640,12,935,10],[1640,15,935,13,"_builder"],[1640,23,935,21],[1640,24,935,22,"default"],[1640,31,935,9],[1640,48,935,31],[1640,65,935,9],[1640,74,935,53,"args"],[1640,78,935,9],[1640,80,935,2],[1641,0,936,1],[1643,0,938,0],[1643,11,938,9,"TSObjectKeyword"],[1643,26,938,0],[1643,29,938,34],[1644,0,938,34],[1644,41,938,28,"args"],[1644,45,938,34],[1645,0,938,28,"args"],[1645,6,938,28,"args"],[1645,10,938,34],[1646,0,938,34],[1648,0,939,2],[1648,11,939,9],[1648,12,939,10],[1648,15,939,13,"_builder"],[1648,23,939,21],[1648,24,939,22,"default"],[1648,31,939,9],[1648,48,939,31],[1648,65,939,9],[1648,74,939,53,"args"],[1648,78,939,9],[1648,80,939,2],[1649,0,940,1],[1651,0,942,0],[1651,11,942,9,"TSBooleanKeyword"],[1651,27,942,0],[1651,30,942,35],[1652,0,942,35],[1652,41,942,29,"args"],[1652,45,942,35],[1653,0,942,29,"args"],[1653,6,942,29,"args"],[1653,10,942,35],[1654,0,942,35],[1656,0,943,2],[1656,11,943,9],[1656,12,943,10],[1656,15,943,13,"_builder"],[1656,23,943,21],[1656,24,943,22,"default"],[1656,31,943,9],[1656,48,943,31],[1656,66,943,9],[1656,75,943,54,"args"],[1656,79,943,9],[1656,81,943,2],[1657,0,944,1],[1659,0,946,0],[1659,11,946,9,"TSStringKeyword"],[1659,26,946,0],[1659,29,946,34],[1660,0,946,34],[1660,41,946,28,"args"],[1660,45,946,34],[1661,0,946,28,"args"],[1661,6,946,28,"args"],[1661,10,946,34],[1662,0,946,34],[1664,0,947,2],[1664,11,947,9],[1664,12,947,10],[1664,15,947,13,"_builder"],[1664,23,947,21],[1664,24,947,22,"default"],[1664,31,947,9],[1664,48,947,31],[1664,65,947,9],[1664,74,947,53,"args"],[1664,78,947,9],[1664,80,947,2],[1665,0,948,1],[1667,0,950,0],[1667,11,950,9,"TSSymbolKeyword"],[1667,26,950,0],[1667,29,950,34],[1668,0,950,34],[1668,41,950,28,"args"],[1668,45,950,34],[1669,0,950,28,"args"],[1669,6,950,28,"args"],[1669,10,950,34],[1670,0,950,34],[1672,0,951,2],[1672,11,951,9],[1672,12,951,10],[1672,15,951,13,"_builder"],[1672,23,951,21],[1672,24,951,22,"default"],[1672,31,951,9],[1672,48,951,31],[1672,65,951,9],[1672,74,951,53,"args"],[1672,78,951,9],[1672,80,951,2],[1673,0,952,1],[1675,0,954,0],[1675,11,954,9,"TSVoidKeyword"],[1675,24,954,0],[1675,27,954,32],[1676,0,954,32],[1676,41,954,26,"args"],[1676,45,954,32],[1677,0,954,26,"args"],[1677,6,954,26,"args"],[1677,10,954,32],[1678,0,954,32],[1680,0,955,2],[1680,11,955,9],[1680,12,955,10],[1680,15,955,13,"_builder"],[1680,23,955,21],[1680,24,955,22,"default"],[1680,31,955,9],[1680,48,955,31],[1680,63,955,9],[1680,72,955,51,"args"],[1680,76,955,9],[1680,78,955,2],[1681,0,956,1],[1683,0,958,0],[1683,11,958,9,"TSUndefinedKeyword"],[1683,29,958,0],[1683,32,958,37],[1684,0,958,37],[1684,41,958,31,"args"],[1684,45,958,37],[1685,0,958,31,"args"],[1685,6,958,31,"args"],[1685,10,958,37],[1686,0,958,37],[1688,0,959,2],[1688,11,959,9],[1688,12,959,10],[1688,15,959,13,"_builder"],[1688,23,959,21],[1688,24,959,22,"default"],[1688,31,959,9],[1688,48,959,31],[1688,68,959,9],[1688,77,959,56,"args"],[1688,81,959,9],[1688,83,959,2],[1689,0,960,1],[1691,0,962,0],[1691,11,962,9,"TSNullKeyword"],[1691,24,962,0],[1691,27,962,32],[1692,0,962,32],[1692,41,962,26,"args"],[1692,45,962,32],[1693,0,962,26,"args"],[1693,6,962,26,"args"],[1693,10,962,32],[1694,0,962,32],[1696,0,963,2],[1696,11,963,9],[1696,12,963,10],[1696,15,963,13,"_builder"],[1696,23,963,21],[1696,24,963,22,"default"],[1696,31,963,9],[1696,48,963,31],[1696,63,963,9],[1696,72,963,51,"args"],[1696,76,963,9],[1696,78,963,2],[1697,0,964,1],[1699,0,966,0],[1699,11,966,9,"TSNeverKeyword"],[1699,25,966,0],[1699,28,966,33],[1700,0,966,33],[1700,41,966,27,"args"],[1700,45,966,33],[1701,0,966,27,"args"],[1701,6,966,27,"args"],[1701,10,966,33],[1702,0,966,33],[1704,0,967,2],[1704,11,967,9],[1704,12,967,10],[1704,15,967,13,"_builder"],[1704,23,967,21],[1704,24,967,22,"default"],[1704,31,967,9],[1704,48,967,31],[1704,64,967,9],[1704,73,967,52,"args"],[1704,77,967,9],[1704,79,967,2],[1705,0,968,1],[1707,0,970,0],[1707,11,970,9,"TSThisType"],[1707,21,970,0],[1707,24,970,29],[1708,0,970,29],[1708,41,970,23,"args"],[1708,45,970,29],[1709,0,970,23,"args"],[1709,6,970,23,"args"],[1709,10,970,29],[1710,0,970,29],[1712,0,971,2],[1712,11,971,9],[1712,12,971,10],[1712,15,971,13,"_builder"],[1712,23,971,21],[1712,24,971,22,"default"],[1712,31,971,9],[1712,48,971,31],[1712,60,971,9],[1712,69,971,48,"args"],[1712,73,971,9],[1712,75,971,2],[1713,0,972,1],[1715,0,974,0],[1715,11,974,9,"TSFunctionType"],[1715,25,974,0],[1715,28,974,33],[1716,0,974,33],[1716,41,974,27,"args"],[1716,45,974,33],[1717,0,974,27,"args"],[1717,6,974,27,"args"],[1717,10,974,33],[1718,0,974,33],[1720,0,975,2],[1720,11,975,9],[1720,12,975,10],[1720,15,975,13,"_builder"],[1720,23,975,21],[1720,24,975,22,"default"],[1720,31,975,9],[1720,48,975,31],[1720,64,975,9],[1720,73,975,52,"args"],[1720,77,975,9],[1720,79,975,2],[1721,0,976,1],[1723,0,978,0],[1723,11,978,9,"TSConstructorType"],[1723,28,978,0],[1723,31,978,36],[1724,0,978,36],[1724,41,978,30,"args"],[1724,45,978,36],[1725,0,978,30,"args"],[1725,6,978,30,"args"],[1725,10,978,36],[1726,0,978,36],[1728,0,979,2],[1728,11,979,9],[1728,12,979,10],[1728,15,979,13,"_builder"],[1728,23,979,21],[1728,24,979,22,"default"],[1728,31,979,9],[1728,48,979,31],[1728,67,979,9],[1728,76,979,55,"args"],[1728,80,979,9],[1728,82,979,2],[1729,0,980,1],[1731,0,982,0],[1731,11,982,9,"TSTypeReference"],[1731,26,982,0],[1731,29,982,34],[1732,0,982,34],[1732,41,982,28,"args"],[1732,45,982,34],[1733,0,982,28,"args"],[1733,6,982,28,"args"],[1733,10,982,34],[1734,0,982,34],[1736,0,983,2],[1736,11,983,9],[1736,12,983,10],[1736,15,983,13,"_builder"],[1736,23,983,21],[1736,24,983,22,"default"],[1736,31,983,9],[1736,48,983,31],[1736,65,983,9],[1736,74,983,53,"args"],[1736,78,983,9],[1736,80,983,2],[1737,0,984,1],[1739,0,986,0],[1739,11,986,9,"TSTypePredicate"],[1739,26,986,0],[1739,29,986,34],[1740,0,986,34],[1740,41,986,28,"args"],[1740,45,986,34],[1741,0,986,28,"args"],[1741,6,986,28,"args"],[1741,10,986,34],[1742,0,986,34],[1744,0,987,2],[1744,11,987,9],[1744,12,987,10],[1744,15,987,13,"_builder"],[1744,23,987,21],[1744,24,987,22,"default"],[1744,31,987,9],[1744,48,987,31],[1744,65,987,9],[1744,74,987,53,"args"],[1744,78,987,9],[1744,80,987,2],[1745,0,988,1],[1747,0,990,0],[1747,11,990,9,"TSTypeQuery"],[1747,22,990,0],[1747,25,990,30],[1748,0,990,30],[1748,41,990,24,"args"],[1748,45,990,30],[1749,0,990,24,"args"],[1749,6,990,24,"args"],[1749,10,990,30],[1750,0,990,30],[1752,0,991,2],[1752,11,991,9],[1752,12,991,10],[1752,15,991,13,"_builder"],[1752,23,991,21],[1752,24,991,22,"default"],[1752,31,991,9],[1752,48,991,31],[1752,61,991,9],[1752,70,991,49,"args"],[1752,74,991,9],[1752,76,991,2],[1753,0,992,1],[1755,0,994,0],[1755,11,994,9,"TSTypeLiteral"],[1755,24,994,0],[1755,27,994,32],[1756,0,994,32],[1756,41,994,26,"args"],[1756,45,994,32],[1757,0,994,26,"args"],[1757,6,994,26,"args"],[1757,10,994,32],[1758,0,994,32],[1760,0,995,2],[1760,11,995,9],[1760,12,995,10],[1760,15,995,13,"_builder"],[1760,23,995,21],[1760,24,995,22,"default"],[1760,31,995,9],[1760,48,995,31],[1760,63,995,9],[1760,72,995,51,"args"],[1760,76,995,9],[1760,78,995,2],[1761,0,996,1],[1763,0,998,0],[1763,11,998,9,"TSArrayType"],[1763,22,998,0],[1763,25,998,30],[1764,0,998,30],[1764,41,998,24,"args"],[1764,45,998,30],[1765,0,998,24,"args"],[1765,6,998,24,"args"],[1765,10,998,30],[1766,0,998,30],[1768,0,999,2],[1768,11,999,9],[1768,12,999,10],[1768,15,999,13,"_builder"],[1768,23,999,21],[1768,24,999,22,"default"],[1768,31,999,9],[1768,48,999,31],[1768,61,999,9],[1768,70,999,49,"args"],[1768,74,999,9],[1768,76,999,2],[1769,0,1000,1],[1771,0,1002,0],[1771,11,1002,9,"TSTupleType"],[1771,22,1002,0],[1771,25,1002,30],[1772,0,1002,30],[1772,41,1002,24,"args"],[1772,45,1002,30],[1773,0,1002,24,"args"],[1773,6,1002,24,"args"],[1773,10,1002,30],[1774,0,1002,30],[1776,0,1003,2],[1776,11,1003,9],[1776,12,1003,10],[1776,15,1003,13,"_builder"],[1776,23,1003,21],[1776,24,1003,22,"default"],[1776,31,1003,9],[1776,48,1003,31],[1776,61,1003,9],[1776,70,1003,49,"args"],[1776,74,1003,9],[1776,76,1003,2],[1777,0,1004,1],[1779,0,1006,0],[1779,11,1006,9,"TSOptionalType"],[1779,25,1006,0],[1779,28,1006,33],[1780,0,1006,33],[1780,41,1006,27,"args"],[1780,45,1006,33],[1781,0,1006,27,"args"],[1781,6,1006,27,"args"],[1781,10,1006,33],[1782,0,1006,33],[1784,0,1007,2],[1784,11,1007,9],[1784,12,1007,10],[1784,15,1007,13,"_builder"],[1784,23,1007,21],[1784,24,1007,22,"default"],[1784,31,1007,9],[1784,48,1007,31],[1784,64,1007,9],[1784,73,1007,52,"args"],[1784,77,1007,9],[1784,79,1007,2],[1785,0,1008,1],[1787,0,1010,0],[1787,11,1010,9,"TSRestType"],[1787,21,1010,0],[1787,24,1010,29],[1788,0,1010,29],[1788,41,1010,23,"args"],[1788,45,1010,29],[1789,0,1010,23,"args"],[1789,6,1010,23,"args"],[1789,10,1010,29],[1790,0,1010,29],[1792,0,1011,2],[1792,11,1011,9],[1792,12,1011,10],[1792,15,1011,13,"_builder"],[1792,23,1011,21],[1792,24,1011,22,"default"],[1792,31,1011,9],[1792,48,1011,31],[1792,60,1011,9],[1792,69,1011,48,"args"],[1792,73,1011,9],[1792,75,1011,2],[1793,0,1012,1],[1795,0,1014,0],[1795,11,1014,9,"TSUnionType"],[1795,22,1014,0],[1795,25,1014,30],[1796,0,1014,30],[1796,41,1014,24,"args"],[1796,45,1014,30],[1797,0,1014,24,"args"],[1797,6,1014,24,"args"],[1797,10,1014,30],[1798,0,1014,30],[1800,0,1015,2],[1800,11,1015,9],[1800,12,1015,10],[1800,15,1015,13,"_builder"],[1800,23,1015,21],[1800,24,1015,22,"default"],[1800,31,1015,9],[1800,48,1015,31],[1800,61,1015,9],[1800,70,1015,49,"args"],[1800,74,1015,9],[1800,76,1015,2],[1801,0,1016,1],[1803,0,1018,0],[1803,11,1018,9,"TSIntersectionType"],[1803,29,1018,0],[1803,32,1018,37],[1804,0,1018,37],[1804,41,1018,31,"args"],[1804,45,1018,37],[1805,0,1018,31,"args"],[1805,6,1018,31,"args"],[1805,10,1018,37],[1806,0,1018,37],[1808,0,1019,2],[1808,11,1019,9],[1808,12,1019,10],[1808,15,1019,13,"_builder"],[1808,23,1019,21],[1808,24,1019,22,"default"],[1808,31,1019,9],[1808,48,1019,31],[1808,68,1019,9],[1808,77,1019,56,"args"],[1808,81,1019,9],[1808,83,1019,2],[1809,0,1020,1],[1811,0,1022,0],[1811,11,1022,9,"TSConditionalType"],[1811,28,1022,0],[1811,31,1022,36],[1812,0,1022,36],[1812,41,1022,30,"args"],[1812,45,1022,36],[1813,0,1022,30,"args"],[1813,6,1022,30,"args"],[1813,10,1022,36],[1814,0,1022,36],[1816,0,1023,2],[1816,11,1023,9],[1816,12,1023,10],[1816,15,1023,13,"_builder"],[1816,23,1023,21],[1816,24,1023,22,"default"],[1816,31,1023,9],[1816,48,1023,31],[1816,67,1023,9],[1816,76,1023,55,"args"],[1816,80,1023,9],[1816,82,1023,2],[1817,0,1024,1],[1819,0,1026,0],[1819,11,1026,9,"TSInferType"],[1819,22,1026,0],[1819,25,1026,30],[1820,0,1026,30],[1820,41,1026,24,"args"],[1820,45,1026,30],[1821,0,1026,24,"args"],[1821,6,1026,24,"args"],[1821,10,1026,30],[1822,0,1026,30],[1824,0,1027,2],[1824,11,1027,9],[1824,12,1027,10],[1824,15,1027,13,"_builder"],[1824,23,1027,21],[1824,24,1027,22,"default"],[1824,31,1027,9],[1824,48,1027,31],[1824,61,1027,9],[1824,70,1027,49,"args"],[1824,74,1027,9],[1824,76,1027,2],[1825,0,1028,1],[1827,0,1030,0],[1827,11,1030,9,"TSParenthesizedType"],[1827,30,1030,0],[1827,33,1030,38],[1828,0,1030,38],[1828,41,1030,32,"args"],[1828,45,1030,38],[1829,0,1030,32,"args"],[1829,6,1030,32,"args"],[1829,10,1030,38],[1830,0,1030,38],[1832,0,1031,2],[1832,11,1031,9],[1832,12,1031,10],[1832,15,1031,13,"_builder"],[1832,23,1031,21],[1832,24,1031,22,"default"],[1832,31,1031,9],[1832,48,1031,31],[1832,69,1031,9],[1832,78,1031,57,"args"],[1832,82,1031,9],[1832,84,1031,2],[1833,0,1032,1],[1835,0,1034,0],[1835,11,1034,9,"TSTypeOperator"],[1835,25,1034,0],[1835,28,1034,33],[1836,0,1034,33],[1836,41,1034,27,"args"],[1836,45,1034,33],[1837,0,1034,27,"args"],[1837,6,1034,27,"args"],[1837,10,1034,33],[1838,0,1034,33],[1840,0,1035,2],[1840,11,1035,9],[1840,12,1035,10],[1840,15,1035,13,"_builder"],[1840,23,1035,21],[1840,24,1035,22,"default"],[1840,31,1035,9],[1840,48,1035,31],[1840,64,1035,9],[1840,73,1035,52,"args"],[1840,77,1035,9],[1840,79,1035,2],[1841,0,1036,1],[1843,0,1038,0],[1843,11,1038,9,"TSIndexedAccessType"],[1843,30,1038,0],[1843,33,1038,38],[1844,0,1038,38],[1844,41,1038,32,"args"],[1844,45,1038,38],[1845,0,1038,32,"args"],[1845,6,1038,32,"args"],[1845,10,1038,38],[1846,0,1038,38],[1848,0,1039,2],[1848,11,1039,9],[1848,12,1039,10],[1848,15,1039,13,"_builder"],[1848,23,1039,21],[1848,24,1039,22,"default"],[1848,31,1039,9],[1848,48,1039,31],[1848,69,1039,9],[1848,78,1039,57,"args"],[1848,82,1039,9],[1848,84,1039,2],[1849,0,1040,1],[1851,0,1042,0],[1851,11,1042,9,"TSMappedType"],[1851,23,1042,0],[1851,26,1042,31],[1852,0,1042,31],[1852,41,1042,25,"args"],[1852,45,1042,31],[1853,0,1042,25,"args"],[1853,6,1042,25,"args"],[1853,10,1042,31],[1854,0,1042,31],[1856,0,1043,2],[1856,11,1043,9],[1856,12,1043,10],[1856,15,1043,13,"_builder"],[1856,23,1043,21],[1856,24,1043,22,"default"],[1856,31,1043,9],[1856,48,1043,31],[1856,62,1043,9],[1856,71,1043,50,"args"],[1856,75,1043,9],[1856,77,1043,2],[1857,0,1044,1],[1859,0,1046,0],[1859,11,1046,9,"TSLiteralType"],[1859,24,1046,0],[1859,27,1046,32],[1860,0,1046,32],[1860,41,1046,26,"args"],[1860,45,1046,32],[1861,0,1046,26,"args"],[1861,6,1046,26,"args"],[1861,10,1046,32],[1862,0,1046,32],[1864,0,1047,2],[1864,11,1047,9],[1864,12,1047,10],[1864,15,1047,13,"_builder"],[1864,23,1047,21],[1864,24,1047,22,"default"],[1864,31,1047,9],[1864,48,1047,31],[1864,63,1047,9],[1864,72,1047,51,"args"],[1864,76,1047,9],[1864,78,1047,2],[1865,0,1048,1],[1867,0,1050,0],[1867,11,1050,9,"TSExpressionWithTypeArguments"],[1867,40,1050,0],[1867,43,1050,48],[1868,0,1050,48],[1868,41,1050,42,"args"],[1868,45,1050,48],[1869,0,1050,42,"args"],[1869,6,1050,42,"args"],[1869,10,1050,48],[1870,0,1050,48],[1872,0,1051,2],[1872,11,1051,9],[1872,12,1051,10],[1872,15,1051,13,"_builder"],[1872,23,1051,21],[1872,24,1051,22,"default"],[1872,31,1051,9],[1872,48,1051,31],[1872,79,1051,9],[1872,88,1051,67,"args"],[1872,92,1051,9],[1872,94,1051,2],[1873,0,1052,1],[1875,0,1054,0],[1875,11,1054,9,"TSInterfaceDeclaration"],[1875,33,1054,0],[1875,36,1054,41],[1876,0,1054,41],[1876,41,1054,35,"args"],[1876,45,1054,41],[1877,0,1054,35,"args"],[1877,6,1054,35,"args"],[1877,10,1054,41],[1878,0,1054,41],[1880,0,1055,2],[1880,11,1055,9],[1880,12,1055,10],[1880,15,1055,13,"_builder"],[1880,23,1055,21],[1880,24,1055,22,"default"],[1880,31,1055,9],[1880,48,1055,31],[1880,72,1055,9],[1880,81,1055,60,"args"],[1880,85,1055,9],[1880,87,1055,2],[1881,0,1056,1],[1883,0,1058,0],[1883,11,1058,9,"TSInterfaceBody"],[1883,26,1058,0],[1883,29,1058,34],[1884,0,1058,34],[1884,41,1058,28,"args"],[1884,45,1058,34],[1885,0,1058,28,"args"],[1885,6,1058,28,"args"],[1885,10,1058,34],[1886,0,1058,34],[1888,0,1059,2],[1888,11,1059,9],[1888,12,1059,10],[1888,15,1059,13,"_builder"],[1888,23,1059,21],[1888,24,1059,22,"default"],[1888,31,1059,9],[1888,48,1059,31],[1888,65,1059,9],[1888,74,1059,53,"args"],[1888,78,1059,9],[1888,80,1059,2],[1889,0,1060,1],[1891,0,1062,0],[1891,11,1062,9,"TSTypeAliasDeclaration"],[1891,33,1062,0],[1891,36,1062,41],[1892,0,1062,41],[1892,41,1062,35,"args"],[1892,45,1062,41],[1893,0,1062,35,"args"],[1893,6,1062,35,"args"],[1893,10,1062,41],[1894,0,1062,41],[1896,0,1063,2],[1896,11,1063,9],[1896,12,1063,10],[1896,15,1063,13,"_builder"],[1896,23,1063,21],[1896,24,1063,22,"default"],[1896,31,1063,9],[1896,48,1063,31],[1896,72,1063,9],[1896,81,1063,60,"args"],[1896,85,1063,9],[1896,87,1063,2],[1897,0,1064,1],[1899,0,1066,0],[1899,11,1066,9,"TSAsExpression"],[1899,25,1066,0],[1899,28,1066,33],[1900,0,1066,33],[1900,41,1066,27,"args"],[1900,45,1066,33],[1901,0,1066,27,"args"],[1901,6,1066,27,"args"],[1901,10,1066,33],[1902,0,1066,33],[1904,0,1067,2],[1904,11,1067,9],[1904,12,1067,10],[1904,15,1067,13,"_builder"],[1904,23,1067,21],[1904,24,1067,22,"default"],[1904,31,1067,9],[1904,48,1067,31],[1904,64,1067,9],[1904,73,1067,52,"args"],[1904,77,1067,9],[1904,79,1067,2],[1905,0,1068,1],[1907,0,1070,0],[1907,11,1070,9,"TSTypeAssertion"],[1907,26,1070,0],[1907,29,1070,34],[1908,0,1070,34],[1908,41,1070,28,"args"],[1908,45,1070,34],[1909,0,1070,28,"args"],[1909,6,1070,28,"args"],[1909,10,1070,34],[1910,0,1070,34],[1912,0,1071,2],[1912,11,1071,9],[1912,12,1071,10],[1912,15,1071,13,"_builder"],[1912,23,1071,21],[1912,24,1071,22,"default"],[1912,31,1071,9],[1912,48,1071,31],[1912,65,1071,9],[1912,74,1071,53,"args"],[1912,78,1071,9],[1912,80,1071,2],[1913,0,1072,1],[1915,0,1074,0],[1915,11,1074,9,"TSEnumDeclaration"],[1915,28,1074,0],[1915,31,1074,36],[1916,0,1074,36],[1916,41,1074,30,"args"],[1916,45,1074,36],[1917,0,1074,30,"args"],[1917,6,1074,30,"args"],[1917,10,1074,36],[1918,0,1074,36],[1920,0,1075,2],[1920,11,1075,9],[1920,12,1075,10],[1920,15,1075,13,"_builder"],[1920,23,1075,21],[1920,24,1075,22,"default"],[1920,31,1075,9],[1920,48,1075,31],[1920,67,1075,9],[1920,76,1075,55,"args"],[1920,80,1075,9],[1920,82,1075,2],[1921,0,1076,1],[1923,0,1078,0],[1923,11,1078,9,"TSEnumMember"],[1923,23,1078,0],[1923,26,1078,31],[1924,0,1078,31],[1924,41,1078,25,"args"],[1924,45,1078,31],[1925,0,1078,25,"args"],[1925,6,1078,25,"args"],[1925,10,1078,31],[1926,0,1078,31],[1928,0,1079,2],[1928,11,1079,9],[1928,12,1079,10],[1928,15,1079,13,"_builder"],[1928,23,1079,21],[1928,24,1079,22,"default"],[1928,31,1079,9],[1928,48,1079,31],[1928,62,1079,9],[1928,71,1079,50,"args"],[1928,75,1079,9],[1928,77,1079,2],[1929,0,1080,1],[1931,0,1082,0],[1931,11,1082,9,"TSModuleDeclaration"],[1931,30,1082,0],[1931,33,1082,38],[1932,0,1082,38],[1932,41,1082,32,"args"],[1932,45,1082,38],[1933,0,1082,32,"args"],[1933,6,1082,32,"args"],[1933,10,1082,38],[1934,0,1082,38],[1936,0,1083,2],[1936,11,1083,9],[1936,12,1083,10],[1936,15,1083,13,"_builder"],[1936,23,1083,21],[1936,24,1083,22,"default"],[1936,31,1083,9],[1936,48,1083,31],[1936,69,1083,9],[1936,78,1083,57,"args"],[1936,82,1083,9],[1936,84,1083,2],[1937,0,1084,1],[1939,0,1086,0],[1939,11,1086,9,"TSModuleBlock"],[1939,24,1086,0],[1939,27,1086,32],[1940,0,1086,32],[1940,41,1086,26,"args"],[1940,45,1086,32],[1941,0,1086,26,"args"],[1941,6,1086,26,"args"],[1941,10,1086,32],[1942,0,1086,32],[1944,0,1087,2],[1944,11,1087,9],[1944,12,1087,10],[1944,15,1087,13,"_builder"],[1944,23,1087,21],[1944,24,1087,22,"default"],[1944,31,1087,9],[1944,48,1087,31],[1944,63,1087,9],[1944,72,1087,51,"args"],[1944,76,1087,9],[1944,78,1087,2],[1945,0,1088,1],[1947,0,1090,0],[1947,11,1090,9,"TSImportType"],[1947,23,1090,0],[1947,26,1090,31],[1948,0,1090,31],[1948,41,1090,25,"args"],[1948,45,1090,31],[1949,0,1090,25,"args"],[1949,6,1090,25,"args"],[1949,10,1090,31],[1950,0,1090,31],[1952,0,1091,2],[1952,11,1091,9],[1952,12,1091,10],[1952,15,1091,13,"_builder"],[1952,23,1091,21],[1952,24,1091,22,"default"],[1952,31,1091,9],[1952,48,1091,31],[1952,62,1091,9],[1952,71,1091,50,"args"],[1952,75,1091,9],[1952,77,1091,2],[1953,0,1092,1],[1955,0,1094,0],[1955,11,1094,9,"TSImportEqualsDeclaration"],[1955,36,1094,0],[1955,39,1094,44],[1956,0,1094,44],[1956,41,1094,38,"args"],[1956,45,1094,44],[1957,0,1094,38,"args"],[1957,6,1094,38,"args"],[1957,10,1094,44],[1958,0,1094,44],[1960,0,1095,2],[1960,11,1095,9],[1960,12,1095,10],[1960,15,1095,13,"_builder"],[1960,23,1095,21],[1960,24,1095,22,"default"],[1960,31,1095,9],[1960,48,1095,31],[1960,75,1095,9],[1960,84,1095,63,"args"],[1960,88,1095,9],[1960,90,1095,2],[1961,0,1096,1],[1963,0,1098,0],[1963,11,1098,9,"TSExternalModuleReference"],[1963,36,1098,0],[1963,39,1098,44],[1964,0,1098,44],[1964,41,1098,38,"args"],[1964,45,1098,44],[1965,0,1098,38,"args"],[1965,6,1098,38,"args"],[1965,10,1098,44],[1966,0,1098,44],[1968,0,1099,2],[1968,11,1099,9],[1968,12,1099,10],[1968,15,1099,13,"_builder"],[1968,23,1099,21],[1968,24,1099,22,"default"],[1968,31,1099,9],[1968,48,1099,31],[1968,75,1099,9],[1968,84,1099,63,"args"],[1968,88,1099,9],[1968,90,1099,2],[1969,0,1100,1],[1971,0,1102,0],[1971,11,1102,9,"TSNonNullExpression"],[1971,30,1102,0],[1971,33,1102,38],[1972,0,1102,38],[1972,41,1102,32,"args"],[1972,45,1102,38],[1973,0,1102,32,"args"],[1973,6,1102,32,"args"],[1973,10,1102,38],[1974,0,1102,38],[1976,0,1103,2],[1976,11,1103,9],[1976,12,1103,10],[1976,15,1103,13,"_builder"],[1976,23,1103,21],[1976,24,1103,22,"default"],[1976,31,1103,9],[1976,48,1103,31],[1976,69,1103,9],[1976,78,1103,57,"args"],[1976,82,1103,9],[1976,84,1103,2],[1977,0,1104,1],[1979,0,1106,0],[1979,11,1106,9,"TSExportAssignment"],[1979,29,1106,0],[1979,32,1106,37],[1980,0,1106,37],[1980,41,1106,31,"args"],[1980,45,1106,37],[1981,0,1106,31,"args"],[1981,6,1106,31,"args"],[1981,10,1106,37],[1982,0,1106,37],[1984,0,1107,2],[1984,11,1107,9],[1984,12,1107,10],[1984,15,1107,13,"_builder"],[1984,23,1107,21],[1984,24,1107,22,"default"],[1984,31,1107,9],[1984,48,1107,31],[1984,68,1107,9],[1984,77,1107,56,"args"],[1984,81,1107,9],[1984,83,1107,2],[1985,0,1108,1],[1987,0,1110,0],[1987,11,1110,9,"TSNamespaceExportDeclaration"],[1987,39,1110,0],[1987,42,1110,47],[1988,0,1110,47],[1988,41,1110,41,"args"],[1988,45,1110,47],[1989,0,1110,41,"args"],[1989,6,1110,41,"args"],[1989,10,1110,47],[1990,0,1110,47],[1992,0,1111,2],[1992,11,1111,9],[1992,12,1111,10],[1992,15,1111,13,"_builder"],[1992,23,1111,21],[1992,24,1111,22,"default"],[1992,31,1111,9],[1992,48,1111,31],[1992,78,1111,9],[1992,87,1111,66,"args"],[1992,91,1111,9],[1992,93,1111,2],[1993,0,1112,1],[1995,0,1114,0],[1995,11,1114,9,"TSTypeAnnotation"],[1995,27,1114,0],[1995,30,1114,35],[1996,0,1114,35],[1996,41,1114,29,"args"],[1996,45,1114,35],[1997,0,1114,29,"args"],[1997,6,1114,29,"args"],[1997,10,1114,35],[1998,0,1114,35],[2000,0,1115,2],[2000,11,1115,9],[2000,12,1115,10],[2000,15,1115,13,"_builder"],[2000,23,1115,21],[2000,24,1115,22,"default"],[2000,31,1115,9],[2000,48,1115,31],[2000,66,1115,9],[2000,75,1115,54,"args"],[2000,79,1115,9],[2000,81,1115,2],[2001,0,1116,1],[2003,0,1118,0],[2003,11,1118,9,"TSTypeParameterInstantiation"],[2003,39,1118,0],[2003,42,1118,47],[2004,0,1118,47],[2004,41,1118,41,"args"],[2004,45,1118,47],[2005,0,1118,41,"args"],[2005,6,1118,41,"args"],[2005,10,1118,47],[2006,0,1118,47],[2008,0,1119,2],[2008,11,1119,9],[2008,12,1119,10],[2008,15,1119,13,"_builder"],[2008,23,1119,21],[2008,24,1119,22,"default"],[2008,31,1119,9],[2008,48,1119,31],[2008,78,1119,9],[2008,87,1119,66,"args"],[2008,91,1119,9],[2008,93,1119,2],[2009,0,1120,1],[2011,0,1122,0],[2011,11,1122,9,"TSTypeParameterDeclaration"],[2011,37,1122,0],[2011,40,1122,45],[2012,0,1122,45],[2012,41,1122,39,"args"],[2012,45,1122,45],[2013,0,1122,39,"args"],[2013,6,1122,39,"args"],[2013,10,1122,45],[2014,0,1122,45],[2016,0,1123,2],[2016,11,1123,9],[2016,12,1123,10],[2016,15,1123,13,"_builder"],[2016,23,1123,21],[2016,24,1123,22,"default"],[2016,31,1123,9],[2016,48,1123,31],[2016,76,1123,9],[2016,85,1123,64,"args"],[2016,89,1123,9],[2016,91,1123,2],[2017,0,1124,1],[2019,0,1126,0],[2019,11,1126,9,"TSTypeParameter"],[2019,26,1126,0],[2019,29,1126,34],[2020,0,1126,34],[2020,41,1126,28,"args"],[2020,45,1126,34],[2021,0,1126,28,"args"],[2021,6,1126,28,"args"],[2021,10,1126,34],[2022,0,1126,34],[2024,0,1127,2],[2024,11,1127,9],[2024,12,1127,10],[2024,15,1127,13,"_builder"],[2024,23,1127,21],[2024,24,1127,22,"default"],[2024,31,1127,9],[2024,48,1127,31],[2024,65,1127,9],[2024,74,1127,53,"args"],[2024,78,1127,9],[2024,80,1127,2],[2025,0,1128,1],[2027,0,1130,0],[2027,11,1130,9,"NumberLiteral"],[2027,24,1130,0],[2027,27,1130,32],[2028,0,1131,2,"console"],[2028,4,1131,2,"console"],[2028,11,1131,9],[2028,12,1131,10,"trace"],[2028,17,1131,2],[2028,18,1131,16],[2028,82,1131,2],[2030,0,1130,32],[2030,41,1130,26,"args"],[2030,45,1130,32],[2031,0,1130,26,"args"],[2031,6,1130,26,"args"],[2031,10,1130,32],[2032,0,1130,32],[2034,0,1132,2],[2034,11,1132,9,"NumberLiteral"],[2034,24,1132,22],[2034,30,1132,9],[2034,40,1132,23],[2034,55,1132,9],[2034,64,1132,43,"args"],[2034,68,1132,9],[2034,70,1132,2],[2035,0,1133,1],[2037,0,1135,0],[2037,11,1135,9,"RegexLiteral"],[2037,23,1135,0],[2037,26,1135,31],[2038,0,1136,2,"console"],[2038,4,1136,2,"console"],[2038,11,1136,9],[2038,12,1136,10,"trace"],[2038,17,1136,2],[2038,18,1136,16],[2038,80,1136,2],[2040,0,1135,31],[2040,41,1135,25,"args"],[2040,45,1135,31],[2041,0,1135,25,"args"],[2041,6,1135,25,"args"],[2041,10,1135,31],[2042,0,1135,31],[2044,0,1137,2],[2044,11,1137,9,"RegexLiteral"],[2044,23,1137,21],[2044,29,1137,9],[2044,39,1137,22],[2044,53,1137,9],[2044,62,1137,41,"args"],[2044,66,1137,9],[2044,68,1137,2],[2045,0,1138,1],[2047,0,1140,0],[2047,11,1140,9,"RestProperty"],[2047,23,1140,0],[2047,26,1140,31],[2048,0,1141,2,"console"],[2048,4,1141,2,"console"],[2048,11,1141,9],[2048,12,1141,10,"trace"],[2048,17,1141,2],[2048,18,1141,16],[2048,78,1141,2],[2050,0,1140,31],[2050,41,1140,25,"args"],[2050,45,1140,31],[2051,0,1140,25,"args"],[2051,6,1140,25,"args"],[2051,10,1140,31],[2052,0,1140,31],[2054,0,1142,2],[2054,11,1142,9,"RestProperty"],[2054,23,1142,21],[2054,29,1142,9],[2054,39,1142,22],[2054,53,1142,9],[2054,62,1142,41,"args"],[2054,66,1142,9],[2054,68,1142,2],[2055,0,1143,1],[2057,0,1145,0],[2057,11,1145,9,"SpreadProperty"],[2057,25,1145,0],[2057,28,1145,33],[2058,0,1146,2,"console"],[2058,4,1146,2,"console"],[2058,11,1146,9],[2058,12,1146,10,"trace"],[2058,17,1146,2],[2058,18,1146,16],[2058,82,1146,2],[2060,0,1145,33],[2060,41,1145,27,"args"],[2060,45,1145,33],[2061,0,1145,27,"args"],[2061,6,1145,27,"args"],[2061,10,1145,33],[2062,0,1145,33],[2064,0,1147,2],[2064,11,1147,9,"SpreadProperty"],[2064,25,1147,23],[2064,31,1147,9],[2064,41,1147,24],[2064,57,1147,9],[2064,66,1147,45,"args"],[2064,70,1147,9],[2064,72,1147,2],[2065,0,1148,1]]},"type":"js/module"}]}